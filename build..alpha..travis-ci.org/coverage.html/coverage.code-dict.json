{"/home/travis/build/npmtest/node-npmtest-cca/test.js":"/* istanbul instrument in package npmtest_cca */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cca/lib.npmtest_cca.js":"/* istanbul instrument in package npmtest_cca */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_cca = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_cca = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-cca/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-cca && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_cca */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_cca\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_cca.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_cca.rollup.js'] =\n            local.assetsDict['/assets.npmtest_cca.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_cca.__dirname +\n                    '/lib.npmtest_cca.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/cca.js":"#!/usr/bin/env node\n/**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n */\n\n// System modules.\nvar fs = require('fs');\nvar path = require('path');\n\n// Third-party modules.\nvar Q = require('q');\nvar updateNotifier = require('update-notifier');\n\n// Local modules.\nvar utils = require('./utils');\n\n// Globals\nvar origDir = process.cwd();\nvar ccaRoot = path.join(__dirname, '..');\n\nvar cordova = require('cordova');\nvar cordovaLib = cordova.cordova_lib;\nvar hooks = require('./hooks');\n\nfunction main() {\n  cordovaLib.binname = 'cca';\n\n  var commandLineFlags = require('./parse-command-line')();\n  utils.exit.pause_on_exit = commandLineFlags.pause_on_exit;\n\n  // TODO: Should we support an opt out `--no-update-notifier`?\n  var pkg = require('../package.json');\n  updateNotifier({\n    pkg: pkg,\n    updateCheckInterval: 1000 * 60 * 60 * 24, // Daily\n  }).notify();\n\n  var command = commandLineFlags._[0];\n  var packageVersion = require('../package').version;\n\n  // Colorize after parseCommandLine to avoid --help being printed in red.\n  utils.colorizeConsole();\n\n  hooks.registerHooks();\n\n  function printCcaVersionPrefix() {\n    console.log('cca v' + packageVersion);\n  }\n\n  if (command == 'exec') {\n    return require('./tools-check').fixEnv()\n    .then(function() {\n      require('./exec')(process.argv.slice(3));\n    }).done(null, utils.fatal);\n  }\n\n  if (commandLineFlags.v) {\n    command = 'version';\n  }\n  if (commandLineFlags.h || !command) {\n    command = 'help';\n  }\n\n  function autoAddPlatforms() {\n    var plats = [];\n    if (process.argv.indexOf('android') != -1 && !fs.existsSync(path.join('platforms', 'android'))) {\n      plats.push('android');\n    }\n    if (process.argv.indexOf('ios') != -1 && !fs.existsSync(path.join('platforms', 'ios'))) {\n      plats.push('ios');\n    }\n    if (plats.length === 0) {\n      return Q();\n    }\n    var argv = require('optimist')\n        .options('link', { type: 'boolean' })\n        .options('verbose', { type: 'boolean', alias: 'd' })\n        .argv;\n    var opts = {\n      link: argv.link,\n      verbose: argv.verbose\n    };\n    return require('./cordova-commands').runCmd(['platform', 'add', plats, opts])\n    .then(require('./write-out-cca-version'));\n  }\n\n  function beforeCordovaPrepare() {\n    return autoAddPlatforms()\n    .then(function() {\n      if (commandLineFlags['skip-upgrade']) {\n        return;\n      }\n      if (!fs.existsSync(path.join('www', 'manifest.json'))) {\n        return Q.reject('This is not a cca project (no www/manifest.json file). Perhaps you meant to use the cordova-cli?');\n      }\n      return require('./upgrade-project').upgradeProjectIfStale(commandLineFlags.y);\n    });\n  }\n\n  function forwardCurrentCommandToCordova() {\n    // Unregister some event handlers in cordova-lib EventEmitter. Otherwise\n    // double printouts will happen because cordova-cli registers its own\n    // handlers. This is only relevant when --verbose or -d flag is used.\n    cordovaLib.events.removeListener('results', console.log);\n    cordovaLib.events.removeListener('log', console.log);\n    cordovaLib.events.removeListener('warn', console.warn);\n    cordovaLib.events.removeListener('verbose', console.log);\n\n    // TODO: Can we replace use of CLI here?  Calls to cordova-lib cordova.raw?\n    return cordova.cli(process.argv);\n  }\n\n  function printVersionThenPrePrePrepareThenForwardCommandToCordova() {\n    printCcaVersionPrefix();\n    return beforeCordovaPrepare()\n      .then(forwardCurrentCommandToCordova);\n  }\n\n  var commandActions = {\n    'pre-prepare': function() {\n      return require('./pre-prepare')();\n    },\n    'update-app': function() {\n      // TODO: deprecated command, use post-prepare instead\n      return commandActions['post-prepare']();\n    },\n    'post-prepare': function() {\n      return require('./post-prepare')();\n    },\n    'checkenv': function() {\n      printCcaVersionPrefix();\n      return require('./tools-check')();\n    },\n    'push': function() {\n      printCcaVersionPrefix();\n      return Q.fcall(function() {\n        var extraFlag = commandLineFlags._[1] || '';\n        if (extraFlag) {\n          require('optimist').showHelp(console.log);\n          return Q.reject('Flag \"' + extraFlag + '\" not understood.  Did you mean `--target=' + extraFlag + '`?');\n        }\n        return require('./push-to-harness')(commandLineFlags.target, commandLineFlags.watch);\n      });\n    },\n    'run': function() {\n      printCcaVersionPrefix();\n      var platform = commandLineFlags._[1];\n      if (platform === 'chrome' || platform === 'canary') {\n        return require('./run-in-chrome')(platform);\n      } else {\n        return beforeCordovaPrepare()\n          .then(forwardCurrentCommandToCordova);\n      }\n    },\n    'create': function() {\n      printCcaVersionPrefix();\n      return Q.fcall(function() {\n        var destAppDir = commandLineFlags._[1] || '';\n        if (!destAppDir) {\n          require('optimist').showHelp(console.log);\n          return Q.reject('No output directory given.');\n        }\n        // resolve turns relative paths into absolute\n        destAppDir = path.resolve(destAppDir);\n        var packageId = commandLineFlags._[2] || '';\n        var appName = commandLineFlags._[3] || '';\n        return require('./create-app')(destAppDir, ccaRoot, origDir, packageId, appName, commandLineFlags);\n      });\n    },\n    'upgrade': function() {\n      printCcaVersionPrefix();\n      return require('./upgrade-project').upgradeProject(true); // true means never prompt for upgrade\n    },\n    'version': function() {\n      console.log(packageVersion);\n      return Q.when();\n    },\n    'help': function() {\n      printCcaVersionPrefix();\n      require('optimist').showHelp(console.log);\n      return Q.when();\n    },\n    'plugin': printVersionThenPrePrePrepareThenForwardCommandToCordova,\n    'plugins': function() {\n      return commandActions.plugin.apply(this, arguments);\n    },\n    'platform': function() {\n      printCcaVersionPrefix();\n      // Do not run auto-upgrade step if doing a platforms command\n      return forwardCurrentCommandToCordova();\n    },\n    'platforms': function() {\n      return commandActions.platform.apply(this, arguments);\n    },\n    'analytics': function() {\n      // Do nothing.  This is handled as a special-case below.\n      return Q.when();\n    },\n    'build': printVersionThenPrePrePrepareThenForwardCommandToCordova,\n    'compile': printVersionThenPrePrePrepareThenForwardCommandToCordova,\n    'emulate': printVersionThenPrePrePrepareThenForwardCommandToCordova,\n    'prepare': printVersionThenPrePrePrepareThenForwardCommandToCordova,\n    'serve': printVersionThenPrePrePrepareThenForwardCommandToCordova,\n  };\n\n  // TODO(mmocny): The following few lines seem to make global changes that affect all other subcommands.\n  // May want to break this out to a module as an \"init\" step that every other step ensures has been called.\n  cordovaLib.cordova.config.setAutoPersist(false);\n  var projectRoot = cordovaLib.cordova.findProjectRoot();\n  if (projectRoot) {\n    cordovaLib.cordova.config(projectRoot, require('./default-config')(ccaRoot));\n    process.chdir(projectRoot);\n  }\n\n  if (!commandActions.hasOwnProperty(command)) {\n    utils.fatal('Invalid command: ' + command + '. Use --help for usage.');\n  }\n\n  // In verbose mode, print all cordova events\n  if (commandLineFlags.d) {\n    // TODO: its possible we want to console.log the results for some cordova commands even in non-verbose mode\n    cordovaLib.events.on('results', console.log);\n    cordovaLib.events.on('log', console.log);\n    cordovaLib.events.on('warn', console.warn);\n    cordovaLib.events.on('verbose', console.log);\n  }\n\n  // If the command is an analytics command, act accordingly.\n  // We do this now because it's a special case.  If this is the user's first command, a prompt doesn't make sense.\n  var analyticsLoader = require('./analytics-loader');\n  if (command === 'analytics') {\n    analyticsLoader.analyticsCommand(commandLineFlags._[1]);\n  }\n\n  if (commandLineFlags['android-minSdkVersion']) {\n    process.env['ORG_GRADLE_PROJECT_cdvMinSdkVersion'] = commandLineFlags['android-minSdkVersion'];\n  }\n\n  analyticsLoader.getAnalyticsModule()\n  .then(function(analytics) {\n    analytics.sendEvent('cca', command);\n  }).then(commandActions[command])\n  .then(null, function(e) {\n    if (e instanceof cordovaLib.CordovaError) {\n      utils.fatal(e.message.replace(/\\bcordova /, 'cca '));\n    } else {\n      throw e;\n    }\n  }).done();\n}\n\nif (require.main === module) {\n    main();\n} else {\n    module.exports.parseCLI = main;\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/utils.js":"var Q = require('q');\nvar path = require('path');\nvar childProcess = require('child_process');\n\nexports.exit = function exit(code) {\n  if (exports.exit.pause_on_exit) {\n    exports.waitForKey(function() {\n      process.exit(code);\n    });\n  } else {\n    process.exit(code);\n  }\n};\nexports.exit.pause_on_exit = false;\n\nexports.fatal = function fatal(msg) {\n  console.error(msg);\n  if (msg && msg.stack) console.error(msg.stack);\n  exports.exit(1);\n};\n\nexports.fixPathSlashes = function fixPathSlashes(p) {\n  return exports.isWindows() ? p.replace(/\\//g, '\\\\') : p;\n};\n\nexports.colorizeConsole = function colorizeConsole() {\n  var origWarn = console.warn;\n  console.warn = function() {\n    var msg = [].slice.call(arguments).join(' ');\n    origWarn.call(console, '\\x1B[33m' + msg + '\\x1B[39m');\n  };\n  console.error = function() {\n    var msg = [].slice.call(arguments).join(' ');\n    origWarn.call(console, '\\x1B[31m' + msg + '\\x1B[39m');\n  };\n};\n\nexports.assetDirForPlatform = function assetDirForPlatform(platform) {\n  if (platform === 'android') {\n    return path.join('platforms', platform, 'assets','www');\n  }\n  return path.join('platforms', platform, 'www');\n};\n\n// Returns a promise for an object with 'stdout' and 'stderr' as keys.\nexports.exec = function exec(cmd, opt_silent) {\n  if (!opt_silent) {\n    console.log('Running: ' + cmd);\n  }\n  var d = Q.defer();\n  childProcess.exec(cmd, function(error, stdout, stderr) {\n    if (error) {\n      d.reject(error);\n    } else {\n      d.resolve({\n        stdout: stdout.trim(),\n        stderr: stderr.trim()\n      });\n    }\n  });\n  return d.promise;\n};\n\n// Returns a promise with the key as its value.\nexports.waitForKey = function waitForKey(opt_prompt) {\n  opt_prompt = opt_prompt || 'Press the Any Key';\n  process.stdout.write(opt_prompt);\n  process.stdin.resume();\n  try {\n    // This fails if the process is a spawned child (likely a node bug);\n    process.stdin.setRawMode(true);\n  } catch (e) {\n  }\n  process.stdin.setEncoding('utf8');\n  var d = Q.defer();\n  process.stdin.on('data', function cont(key) {\n    if (key == '\\u0003') {\n      process.exit(2);\n    }\n    process.stdin.removeListener('data', cont);\n    process.stdin.pause();\n    process.stdout.write('\\n');\n    d.resolve(key);\n  });\n  return d.promise;\n};\n\nexports.isWindows = function isWindows() {\n  return process.platform.slice(0, 3) == 'win';\n};\n\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/hooks.js":"var cordova = require('cordova');\nvar prePrepare = require('./pre-prepare');\nvar postPrepare = require('./post-prepare');\nvar beforePluginAdd = require('./before-plugin-add');\n\nvar cordovaLib = cordova.cordova_lib;\n\nfunction registerHooks() {\n  cordovaLib.events.on('before_prepare', prePrepare);\n  cordovaLib.events.on('after_prepare', postPrepare);\n  cordovaLib.events.on('before_plugin_add', beforePluginAdd);\n}\n\nfunction unregisterHooks() {\n  cordovaLib.events.removeListener('before_prepare', prePrepare);\n  cordovaLib.events.removeListener('after_prepare', postPrepare);\n  cordovaLib.events.removeListener('before_plugin_add', beforePluginAdd);\n}\n\nexports.registerHooks = registerHooks;\nexports.unregisterHooks = unregisterHooks;\nexports.prePrepare = prePrepare;\nexports.postPrepare = postPrepare;\nexports.beforePluginAdd = beforePluginAdd;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/pre-prepare.js":"/**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n */\n\n'use strict';\n\nvar fs = require('fs');\nvar et = require('elementtree');\nvar xmldom = require('xmldom');\nvar path = require('path');\n// Use double underscore because the Node REPL uses \"_\" to hold the result of the last operation.\nvar __ = require('underscore');\nvar utils = require('./utils');\nvar ccaManifestLogic = require('cca-manifest-logic');\nvar cordova = require('cordova');\nvar cordovaLib = cordova.cordova_lib;\n\n// Returns a promise.\nmodule.exports = exports = function prePrepareCommand(context) {\n  // context is the Context object passed in by cordova-lib/HooksRunner.\n  var pluginsToBeInstalled = [];\n  var pluginsToBeNotInstalled = [];\n  var pluginsNotRecognized = [];\n  var manifest, whitelist;\n  // Convert all plugin IDs to lower case (registry has problems with upper case).\n  var installedPlugins = context.cordova.plugins.map(function(s) { return s.toLowerCase(); });\n\n  var argv = require('optimist')\n      .options('webview', { type: 'string' })\n      .options('release', { type: 'boolean' })\n      .options('link', { type: 'boolean' })\n      .options('verbose', { type: 'boolean', alias: 'd' })\n      .argv;\n\n  // Pre-prepare manifest check and project munger\n  return require('./get-manifest')('www')\n  .then(function(m) {\n    manifest = m;\n    if (argv.webview) {\n        manifest.webview = argv.webview;\n    }\n\n    return ccaManifestLogic.analyseManifest(manifest);\n  })\n  .then(function(manifestData) {\n    pluginsToBeInstalled = manifestData.pluginsToBeInstalled.concat(['org.chromium.cca-hooks']);\n    pluginsToBeNotInstalled = manifestData.pluginsToBeNotInstalled.concat();\n    pluginsNotRecognized = manifestData.pluginsNotRecognized;\n    whitelist = manifestData.whitelist;\n\n    var configXmlData = fs.readFileSync('config.xml', 'utf8');\n    var configXmlDom = new xmldom.DOMParser().parseFromString(configXmlData);\n    ccaManifestLogic.updateConfigXml(manifest, manifestData, configXmlDom);\n    var newConfigData = new xmldom.XMLSerializer().serializeToString(configXmlDom);\n    // Don't write out if nothing actually changed\n    if (newConfigData != configXmlData) {\n      console.log('## Updating config.xml from manifest.json');\n      fs.writeFileSync('config.xml', newConfigData);\n    }\n  })\n  .then(function() {\n    if ( (context.cordova.platforms.indexOf('android') != -1) && argv['release']) {\n      if (!fs.existsSync('android-release-keys.properties')) {\n        utils.fatal('Cannot build android in release mode: android-release-keys.properties not found in project root.');\n      }\n    }\n    // Add a URL type to the iOS project's .plist file.\n    // This is necessary for chrome.identity to redirect back to the app after authentication.\n    var hasIos = fs.existsSync(path.join('platforms', 'ios'));\n    if (hasIos) {\n      var platforms = cordovaLib.cordova_platforms;\n      var parser = platforms.getPlatformApi('ios');\n      var infoPlistPath = path.join('platforms', 'ios', parser._parser.originalName, parser._parser.originalName + '-Info.plist');\n      var infoPlistXml = et.parse(fs.readFileSync(infoPlistPath, 'utf-8'));\n\n      var rootPlistElement = infoPlistXml.getroot();\n      var rootDictElement = rootPlistElement.getItem(0);\n\n      var bundleUrlTypesKey = et.SubElement(rootDictElement, 'key');\n      bundleUrlTypesKey.text = 'CFBundleURLTypes';\n      var bundleUrlTypesArray = et.SubElement(rootDictElement, 'array');\n      var bundleUrlTypesDict = et.SubElement(bundleUrlTypesArray, 'dict');\n\n      var bundleTypeRoleKey = et.SubElement(bundleUrlTypesDict, 'key');\n      bundleTypeRoleKey.text = 'CFBundleTypeRole';\n      var bundleTypeRoleString = et.SubElement(bundleUrlTypesDict, 'string');\n      bundleTypeRoleString.text = 'Editor';\n\n      var bundleUrlNameKey = et.SubElement(bundleUrlTypesDict, 'key');\n      bundleUrlNameKey.text = 'CFBundleURLName';\n      var bundleUrlNameString = et.SubElement(bundleUrlTypesDict, 'string');\n      bundleUrlNameString.text = manifest.packageId;\n\n      var bundleUrlSchemesKey = et.SubElement(bundleUrlTypesDict, 'key');\n      bundleUrlSchemesKey.text = 'CFBundleURLSchemes';\n      var bundleUrlSchemesArray = et.SubElement(bundleUrlTypesDict, 'array');\n      var bundleUrlSchemeString = et.SubElement(bundleUrlSchemesArray, 'string');\n      bundleUrlSchemeString.text = manifest.packageId;\n\n      fs.writeFileSync(infoPlistPath, infoPlistXml.write({indent: 4}), 'utf-8');\n    }\n  })\n  .then(function() {\n    var missingPlugins = __.difference(pluginsToBeInstalled, installedPlugins);\n    var excessPlugins = __.intersection(installedPlugins, pluginsToBeNotInstalled);\n\n    function pinVersion(pluginId, version) {\n      var idx = missingPlugins.indexOf(pluginId);\n      if (idx != -1) {\n        missingPlugins[idx] += '@' + version;\n      }\n    }\n\n    if (missingPlugins.length || excessPlugins.length || pluginsNotRecognized.length) {\n      console.log('## Updating plugins based on manifest.json');\n      pluginsNotRecognized.forEach(function(unknownPermission) {\n        console.warn('Permission not recognized by cca: ' + unknownPermission + ' (ignoring)');\n      });\n      var opts = {\n        link: argv.link,\n        verbose: argv.verbose\n      };\n      var cmds = [];\n      if (missingPlugins.length) {\n        // Pin major versions of plugins that we care about\n        pinVersion('cordova-plugin-chrome-apps-navigation', '1');\n        pinVersion('cordova-plugin-chrome-apps-i18n', '2');\n        pinVersion('cordova-plugin-chrome-apps-bootstrap', '3');\n        pinVersion('cordova-plugin-crosswalk-webview', '1');\n\n        cmds.push(['plugin', 'add', missingPlugins, opts]);\n      }\n      if (excessPlugins.length) {\n        cmds.push(['plugin', 'rm', excessPlugins, opts]);\n      }\n      return require('./cordova-commands').runAllCmds(cmds);\n    }\n  })\n  .then(function() {\n    // After adding/removing plugins above, the list of installed plugins is:\n    installedPlugins = __.difference(__.union(installedPlugins, pluginsToBeInstalled), pluginsToBeNotInstalled);\n    // If chrome.identity is installed, we need a client id.\n    if (installedPlugins.indexOf('cordova-plugin-chrome-apps-identity') >= 0) {\n      if (!manifest.oauth2 || !manifest.oauth2.client_id) {\n        console.warn('Warning: chrome.identity requires a client ID to be specified in the manifest.');\n      }\n    }\n\n  });\n};\n\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca-manifest-logic/main.js":"/**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n */\n\nexports.analyseManifest = require('./src/analyse-manifest');\nexports.parseAndMergeManifests = require('./src/parse-and-merge-manifests');\nexports.updateConfigXml = require('./src/update-config-xml');\nexports.pluginMaps = require('./src/plugin-maps');\n\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca-manifest-logic/src/analyse-manifest.js":"/**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n */\n\nvar pluginMaps = require('./plugin-maps');\nvar DEFAULT_PLUGINS = pluginMaps.DEFAULT_PLUGINS;\nvar PLUGIN_MAP = pluginMaps.PLUGIN_MAP;\nvar STALE_PLUGINS = pluginMaps.STALE_PLUGINS;\nvar ENGINE_MAP = pluginMaps.ENGINE_MAP;\nvar SOCKETS_MAP = pluginMaps.SOCKETS_MAP;\n\nfunction mapPermissionsToPlugins(knownPermissionsMap, requestedPermissionsList) {\n  // We have to create three lists:\n  // 1. Permissions your app has requested and we know about (install these plugins)\n  // 2. Permissions your app has requested and we do not know about (warn about these)\n  // 3. Permissions your app has not requested (uninstall these plugins)\n  var ret = {\n    toInstall: [],\n    toUninstall: [],\n    unknown: [],\n  };\n\n  var knownPermissionsList = Object.keys(knownPermissionsMap);\n  requestedPermissionsList = requestedPermissionsList.slice(); // deep copy so we can modify in-place\n\n  requestedPermissionsList.forEach(function(requestedPermission) {\n    // Is this permission known?\n    var idx = knownPermissionsList.indexOf(requestedPermission);\n    if (idx != -1) {\n      ret.toInstall = ret.toInstall.concat(knownPermissionsMap[requestedPermission]);\n      // Remove from the list of known permissions, so that at the end of this we have all known permissions that arent requested\n      knownPermissionsList.splice(idx,1);\n    } else {\n      ret.unknown.push(requestedPermission);\n    }\n  });\n  // Uninstall whatever is left, since it was not requested\n  knownPermissionsList.forEach(function(permission) {\n    ret.toUninstall = ret.toUninstall.concat(knownPermissionsMap[permission]);\n  });\n  // Final step, bit of a hack, remove duplicate plugins from toUninstall list that exist in toInstall\n  // e.g. syncFS depends on identity.  So, even if identity isn't in your manifest, don't uninstall it if you have syncFS\n  // The way we handle this is to add identity to the list of plugins to install for the syncFS permission\n  // so, the last thing to do is subtract the plugins to install from the plugins to not install, since there can be overlap.\n  ret.toUninstall = ret.toUninstall.filter(function(plugin) {\n    return ret.toInstall.indexOf(plugin) == -1;\n  });\n\n  return ret;\n}\n\nmodule.exports = function analyseManifest(manifest, options) {\n  options = options || {};\n  var ret = {\n    appId: undefined,\n    whitelist: [],\n    permissions: [],\n    pluginsToBeInstalled: [],\n    pluginsToBeNotInstalled: [],\n    pluginsNotRecognized: [],\n  };\n\n  (manifest.permissions || []).forEach(function(permission) {\n    if (typeof permission === \"object\") {\n      ret.permissions = ret.permissions.concat(Object.keys(permission));\n    } else if (permission === \"<all_urls>\") {\n      ret.whitelist.push(\"*\");\n    } else {\n      var matchPatternParts = /([^:]+:\\/\\/[^\\/]+)(\\/.*)$/.exec(permission);\n      if (matchPatternParts) {\n        // Disregard paths in host permissions: path is required, but\n        // <scheme>://<host>/<any path> should translate to <scheme>://<host>/*\n        ret.whitelist.push(matchPatternParts[1] + \"/*\");\n      } else {\n        ret.permissions.push(permission);\n      }\n    }\n  });\n\n  var pluginsForPermissions = mapPermissionsToPlugins(PLUGIN_MAP, ret.permissions);\n  var engineSpec = options.webview || manifest.webview || \"crosswalk\";\n  ret.engineName = engineSpec.replace(/@.*/, '');\n  ret.engineVer = engineSpec.slice(ret.engineName.length + 1);\n  var pluginsForEngines = mapPermissionsToPlugins(ENGINE_MAP, [ret.engineName]);\n  var pluginsForSockets = mapPermissionsToPlugins(SOCKETS_MAP, Object.keys(manifest.sockets || {}));\n\n  ret.pluginsToBeInstalled = [].concat.apply([], [\n      pluginsForPermissions.toInstall,\n      pluginsForEngines.toInstall,\n      pluginsForSockets.toInstall,\n      DEFAULT_PLUGINS\n    ]);\n  ret.pluginsToBeNotInstalled = [].concat.apply([], [\n      pluginsForPermissions.toUninstall,\n      pluginsForEngines.toUninstall,\n      pluginsForSockets.toUninstall,\n      STALE_PLUGINS\n    ]);\n  ret.pluginsNotRecognized = pluginsForPermissions.unknown.concat(pluginsForSockets.unknown);\n\n  // Special case for bluetooth, since it uses boolean flags and not just the existance of keys.\n  if (manifest.bluetooth && typeof manifest.bluetooth === 'object') {\n    ret.pluginsToBeInstalled.push('cordova-plugin-chrome-apps-bluetooth');\n    (manifest.bluetooth.low_energy ? ret.pluginsToBeInstalled : ret.pluginsToBeNotInstalled).push('cordova-plugin-chrome-apps-bluetoothlowenergy');\n    (manifest.bluetooth.socket ? ret.pluginsToBeInstalled : ret.pluginsToBeNotInstalled).push('cordova-plugin-chrome-apps-bluetoothsocket');\n  } else {\n    ret.pluginsToBeNotInstalled = ret.pluginsToBeNotInstalled.concat([\n      'cordova-plugin-chrome-apps-bluetoothlowenergy',\n      'cordova-plugin-chrome-apps-bluetoothsocket',\n      'cordova-plugin-chrome-apps-bluetooth'\n    ]);\n  }\n\n  // This next filter seems needless, but it happens when we still want plugins installed for which there are missing permissions, e.g. chrome.storage\n  ret.pluginsToBeNotInstalled = ret.pluginsToBeNotInstalled.filter(function(plugin) {\n    return ret.pluginsToBeInstalled.indexOf(plugin) == -1;\n  });\n\n  // Take only unique values\n  ret.pluginsToBeInstalled = ret.pluginsToBeInstalled.sort().filter(function(value, index, self) {\n    return self.indexOf(value) === index;\n  });\n  ret.pluginsToBeNotInstalled = ret.pluginsToBeNotInstalled.sort().filter(function(value, index, self) {\n    return self.indexOf(value) === index;\n  });\n  ret.pluginsNotRecognized = ret.pluginsNotRecognized.sort().filter(function(value, index, self) {\n    return self.indexOf(value) === index;\n  });\n\n  // This should happen rarely\n  pluginsForEngines.unknown.forEach(function(unknownEngine) {\n    console.warn('Engine not supported by cca: ' + unknownEngine + ' (skipping)');\n  });\n\n  if (manifest.key) {\n    ret.appId = require('./chrome-app-key-to-id')(manifest.key);\n  } else {\n    ret.appId = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa';\n  }\n\n  return ret;\n};\n\nfunction createCspString(manifest, platform) {\n  // Allow apps to define their own CSP.\n  if (manifest.csp) {\n    return manifest.csp;\n  }\n  var defaultSrc = 'file: data: blob: chrome-extension: gopher:';\n  if (platform == 'ios') {\n    defaultSrc += ' gap:';\n  } else if (platform == 'android') {\n    // Required for TalkBack\n    defaultSrc += ' https://ssl.gstatic.com';\n  }\n  if (manifest.cspUnsafeEval) {\n    defaultSrc += \" 'unsafe-eval'\";\n  }\n  if (manifest.cspUnsafeInline) {\n    defaultSrc += \" 'unsafe-inline'\";\n  }\n  var ret = 'default-src ' + defaultSrc + ';';\n  ret += ' connect-src *; media-src *;';\n  if (!manifest.cspUnsafeInline) {\n    ret += ' style-src ' + defaultSrc + \" 'unsafe-inline';\";\n  }\n  return ret;\n}\nmodule.exports.createCspString = createCspString;\n\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca-manifest-logic/src/plugin-maps.js":"/*\n * NOTE!\n * If you remove/rename a plugin from these lists, add the old value to the STALE_PLUGINS list at the end.\n * That way, it will be automatically removed on prepare.\n * */\n\n\nvar DEFAULT_PLUGINS = [\n    'cordova-plugin-background-app',\n    'cordova-plugin-file',\n    'cordova-plugin-inappbrowser',\n    'cordova-plugin-network-information',\n    'cordova-plugin-statusbar',\n    'cordova-plugin-whitelist@1.0.0',\n    'cordova-plugin-chrome-apps-common',\n    'cordova-plugin-chrome-apps-runtime',\n    'cordova-plugin-chrome-apps-storage',\n    'cordova-plugin-chrome-apps-navigation',\n    'cordova-plugin-chrome-apps-bootstrap',\n    'cordova-plugin-chrome-apps-i18n',\n    'cordova-plugin-customevent-polyfill',\n    'cordova-plugin-blob-constructor-polyfill',\n    'cordova-plugin-xhr-blob-polyfill',\n];\n\nvar PLUGIN_MAP = {\n  'alarms': ['cordova-plugin-chrome-apps-alarms', 'cordova-plugin-chrome-apps-storage'],\n  'audioCapture': ['cordova-plugin-chrome-apps-audiocapture'],\n  'background': [],\n  'fileSystem': ['cordova-plugin-chrome-apps-filesystem'],\n  'fullscreen': [],\n  'gcm': ['cordova-plugin-chrome-apps-gcm', 'cordova-plugin-chrome-apps-storage'],\n  'geolocation': ['cordova-plugin-geolocation'],\n  'identity': ['cordova-plugin-chrome-apps-identity'],\n  'idle': ['cordova-plugin-chrome-apps-idle'],\n  'notifications': ['cordova-plugin-chrome-apps-notifications', 'cordova-plugin-chrome-apps-storage'],\n  'payments': ['cordova-plugin-google-payments'],\n  'power': ['cordova-plugin-chrome-apps-power'],\n  'proxy': ['cordova-plugin-chrome-apps-proxy'],\n  'pushMessaging': ['cordova-plugin-chrome-apps-pushmessaging', 'cordova-plugin-chrome-apps-identity'],\n  'socket': ['cordova-plugin-chrome-apps-socket', 'cordova-plugin-chrome-apps-system-network'],\n  'storage': ['cordova-plugin-chrome-apps-storage'],\n  'system.cpu': ['cordova-plugin-chrome-apps-system-cpu'],\n  'system.display': ['cordova-plugin-chrome-apps-system-display'],\n  'system.memory': ['cordova-plugin-chrome-apps-system-memory'],\n  'system.network': ['cordova-plugin-chrome-apps-system-network'],\n  'system.storage': ['cordova-plugin-chrome-apps-system-storage'],\n  'unlimitedStorage': [],\n  'videoCapture': ['cordova-plugin-chrome-apps-videocapture'],\n  'usbDevices': ['cordova-plugin-chrome-apps-usb'],\n  'usb': ['cordova-plugin-chrome-apps-usb'],\n};\n\nvar STALE_PLUGINS = [\n  'com.google.payments',\n  'org.apache.cordova.engine.crosswalk',\n  'org.chromium.syncfilesystem',\n  'org.chromium.alarms',\n  'org.chromium.audiocapture',\n  'org.chromium.backgroundapp',\n  'org.chromium.bluetooth',\n  'org.chromium.bluetoothlowenergy',\n  'org.chromium.bluetoothsocket',\n  'org.chromium.bootstrap',\n  'org.chromium.common',\n  'org.chromium.filesystem',\n  'org.chromium.gcm',\n  'org.chromium.i18n',\n  'org.chromium.identity',\n  'org.chromium.idle',\n  'org.chromium.iossocketscommon',\n  'org.chromium.navigation',\n  'org.chromium.notifications',\n  'org.chromium.polyfill.blob_constructor',\n  'org.chromium.polyfill.customevent',\n  'org.chromium.polyfill.xhr_features',\n  'org.chromium.power',\n  'org.chromium.pushmessaging',\n  'org.chromium.runtime',\n  'org.chromium.socket',\n  'org.chromium.sockets.tcp',\n  'org.chromium.sockets.tcpserver',\n  'org.chromium.sockets.udp',\n  'org.chromium.storage',\n  'org.chromium.system.cpu',\n  'org.chromium.system.display',\n  'org.chromium.system.memory',\n  'org.chromium.system.network',\n  'org.chromium.system.storage',\n  'org.chromium.usb',\n  'org.chromium.videocapture',\n  'org.chromium.frameworks.googleopensource',\n  'org.chromium.frameworks.googleplus',\n  'org.crosswalk.engine'\n];\n\nvar ENGINE_MAP = {\n  'crosswalk': ['cordova-plugin-crosswalk-webview'],\n  'system': []\n};\n\nvar SOCKETS_MAP = {\n  'udp': ['cordova-plugin-chrome-apps-sockets-udp'],\n  'tcp': ['cordova-plugin-chrome-apps-sockets-tcp'],\n  'tcpServer': ['cordova-plugin-chrome-apps-sockets-tcpserver'],\n};\n\n\nexports.DEFAULT_PLUGINS = DEFAULT_PLUGINS;\nexports.PLUGIN_MAP = PLUGIN_MAP;\nexports.STALE_PLUGINS = STALE_PLUGINS;\nexports.ENGINE_MAP = ENGINE_MAP;\nexports.SOCKETS_MAP = SOCKETS_MAP;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca-manifest-logic/src/parse-and-merge-manifests.js":"/**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n */\n\n// Returns a promise for the manifest contents.\nmodule.exports = exports = function parseAndMergeManifests(manifestPath, platform, readFileFunc, Q) {\n  var manifestMobilePath = manifestPath.replace(/manifest.json$/, 'manifest.mobile.json');\n  var manifest, manifestMobile;\n\n  return readFileFunc(manifestPath).then(function(manifestData) {\n    try {\n      // jshint evil:true\n      manifest = eval('(' + manifestData + ')');\n      // jshint evil:false\n    } catch (e) {\n      console.error(e);\n      throw new Error('Unable to parse manifest ' + manifestPath);\n    }\n    return readFileFunc(manifestMobilePath).then(function(manifestMobileData) {\n      try {\n        // jshint evil:true\n        manifestMobile = eval('(' + manifestMobileData + ')');\n        // jshint evil:false\n      } catch (e) {\n        console.error(e);\n        throw new Error('Unable to parse manifest ' + manifestPath);\n      }\n    }, function(err) {\n      // Swallow any errors opening the mobile manifest, it's not required.\n    }).then(function() {\n      var extend = require('node.extend');\n      manifest = extend(true, manifest, manifestMobile); // true -> deep recursive merge of these objects\n      // If you want a specific platform manifest, also merge in its platform specific settings\n      if (platform && platform in manifest) {\n        manifest = extend(true, manifest, manifest[platform]);\n      }\n      return manifest;\n    });\n  }, function(err) {\n    throw new Error('Unable to open manifest ' + manifestPath + ' for reading.');\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca-manifest-logic/src/update-config-xml.js":"/**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n */\n\n'use strict';\n\n// configXmlDom: parsed with DOMParser.\nmodule.exports = exports = function updateConfigXml(manifest, analyzedManifest, configXmlDom) {\n  var widget = configXmlDom.lastChild; // firstChild is the <xml> delcaration.\n  function $(name) {\n    var ret = widget.getElementsByTagName(name);\n    return ret && ret[0];\n  }\n  function getOrCreateRootNode(name) {\n    var ret = $(name);\n    if (!ret) {\n      ret = configXmlDom.createElement(name);\n      widget.appendChild(ret);\n    }\n    return ret;\n  }\n\n  function getOrCreatePlatformNode(name) {\n    var plats = widget.getElementsByTagName('platform');\n    for (var i = 0; i < plats.length; ++i) {\n      if (plats[i].getAttribute('name') == name) {\n        return plats[i];\n      }\n    }\n    var newNode = configXmlDom.createElement('platform');\n    newNode.setAttribute('name', name);\n    widget.appendChild(newNode);\n    return newNode;\n  }\n\n  function setOrDeleteAttribute(node, name, value) {\n    if (value) {\n      node.setAttribute(name, value);\n    } else {\n      node.removeAttribute(name);\n    }\n  }\n\n  // Find a <preference name=\"name\" value=...> tag\n  // If multiple exist, return the last one, if none - undefined.\n  function getPreference(name) {\n    var prefs = widget.getElementsByTagName('preference');\n    var pref;\n    for (var i = 0; i < prefs.length; i++) {\n      if (prefs[i].getAttribute('name') == name) {\n        pref = prefs[i];\n      }\n    }\n    return pref;\n  }\n\n  function setOrCreatePreference(name, value) {\n    var pref = getPreference(name);\n    if (!pref) {\n      pref = configXmlDom.createElement('preference');\n      pref.setAttribute('name', name);\n      widget.appendChild(pref);\n    }\n    pref.setAttribute('value', value);\n    return pref;\n  }\n\n  function deletePreference(name) {\n    var node = getPreference(name);\n    if (node) {\n      node.parentNode.removeChild(node);\n    }\n  }\n\n  function deleteAllChildren(parentNode, nodeName) {\n    nodeName = nodeName.toUpperCase();\n    for (var i = 0; i < parentNode.childNodes.length; ) {\n      if (parentNode.childNodes[i].nodeName.toUpperCase() == nodeName) {\n        parentNode.removeChild(parentNode.childNodes[i]);\n      } else {\n        i++;\n      }\n    }\n    if (parentNode.childNodes.length === 0) {\n      parentNode.parentNode.removeChild(parentNode);\n    }\n  }\n\n  function createIconNode(parentNode, src, size) {\n    var newNode = configXmlDom.createElement('icon');\n    newNode.setAttribute('src', src);\n    if (size) {\n      newNode.setAttribute('width', size);\n    }\n    parentNode.appendChild(newNode);\n  }\n\n  function findLargestNumericKey(obj) {\n    var bestSize = '0';\n    for (var size in obj) {\n      bestSize = +size > +bestSize ? size : bestSize;\n    }\n    return bestSize;\n  }\n\n\n  var ver = manifest.version || '0.0.1';\n  if (!/^\\d+(\\.\\d+){0,3}$/.test(ver)) {\n    throw new Error('Invalid version: \"' + ver + '\" Must contain at most 4 numbers separated by periods.');\n  }\n\n  widget.setAttribute('id', manifest.packageId || 'com.your.company.HelloWorld');\n  if (manifest.android && manifest.android.packageId) {\n    widget.setAttribute('android-packageName', manifest.android.packageId);\n  }\n  if (manifest.ios && manifest.ios.packageId) {\n    widget.setAttribute('ios-CFBundleIdentifier', manifest.ios.packageId);\n  }\n\n  widget.setAttribute('version', ver);\n  var androidVersionCode = manifest.versionCode || (manifest.android && manifest.android.versionCode);\n  if (!androidVersionCode && manifest.android && manifest.android.version) {\n    androidVersionCode = default_versionCode(manifest.android.version);\n  }\n  setOrDeleteAttribute(widget, 'android-versionCode', androidVersionCode);\n\n  var iosBundleVersion = manifest.CFBundleVersion || (manifest.ios && manifest.ios.CFBundleVersion);\n  if (!iosBundleVersion && manifest.ios && manifest.ios.version) {\n    iosBundleVersion = default_CFBundleVersion(manifest.ios.version);\n  }\n  setOrDeleteAttribute(widget, 'ios-CFBundleVersion', iosBundleVersion);\n\n  getOrCreateRootNode('name').textContent = manifest.name || manifest.packageId || 'Your App Name';\n  getOrCreateRootNode('description').textContent = manifest.description || 'Plain text description of this app';\n  getOrCreateRootNode('author').textContent = manifest.author || 'Author Name <a@b.com>';\n  getOrCreateRootNode('content').setAttribute('src', 'plugins/cordova-plugin-chrome-apps-bootstrap/chromeapp.html');\n\n  // Set minSdkVersion and targetSdkVersion, corodva-lib copies them to AndoridManifest.xml\n  // Default minSdkVersion is 14 for Android 4.0 (ICS)\n  var minSdkVersion = manifest.minSdkVersion || '14';\n  setOrCreatePreference('android-minSdkVersion', minSdkVersion);\n  if (manifest.targetSdkVersion) {\n    setOrCreatePreference('android-targetSdkVersion', manifest.targetSdkVersion);\n  }\n\n  var access;\n  while ((access = $('access'))) {\n    access.parentNode.removeChild(access);\n  }\n  analyzedManifest.whitelist.forEach(function(pattern, index) {\n    var tag = configXmlDom.createElement('access');\n    tag.setAttribute('origin', pattern);\n    widget.appendChild(tag);\n  });\n\n  // If there are any icons, clear out all existing <icon>s\n  if (manifest.icons || (manifest.android && manifest.android.icons) || (manifest.ios && manifest.ios.icons)) {\n    deleteAllChildren(widget, 'icon');\n    deleteAllChildren(getOrCreatePlatformNode('android'), 'icon');\n    deleteAllChildren(getOrCreatePlatformNode('ios'), 'icon');\n  }\n\n  function createIconTags(platform) {\n    var parentNode = getOrCreatePlatformNode(platform);\n    var iconMap = manifest[platform] && manifest[platform].icons || manifest.icons;\n    if (!iconMap) {\n      return;\n    }\n    var iconSizes = Object.keys(iconMap);\n    if (iconSizes.length) {\n      var defaultIconSrc = iconMap[findLargestNumericKey(iconMap)];\n      createIconNode(parentNode, 'www/' + defaultIconSrc, null);\n    }\n    iconSizes.forEach(function(size) {\n      createIconNode(parentNode, 'www/' + iconMap[size], size);\n    });\n  }\n\n  createIconTags('android');\n  createIconTags('ios');\n\n  if (analyzedManifest.engineName == 'crosswalk' && analyzedManifest.engineVer) {\n      setOrCreatePreference('xwalkVersion', analyzedManifest.engineVer);\n  } else {\n      deletePreference('xwalkVersion');\n  }\n};\n\n// Taken from cordova-lib/src/cordova/metadata/android_parser.js\nfunction default_versionCode(version) {\n    var nums = version.split('-')[0].split('.');\n    var versionCode = 0;\n    if (+nums[0]) {\n        versionCode += +nums[0] * 10000;\n    }\n    if (+nums[1]) {\n        versionCode += +nums[1] * 100;\n    }\n    if (+nums[2]) {\n        versionCode += +nums[2];\n    }\n    return versionCode;\n}\n\n// Taken from cordova-lib/src/cordova/metadata/ios_parser.js\nfunction default_CFBundleVersion(version) {\n    return version.split('-')[0];\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/post-prepare.js":"/**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n */\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar ccaManifestLogic = require('cca-manifest-logic');\nvar et = require('elementtree');\nvar Q = require('q');\n\nvar utils = require('./utils');\n\n\n// Returns a promise.\nmodule.exports = exports = function postPrepareCommand(opts) {\n  var hasAndroid = fs.existsSync(path.join('platforms', 'android'));\n  var hasIos = fs.existsSync(path.join('platforms', 'ios'));\n\n  if (!fs.existsSync('platforms')) {\n    return Q.reject('No platforms directory found. Please run script from the root of your project.');\n  }\n\n  var p = Q();\n  if (hasAndroid) {\n    p = p.then(function() { return postPrepareInternal('android'); });\n  }\n  if (hasIos) {\n    p = p.then(function() { return postPrepareInternal('ios'); });\n  }\n  return p;\n};\n\nfunction injectCsp(htmlPath, cspTag) {\n  var html = fs.readFileSync(htmlPath, 'utf8');\n  html = html.replace(/<meta.*Content-Security.*>/, cspTag);\n  fs.writeFileSync(htmlPath, html);\n}\n\n// Internal function called potentially multiple times to cover all platforms.\nfunction postPrepareInternal(platform) {\n  var root = utils.assetDirForPlatform(platform);\n  var localesPath = path.join(utils.assetDirForPlatform(platform), '_locales');\n  return Q().then(function() {\n    if (!fs.existsSync(localesPath)) {\n      return;\n    }\n    console.log('## Normalizing _locales for ' + platform);\n    return Q.ninvoke(fs, 'readdir', localesPath)\n    .then(function(files) {\n      files.forEach(function(f) {\n        var fullName = path.join(localesPath, f);\n        var adjustedFilename = f.replace('-', '_').toLowerCase();\n        if (f !== adjustedFilename) {\n          var stats = fs.statSync(fullName);\n          if (stats.isDirectory()) {\n            fs.renameSync(fullName, path.join(localesPath, adjustedFilename));\n          }\n        }\n      });\n    });\n  }).then(function() {\n    return require('./get-manifest')('www', platform);\n  }).then(function(manifest) {\n    // Write merged manifest.json\n    fs.writeFileSync(path.join(root, 'manifest.json'), JSON.stringify(manifest, null, 4));\n    // Write CSP tag\n    //  - Check first if plugin is installed yet\n    var bootstrapPluginPath = path.join(root, 'plugins', 'cordova-plugin-chrome-apps-bootstrap');\n    if (fs.existsSync(bootstrapPluginPath)) {\n      console.log('## Inject CSP for ' + platform);\n      var cspContent = ccaManifestLogic.analyseManifest.createCspString(manifest, platform);\n      var cspTag = '<meta http-equiv=\"Content-Security-Policy\" content=\"' + cspContent + '\">';\n      injectCsp(path.join(bootstrapPluginPath, 'chromeapp.html'), cspTag);\n      injectCsp(path.join(bootstrapPluginPath, 'chromebgpage.html'), cspTag);\n    }\n\n    if (platform === 'android') {\n      // Write manifest.short_name as launcher_name in Android strings.xml\n      if (manifest.short_name) {\n        var stringsPath = path.join('platforms', 'android', 'res', 'values', 'strings.xml');\n        var strings = et.parse(fs.readFileSync(stringsPath, 'utf-8'));\n        strings.find('./string/[@name=\"launcher_name\"]').text = manifest.short_name;\n        fs.writeFileSync(stringsPath, strings.write({indent: 4}), 'utf-8');\n      }\n    }\n  });\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/before-plugin-add.js":"/**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n */\n\n'use strict';\n\nvar getManifest = require('./get-manifest');\nvar ccaManifestLogic = require('cca-manifest-logic');\nvar Q = require('q');\n\n// Returns a promise.\nmodule.exports = exports = function beforePluginAdd(context) {\n  return getManifest('www')\n    .then(function(manifest) {\n      return ccaManifestLogic.analyseManifest(manifest);\n    })\n    .then(function(manifestData) {\n      var pluginsToBeNotInstalled = manifestData.pluginsToBeNotInstalled.concat();\n      var pluginsBeingInstalledRightNow = context.plugins;\n\n      pluginsToBeNotInstalled = pluginsToBeNotInstalled.filter(function(plugin) {\n        return pluginsBeingInstalledRightNow.indexOf(plugin) != -1;\n      });\n\n      if (pluginsToBeNotInstalled.length === 0) return;\n\n      console.error(\"Error: The following plugin(s) cannot be explicitly installed:\");\n      pluginsToBeNotInstalled.forEach(function(plugin) {\n        console.warn(\"*\", plugin);\n      });\n      console.error(\"Instead, add the proper manifest.json permissions.\");\n      console.error(\"See: https://developer.chrome.com/apps/manifest\");\n\n      return Q.reject(\"Abort plugin add\");\n    });\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/get-manifest.js":"/**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n */\n\nvar fs = require('fs');\nvar path = require('path');\nvar Q = require('q');\nvar ccaManifestLogic = require('cca-manifest-logic');\n\n// Returns a promise for the manifest contents.\nmodule.exports = exports = function getManifest(manifestDir, platform) {\n  var manifestFilename = path.join(manifestDir, 'manifest.json');\n  function readFileFunc(p) {\n    return Q.ninvoke(fs, 'readFile', p, 'utf8');\n  }\n  return ccaManifestLogic.parseAndMergeManifests(manifestFilename, platform, readFileFunc, Q);\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/analytics-loader.js":"var Q = require('q');\nvar path = require('path');\nvar fs = require('fs');\nvar shelljs = require('shelljs');\nvar utils = require('./utils');\n\nvar analyticsModule;\n\n// This function retrieves either the analytics module or a mocked version that provides no-ops.\n// If the argument is true, the mocked version will log all calls.\nfunction getAnalyticsModule(useTestingVersion) {\n  if (useTestingVersion) {\n    analyticsModule = makeFakeModule(true /* logCalls */);\n    return Q(analyticsModule);\n  }\n\n  // If we've already loaded an analytics module, use the one we already have.\n  if (analyticsModule) {\n    return Q(analyticsModule);\n  }\n\n  // Ask for permission and return a module accordingly.\n  return requestPermission()\n  .then(function(permission) {\n    analyticsModule = permission ? require('./analytics') : makeFakeModule(false /* logCalls */);\n    return Q(analyticsModule);\n  });\n}\n\n// This function returns a fake analytics module.\n// If the argument is true, the fake module will log all calls.\nfunction makeFakeModule(logCalls) {\n  var fakeModule = { };\n\n  // These \"functions to fake\" should be updated whenever a function is added to the real analytics module.\n  var funcsToFake = ['sendEvent'];\n\n  // Fake our functions, logging if required.\n  funcsToFake.forEach(function(f) {\n    if (logCalls) {\n      fakeModule[f] = function() {\n        log({ func: f, args: arguments });\n      };\n    } else {\n      fakeModule[f] = function() { };\n    }\n  });\n\n  return fakeModule;\n}\n\n// This function determines whether the developer approves of the collection of usage statistics.\n// If permission has previously been ascertained, we read it from a file.  Otherwise, we the user now.\n// It returns a promise that contains the answer.\nfunction requestPermission() {\n  // Load the config file and check if permission has already been granted or denied.\n  var userConfig = readWriteUserConfig();\n  if (userConfig && userConfig.analytics) {\n    return Q(userConfig.analytics.isAllowed);\n  }\n\n  // We have no record of permission, so ask away.\n  var promptText = 'Would you like to help make make this tool better by automatically sending usage statistics and error reports to Google?\\n';\n  promptText += 'This information will be used in accordance with the Google Privacy Policy (http://www.google.com/policies/privacy). [y/n] ';\n  return utils.waitForKey(promptText)\n  .then(function(key) {\n    var permission = (key.toLowerCase() == 'y');\n\n    // Write the response to the config file and return it.\n    writePermission(permission);\n    return permission;\n  });\n}\n\n// This function writes the given permission to the config file.\nfunction writePermission(permission) {\n  var userConfig = readWriteUserConfig();\n  userConfig = userConfig || {};\n  userConfig.analytics = userConfig.analytics || {};\n  userConfig.analytics.isAllowed = permission;\n  userConfig.analytics.savedOnDate = new Date();\n  readWriteUserConfig(userConfig);\n}\n\n// This function either reads or writes the config file.\n// If the argument is empty, this function reads the returns the config file.\n// If the argument is not empty, its contents are written to the config file.\nfunction readWriteUserConfig(userConfig) {\n  // Determine the path of the config file.\n  // We use this format to comply with the `rc` config loader (https://github.com/dominictarr/rc), in case we use that in the future.\n  var HOME = process.env[(process.platform.slice(0, 3) == 'win') ? 'USERPROFILE' : 'HOME'];\n  var userConfigDir = path.join(HOME, '.cca');\n  var userConfigPath = path.join(userConfigDir, 'config');\n\n  // Write to the file if we were passed an argument, or read and return it if we were.\n  // If we were instructed to read the file, but it doesn't exist, return null.\n  if (userConfig) {\n    shelljs.mkdir('-p', userConfigDir);\n    fs.writeFileSync(userConfigPath, JSON.stringify(userConfig, null, 4));\n  } else if (fs.existsSync(userConfigPath)) {\n    userConfig = JSON.parse(fs.readFileSync(userConfigPath, 'utf-8'));\n    return userConfig;\n  } else {\n    return null;\n  }\n}\n\n// This function handles calls to `cca analytics`.\nfunction analyticsCommand(command) {\n  var usage = '`cca analytics [enable|disable]`';\n\n  // `cca analytics` will tell the user whether analytics are enabled or disabled.\n  if (!command) {\n    var userConfig = readWriteUserConfig();\n    var permission = userConfig && userConfig.analytics && userConfig.analytics.isAllowed;\n    var outputText = 'Usage statistics collection is currently ' + (permission ? 'enabled' : 'disabled') + '. ';\n    outputText += 'To change this, run ' + usage + '.';\n    console.log(outputText);\n    return;\n  }\n\n  // We only allow `enable` and `disable`; print an error if we were given something else.\n  command = command.toLowerCase();\n  if (command != 'enable' && command != 'disable') {\n    var errorText = 'Invalid argument: ' + command + '. ';\n    errorText += 'To enable or disable usage statistics collection, run ' + usage + '.';\n    utils.fatal(errorText);\n    return;\n  }\n\n  // Set analytics permission according to the given command.\n  writePermission(command == 'enable');\n  console.log('Usage statistics collection ' + command + 'd.');\n}\n\n// This function prints the given object, along with a timestamp.\nfunction log(x) {\n  var now = new Date();\n  x.timestamp = now.toISOString();\n  console.log(JSON.stringify(x));\n}\n\n// Exports!\nmodule.exports = {\n  analyticsCommand: analyticsCommand,\n  getAnalyticsModule: getAnalyticsModule,\n  readWriteUserConfig: readWriteUserConfig\n};\n\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/analytics.js":"/**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n */\n\n// Common parameters.\nvar v = 1; // Protocol version.\nvar tid = 'UA-52080037-2'; // Tracking ID.\nvar cid = getClientId(); // Client ID.\nvar an = 'cca'; // App name.\nvar av = require('../package').version; // App version.\n\n// URL base, based on the above parameters.\nvar URL_BASE = 'http://www.google-analytics.com/collect?';\nURL_BASE += 'v=' + v;\nURL_BASE += '&tid=' + tid;\nURL_BASE += '&cid=' + cid;\nURL_BASE += '&an=' + an;\nURL_BASE += '&av=' + av;\n\n// This function retrieves the client ID from the config file or generates if it one doesn't exist.\nfunction getClientId() {\n  var analyticsLoader = require('./analytics-loader');\n  var userConfig = analyticsLoader.readWriteUserConfig();\n\n  // Return the client id from the file, if one is there.\n  if (userConfig && userConfig.analytics && userConfig.analytics.clientId) {\n    return userConfig.analytics.clientId;\n  }\n\n  // We don't have a client id yet, so generate one, save it, and return it.\n  userConfig = userConfig || {};\n  userConfig.analytics = userConfig.analytics || {};\n  userConfig.analytics.clientId = require('node-uuid').v4();\n  analyticsLoader.readWriteUserConfig(userConfig);\n  return userConfig.analytics.clientId;\n}\n\n// This helper function sends a measurement to the given URL.\nfunction sendMeasurement(url) {\n  // On an error, silently fail.\n  // TODO(maxw): Queue and retry failed measurements.\n  var http = require('http');\n  http.get(url).on('error', function() { });\n}\n\nmodule.exports = {\n  // Send an event to the analytics server.\n  sendEvent: function(eventCategory, eventAction) {\n    var url = URL_BASE;\n    url += '&t=event';\n    url += '&ec=' + eventCategory;\n    url += '&ea=' + eventAction;\n\n    sendMeasurement(url);\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/cordova-commands.js":"/**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n */\n\nvar cordova = require('cordova');\nvar Q = require('q');\n\n// Returns the promise from the raw Cordova command.\nexports.runCmd = function runCmd(cmd) {\n  var msg = cmd[0];\n  cmd.slice(1).forEach(function(arg) {\n    if (Array.isArray(arg)) {\n      msg += ' ' + arg.join(' ');\n      return;\n    } else if (typeof arg != 'string') {\n      return;\n    }\n    if (arg.indexOf(' ') != -1) {\n      msg += ' \"' + arg + '\"';\n    } else {\n      msg += ' ' + arg;\n    }\n  });\n  console.log('## Running Cordova Command: ' + msg);\n  return cordova.raw[cmd[0]].apply(cordova, cmd.slice(1));\n};\n\n// Chains a list of cordova commands, returning a promise.\nexports.runAllCmds = function runAllCmds(commands) {\n  return commands.reduce(function(soFar, f) {\n    return soFar.then(function() {\n      return exports.runCmd(f);\n    });\n  }, Q());\n};\n\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/create-app.js":"var path = require('path');\nvar Q = require('q');\nvar fs = require('fs');\nvar shelljs = require('shelljs');\nvar xmldom = require('xmldom');\nvar ccaManifestLogic = require('cca-manifest-logic');\n\nfunction resolveTilde(string) {\n  // TODO: implement better\n  if (string.substr(0,1) === '~')\n    return path.resolve(process.env.HOME + string.substr(1));\n  return string;\n}\n\n// Returns a promise\nmodule.exports = exports = function createApp(destAppDir, ccaRoot, origDir, packageId, appName, flags) {\n  var srcAppDir = null;\n  var manifest = null;\n  var appWasImported = false;\n  var manifestDesktopFilename = path.join(destAppDir, 'www', 'manifest.json');\n  var manifestMobileFilename = path.join(destAppDir, 'www', 'manifest.mobile.json');\n\n  return Q.fcall(function() {\n    // Validate source arg.\n    var sourceArg = flags['copy-from'] || flags['link-to'];\n    appWasImported = !!sourceArg;\n    if (!sourceArg) {\n      srcAppDir = path.join(ccaRoot, 'templates', 'default-app');\n    } else {\n      // Strip off manifest.json from path (its containing dir must be the root of the app)\n      if (path.basename(sourceArg) === 'manifest.json') {\n        sourceArg = path.dirname(sourceArg);\n      }\n      // Always check the sourceArg as a relative path first, even if its a special value (like 'spec')\n      var dirsToTry = [ path.resolve(origDir, resolveTilde(sourceArg)) ];\n\n      // Find the first valid path in our list (valid paths contain a manifest.json file)\n      var foundManifest = false;\n      for (var i = 0; i < dirsToTry.length; i++) {\n        srcAppDir = dirsToTry[i];\n        console.log('Searching for Chrome app source in ' + srcAppDir);\n        if (fs.existsSync(path.join(srcAppDir, 'manifest.json'))) {\n          foundManifest = true;\n          break;\n        }\n      }\n      if (!srcAppDir) {\n        return Q.reject('Directory does not exist.');\n      }\n      if (!foundManifest) {\n        return Q.reject('No manifest.json file found');\n      }\n    }\n  })\n  .then(function() {\n    return require('./get-manifest')(srcAppDir);\n  })\n  .then(function(manifestData) {\n    if (!(manifestData.app && manifestData.app.background && manifestData.app.background.scripts && manifestData.app.background.scripts.length)) {\n      return Q.reject('No background scripts found in your manifest.json file. Your manifest must contain at least one script in the \"app.background.scripts\" array.');\n    }\n    manifest = manifestData;\n  })\n  .then(function() {\n    // Create step.\n    console.log('## Creating Your Application');\n    var config_default = JSON.parse(JSON.stringify(require('./default-config')(ccaRoot)));\n    config_default.lib.www = { uri: srcAppDir };\n    config_default.lib.www.link = !!flags['link-to'];\n\n    return require('./cordova-commands').runCmd(['create', destAppDir, packageId, appName, config_default]);\n  })\n  .then(function() {\n    process.chdir(destAppDir);\n  })\n  .then(function() {\n    if (!appWasImported) {\n      // Update app name if the app is not imported.\n      return Q.ninvoke(fs, 'readFile', manifestDesktopFilename, { encoding: 'utf-8' }).then(function(manifestDesktopData) {\n        var manifestDesktop;\n        try {\n          // jshint evil:true\n          manifestDesktop = eval('(' + manifestDesktopData + ')');\n          // jshint evil:false\n        } catch (e) {\n          console.error(e);\n          return Q.reject('Unable to parse manifest ' + manifestDesktopFilename);\n        }\n        manifestDesktop.name = appName || path.basename(destAppDir);\n        manifest.name = manifestDesktop.name;\n        Q.ninvoke(fs, 'writeFile', manifestDesktopFilename, JSON.stringify(manifestDesktop, null, 4));\n      });\n    }\n  })\n  .then(function() {\n    // Ensure the mobile manifest exists.\n    if (fs.existsSync(manifestMobileFilename)) return;\n    var defaultManifestMobileFilename = path.join(ccaRoot, 'templates', 'default-app', 'manifest.mobile.json');\n    if (!fs.existsSync(defaultManifestMobileFilename)) return; // TODO: Was I supposed to be an error?\n    shelljs.cp('-f', defaultManifestMobileFilename, manifestMobileFilename);\n  })\n  .then(function() {\n    // Update default packageId if needed.\n    return Q.ninvoke(fs, 'readFile', manifestMobileFilename, { encoding: 'utf-8' }).then(function(manifestMobileData) {\n      var newPackageId = packageId || ('com.your.company.' + (appName || manifest['name'].replace(/[^a-zA-Z0-9_]/g, '')));\n      // Replace rather than parse so as to maintain comments\n      manifestMobileData = manifestMobileData.replace('com.your.company.HelloWorld', newPackageId);\n      return Q.ninvoke(fs, 'writeFile', manifestMobileFilename, manifestMobileData);\n    });\n  })\n  .then(function() {\n    // If there is no config.xml, or the config.xml is the cordova default, replace it with our default\n    if (!appWasImported || !fs.existsSync(path.join('config.xml'))) {\n      console.log(\"## Creating default config.xml\");\n      shelljs.cp('-f', path.join(ccaRoot, 'templates', 'config.xml'), path.join('config.xml'));\n    }\n  })\n  .then(function() {\n    return require('./get-manifest')('www');\n  })\n  .then(function(manifestJson) {\n    var configXmlData = fs.readFileSync('config.xml', 'utf8');\n    var analyzedManifest = ccaManifestLogic.analyseManifest(manifestJson);\n    var configXmlDom = new xmldom.DOMParser().parseFromString(configXmlData);\n    ccaManifestLogic.updateConfigXml(manifestJson, analyzedManifest, configXmlDom);\n    configXmlData = new xmldom.XMLSerializer().serializeToString(configXmlDom);\n    fs.writeFileSync('config.xml', configXmlData);\n    return require('./write-out-cca-version')();\n  })\n  .then(function() {\n    // Create scripts that update the cordova app on prepare\n    fs.mkdirSync(path.join('hooks', 'before_prepare'));\n    fs.mkdirSync(path.join('hooks', 'before_platform_add'));\n\n    function writeHook(path) {\n      var contents = [\n          \"#!/usr/bin/env node\",\n          \"var cmdline = process.env['CORDOVA_CMDLINE'];\",\n          \"if (!/cca/.test(cmdline)) {\",\n          \"  var msg = 'ERROR: This is a CCA based project! Using `cordova` rather than `cca` will have unexpected results.' ;\",\n          \"  console.error(msg);\",\n          \"  process.exit(1);\",\n          \"}\"\n          ];\n      fs.writeFileSync(path, contents.join('\\n'));\n      fs.chmodSync(path, '777');\n    }\n    writeHook(path.join('hooks', 'before_prepare', 'cca-check.js'));\n    writeHook(path.join('hooks', 'before_platform_add', 'cca-check.js'));\n  })\n  .then(function() {\n    // Create a convenience gitignore\n    shelljs.cp('-f', path.join(ccaRoot, 'templates', 'DEFAULT_GITIGNORE'), path.join('.', '.gitignore'));\n\n    // Add default platforms:\n    var cmds = [];\n    if (flags.ios) {\n      cmds.push(['platform', 'add', 'ios']);\n    }\n    if (flags.android) {\n      cmds.push(['platform', 'add', 'android']);\n    }\n    return require('./cordova-commands').runAllCmds(cmds);\n  })\n  .then(function() {\n    var wwwPath = path.join(destAppDir, 'www');\n    var welcomeText = 'Done!\\n\\n';\n    if (flags['link-to']) {\n      welcomeText += 'Your project has been created, with web assets symlinked to the following chrome app:\\n' +\n                     wwwPath + ' --> ' + srcAppDir + '\\n\\n';\n    } else if (flags['copy-from']) {\n      welcomeText += 'Your project has been created, with web assets copied from the following chrome app:\\n'+\n                     srcAppDir + ' --> ' + wwwPath + '\\n\\n';\n    } else {\n      welcomeText += 'Your project has been created, with web assets in the `www` directory:\\n'+\n                     wwwPath + '\\n\\n';\n    }\n    welcomeText += 'Remember to run `cca prepare` after making changes if you are using an IDE.\\n';\n    welcomeText += 'Full instructions: https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/Develop.md#making-changes-to-your-app-source-code';\n    console.log(welcomeText);\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/default-config.js":"var path = require('path');\nvar fs = require('fs');\n\nmodule.exports = exports = function defaultConfig(ccaRoot) {\n\n  var plugin_search_path = [\n    path.join(ccaRoot, 'cordova'),\n  ];\n\n  // For plugin development with local cca git checkout.\n  var chrome_cordova_plugins = path.join(ccaRoot, '..', 'mobile-chrome-apps-plugins');\n  if (fs.existsSync(chrome_cordova_plugins)) {\n    plugin_search_path.push(chrome_cordova_plugins);\n  }\n\n  return {\n    plugin_search_path: plugin_search_path,\n    lib: {\n      android: {\n        // TODO: Remove uri here and below after cordova-lib@0.21.7 is released.\n        uri: path.join(ccaRoot, 'cordova', 'cordova-android'),\n        url: path.join(ccaRoot, 'cordova', 'cordova-android')\n      },\n      ios: {\n        uri: path.join(ccaRoot, 'cordova', 'cordova-ios'),\n        url: path.join(ccaRoot, 'cordova', 'cordova-ios')\n      }\n    }\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/exec.js":"/**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n */\nvar childProcess = require('child_process');\nvar path = require('path');\n\nfunction resolveTilde(string) {\n  if (string.substr(0,1) === '~')\n    return path.resolve(process.env.HOME + string.substr(1));\n  return string;\n}\n\n// Returns a promise\nmodule.exports = exports = function exec(argv) {\n  argv = argv.map(resolveTilde);\n  var cmd = argv[0];\n  argv = argv.slice(1);\n  var child = childProcess.spawn(cmd, argv, { stdio: [0,1,2] });\n  child.on('close', process.exit);\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/parse-command-line.js":"/**\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n */\n\nvar optimist = require('optimist');\nvar path = require('path');\n\nmodule.exports = exports = function parseCommandLine() {\n  var pathToApp = '<' + path.join('path', 'to', 'app') + '>';\n  return optimist\n      .usage('Usage: $0 <command> [commandArgs]\\n' +\n             '\\n' +\n             'checkenv - Ensures that your environment is setup correctly.\\n' +\n             '    Example:\\n' +\n             '        cca checkenv\\n' +\n             '\\n' +\n             'create <directory> [<id> [<name>]] [--android] [--ios] [--copy-from=' + pathToApp + ' | --link-to=' + pathToApp + '] - Creates a project.\\n' +\n             '    Details:\\n' +\n             '        <directory>: The directory to create the project in.\\n' +\n             '        <id>: The reverse domain-style identifier.\\n' +\n             '        <name>: The application\\'s display text.\\n' +\n             '        --android: Add the Android platform (default if android SDK is detected).\\n' +\n             '        --ios: Add the iOS platform (default if Xcode is detected).\\n' +\n             '        --copy-from=' + pathToApp + ': Create a project based on the given Chrome App.\\n' +\n             '        --link-to=' + pathToApp + ': Create a project that symlinks to the given Chrome App.\\n' +\n             '\\n' +\n             'platform [{add|remove|rm} <PLATFORM>] ..... add or remove a specified PLATFORM, OR\\n' +\n             '         [{list|ls}] ...................... list all installed and available platforms\\n' +\n             '         [{update|up} <PLATFORM>] ......... update the version of Cordova used for a specific\\n' +\n             '                                            PLATFORM; use after updating the CLI.\\n' +\n             '\\n' +\n             'plugin [{add|remove|rm} <PATH|URI>] ....... add or remove a plugin from the specified PATH or URI, OR\\n' +\n             '       [{ls|list}] ........................ list all currently installed plugins\\n' +\n             '       [search <keyword1 keyword2...>] .... search the plugin registry for plugins matching the keywords\\n' +\n             '\\n' +\n             'prepare [PLATFORM..] ...................... copies files for specified platforms, or all platforms,\\n' +\n             '                                            so that the project is ready to build in each SDK\\n' +\n             '\\n' +\n             'upgrade ................................... upgrades platforms and plugins of this project with the latest\\n' +\n             '                                            versions after doing an npm update of cca.\\n' +\n             '                                            Note: you will be automatically prompted to upgrade, but you can\\n' +\n             '                                            skip the auto upgrade by passing --skip-upgrade to any command.\\n' +\n             '\\n' +\n             'build [--debug|--release]\\n' +\n             '      [--webview=system|--webview=crosswalk]\\n' +\n             '      [--android-minSdkVersion=#]\\n' +\n             '      [android|ios]........................ builds for the given platform(s)\\n' +\n             '\\n' +\n             'run [build flags]\\n' +\n             '    [--device|--emulator|--target=FOO]\\n' +\n             '    [android|ios|chrome] .................. deploys app on specified platform devices / emulators\\n' +\n             '\\n' +\n             'exec CMD [args...] ........................ runs the given command with all SDK tools added to your PATH\\n' +\n             '\\n' +\n             'push [--target=IP_ADDRESS:PORT] [--watch] . Pushes the app to one or more Chrome App Developer Tool instances.\\n' +\n             '                                            --target defaults to localhost:2424; can be specified multiple times.\\n' +\n             '                                            --watch enables a file watcher that auto-pushes when files change.\\n' +\n             '\\n' +\n             'Examples:\\n' +\n             '    cca create MyApp\\n' +\n             '    cca create MyApp --link-to=' + pathToApp + '\\n' +\n             '    cca prepare\\n' +\n             '    cca run android --device\\n' +\n             '    cca run ios --emulator\\n' +\n             '    cca build android --release --webview=system --android-minSdkVersion=20\\n' +\n             '    cca plugin ls')\n      .options('h', {\n          type: 'boolean',\n          alias: 'help',\n          desc: 'Show usage message.'\n      })\n      .options('d', {\n          type: 'boolean',\n          alias: 'verbose',\n          desc: 'Enable verbose logging.'\n      })\n      .options('v', {\n          type: 'boolean',\n          alias: 'version',\n          desc: 'Show version.'\n      })\n      .options('y', {\n          type: 'boolean',\n          alias: 'skip-prompt',\n          desc: 'Answer \"yes\" to any \"yes/no\" prompts.'\n      })\n      .options('skip-upgrade', {\n        type: 'boolean',\n        desc: 'Don\\'t upgrade platforms and plugins.',\n      })\n      .options('android', { type: 'boolean' })\n      .options('ios', { type: 'boolean' })\n      .options('pause_on_exit', { type: 'boolean' })\n      .options('copy-from', { type: 'string' })\n      .options('link-to', { type: 'string' })\n      .options('target', { type: 'string' })\n      .options('webview', { type: 'string' })\n      .options('android-minSdkVersion', { type: 'number' })\n      .options('watch', { type: 'boolean' })\n      .options('release', { type: 'boolean' })\n      .options('debug', { type: 'boolean' })\n      .options('emulator', { type: 'boolean' })\n      .options('device', { type: 'boolean' })\n      .argv;\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/push-to-harness.js":"var fs = require('fs');\nvar path = require('path');\nvar Q = require('q');\nvar debounce = require('debounce');\nvar utils = require('./utils');\nvar child_process = require('child_process');\n\n// Returns a promise.\nmodule.exports = exports = function push(target, watch) {\n  var argsAsJson = JSON.stringify([].slice.call(arguments));\n  return checkFileHandleLimit()\n  .then(function(fileHandleLimit) {\n    if (fileHandleLimit < 10000 && watch) {\n      return relaunchWithBiggerUlimit(argsAsJson)\n      .then(function() {\n        return true;\n      }, function() {\n        // Setting ulimit can fail, so just continue on if it does.\n      });\n    }\n  }).then(function(done) {\n    if (done) {\n      return;\n    }\n    target = !target || Array.isArray(target) ? target : [target];\n    var ret = Q.when(target);\n    if (!target) {\n      ret = extractTargets();\n    }\n    return ret.then(function(targets) {\n      return createSession(targets);\n    }).then(function(session) {\n      // Push the app and force a launch, even if it hasn't changed from a previous launch, since the app is being pushed for the first time.\n      return pushAll(session.clientInfos, /* forceLaunch */ true)\n      .then(function() {\n        if (watch) {\n          return watchFiles(session);\n        }\n      });\n    });\n  });\n};\n\nfunction extractTargets() {\n  // TODO: Use adbkit for smarter auto-detection.\n  var PushClient = require('chrome-app-developer-tool-client');\n  return PushClient.detectAdbTargets()\n  .then(function(targets) {\n      if (!targets.length) {\n          console.warn('No connected android devices detected. Defaulting to localhost.');\n          targets = ['localhost:2424'];\n      }\n      return targets;\n  }, function() {\n      console.warn('Could not use adb to detect connected devices');\n      return ['localhost:2424'];\n  });\n}\n\nfunction createSession(targets) {\n  var PushClient = require('chrome-app-developer-tool-client');\n\n  var i = 0;\n  var ret = {\n    platforms: [],\n    clientInfos: [],\n    appType: null\n  };\n\n  var chromeAppPushRoot = null;\n  if (fs.existsSync('www/manifest.json')) {\n    chromeAppPushRoot = 'www';\n  } else if (fs.existsSync('manifest.json')) {\n    chromeAppPushRoot = '.';\n  }\n  ret.appType = chromeAppPushRoot ? 'chrome' : 'cordova';\n\n  var platformMap = Object.create(null);\n  function createClient() {\n    var target = targets[i++];\n    if (!target) {\n      ret.platforms = Object.keys(platformMap);\n      return ret;\n    }\n    var newClient = new PushClient(target);\n    return newClient.info()\n    .then(function(response) {\n      var infoJson = response.body;\n      var platform = infoJson['platform'];\n      platformMap[platform] = true;\n      if (ret.appType == 'chrome') {\n        ret.clientInfos.push({\n            platform: platform,\n            client: newClient,\n            pushSession: newClient.createPushSession(chromeAppPushRoot),\n            watchDir: chromeAppPushRoot\n        });\n      } else {\n        // Vanilla Cordova project.\n        var wwwDir = utils.assetDirForPlatform(platform);\n        ret.clientInfos.push({\n            platform: platform,\n            client: newClient,\n            pushSession: newClient.createPushSession('.'), // push client figures out to use platforms/\n            watchDir: wwwDir\n        });\n      }\n      return createClient();\n    }, function(error) {\n      if (error.code === 'ECONNREFUSED') {\n        console.warn();\n        console.warn('Could not connect to device at ' + target);\n        console.warn('For a USB connected Android device, try running: adb forward tcp:2424 tcp:2424');\n        console.warn('For a networked device, use --target=DEVICE_IP_ADDRESS');\n      } else if (error.code === 'ECONNRESET') {\n        console.warn('\\nPlease make sure that the Chrome App Developer Tool for Mobile is running on your device.');\n      } else {\n        console.error(error);\n      }\n      process.exit();\n    });\n  }\n  return createClient();\n}\n\nvar pushInProgress = false;\nvar pushAgainWhenDone = false;\n// gaze uses fs.watchFile, which is classified as \"unstable\" (http://goo.gl/H16j5l).\n// It sometimes causes multiple change events to be fired, and they're far enough apart that debouncing is ineffective.\n// To deal with this, CADT-client's push functionality doesn't relaunch an app with no changes unless `forceLaunch` is true.\n// Calls to `pushAll` can specify whether to force a launch.\nfunction pushAll(clientInfos, forceLaunch) {\n  if (pushInProgress) {\n    pushAgainWhenDone = true;\n    return Q();\n  }\n  pushInProgress = true;\n  var allPromises = clientInfos.map(function(clientInfo) {\n    try {\n      return clientInfo.pushSession.push(forceLaunch);\n    } catch (e) {\n      if (/Not a Cordova project/.test(e)) {\n        console.warn('Please navigate to a Chrome App or Cordova project, and then try pushing again.');\n      } else {\n        console.error(e);\n      }\n      process.exit();\n    }\n  });\n  return Q.all(allPromises)\n  .then(function() {\n    if (pushAgainWhenDone) {\n      process.nextTick(function() {\n        // Push, but don't force a launch if the app hasn't changed.\n        pushAll(clientInfos, /* forceLaunch */ false).done();\n      });\n    }\n    pushInProgress = false;\n    pushAgainWhenDone = false;\n  }, function(e) {\n    pushInProgress = false;\n    pushAgainWhenDone = false;\n    throw e;\n  });\n}\n\nvar debouncedPushAll = debounce(function(clientInfos) {\n  // Push, but don't force a launch if the app hasn't changed.\n  pushAll(clientInfos, /* forceLaunch */ false).done();\n}, 50, false);\n\nfunction watchFiles(session) {\n  var gaze = require('gaze');\n  var deferred = Q.defer();\n\n  // TODO: This doesn't work for vanilla cordova apps + multiple platforms.\n  var watchDir = session.clientInfos[0].watchDir;\n  // Note: gaze doesn't work well with ./ prefix nor with absolute paths\n  // (https://github.com/gruntjs/grunt-contrib-watch/issues/166)\n  // path.join() is smart enough to remove the ./ prefix.\n  gaze(path.join(watchDir, '**', '*'), function(err, watcher) {\n    console.log('Watching for changes.');\n    watcher.on('all', function(event, filepath) {\n      debouncedPushAll(session.clientInfos);\n    });\n  });\n  // TODO: Capture Ctrl-C and resolve the promise.\n  return deferred.promise;\n}\n\nfunction checkFileHandleLimit() {\n  var deferred = Q.defer();\n  if (process.platform != 'win32' && process.env['SHELL']) {\n    // gaze opens a lot of file handles, and the default on OS X is too small (EMFILE exceptions).\n    // NOTE: This is fixed in node 0.11, and is a problem only on node 0.10.\n    child_process.exec('ulimit -n', function(error, stdout, stderr) {\n      var curLimit = !error && +stdout;\n      deferred.resolve(curLimit || Infinity);\n    });\n  } else {\n    deferred.resolve(Infinity);\n  }\n  return deferred.promise;\n}\n\nfunction relaunchWithBiggerUlimit(argsAsJson) {\n  // re-run with the new ulimit\n  var deferred = Q.defer();\n  var args = ['-c', 'ulimit -n 10240 && exec \"' + process.argv[0] + '\" \"' + __filename + '\" \"' + argsAsJson.replace(/\"/g, '@') + '\"'];\n  var child = child_process.spawn('sh', args, { stdio: 'inherit' });\n  child.on('close', function(code) {\n    if (code) {\n      deferred.reject(code);\n    } else {\n      deferred.resolve(code);\n    }\n  });\n  return deferred.promise;\n}\n\n// Gets called from EMFILE re-launch\nif (require.main === module) {\n  exports.apply(this, JSON.parse(process.argv[2].replace(/@/g, '\"'))).done();\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/run-in-chrome.js":"var fs = require('fs');\nvar path = require('path');\nvar Q = require('q');\nvar child_process = require('child_process');\n\n// Returns a promise.\nmodule.exports = exports = function runInChrome(platform) {\n  var chromeAppRunRoot = null;\n  if (fs.existsSync('www/manifest.json')) {\n    chromeAppRunRoot = 'www';\n  } else if (fs.existsSync('manifest.json')) {\n    chromeAppRunRoot = '.';\n  } else {\n    return Q.reject('Not a chrome app.');\n  }\n\n  var chromeArgs = ['--load-and-launch-app=' + path.resolve(chromeAppRunRoot)]; // '--disable-web-security'\n  if (platform === 'canary') {\n    chromeArgs.push('--user-data-dir=/tmp/cca_chrome_data_dir');\n  }\n\n  return Q.fcall(function() {\n    var chromeExe = null;\n    if (process.platform === 'win32') {\n      chromeExe = 'Chrome' + (platform === 'canary' ? ' Canary' : '');\n      child_process.spawn('cmd', ['/s', '/c', 'start', chromeExe].concat(chromeArgs));\n    } else if (process.platform === 'darwin') {\n      chromeExe = 'Google Chrome' + (platform === 'canary' ? ' Canary' : '');\n      child_process.spawn('open', ['-n', '-a', chromeExe, '--args'].concat(chromeArgs));\n    }\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/tools-check.js":"var Q = require('q');\n\nvar utils = require('./utils');\nvar check_reqs = require('../cordova/cordova-android/bin/lib/check_reqs');\n\nvar hasAndroidPlatform;\nvar hasXcode;\n\nfunction checkHasAndroid() {\n  hasAndroidPlatform = false;\n  return check_reqs.check_java()\n  .then(function() {\n    return check_reqs.check_android()\n    .then(function() {\n      console.warn('\\x1B[32mAndroid Development: SDK configured properly.\\x1B[39m');\n      hasAndroidPlatform = true;\n    }, function(err) {\n      console.warn('Android Development: ' + err.message);\n    });\n  }, function(err) {\n    console.warn('Android Development: JDK not found. ' + err.message);\n    return Q.reject();\n  }).then(null, function(){});\n}\n\nfunction checkHasIos() {\n  if (process.platform != 'darwin')\n    return Q();\n\n  return utils.exec('which xcodebuild', true /* opt_silent */)\n  .then(function() {\n    return utils.exec('xcodebuild -version', true /* opt_silent */)\n    .then(function() {\n      hasXcode = true;\n      console.warn('\\x1B[32miOS Development: SDK configured properly.\\x1B[39m');\n    }, function(err) {\n      console.warn('iOS Development: Xcode appears to be installed, but no version is selected (fix this with xcodeselect).');\n    });\n  }, function(err) {\n    console.warn('iOS Development: SDK not detected.');\n  });\n}\n\n// Returns a promise.\nmodule.exports = exports = function toolsCheck() {\n  var ret = Q();\n\n  // Is this the first time we're checking for the tools?\n  if (typeof hasAndroidPlatform == 'undefined') {\n    ret = ret.then(function() {\n      return checkHasAndroid().then(checkHasIos);\n    });\n  }\n\n  return ret.then(function() {\n    if (!hasAndroidPlatform && !hasXcode)\n      // TODO: Replace inline docs links with general instructions to read --help / docs / report issues\n      return Q.reject('No usable build environment could be found. Please refer to our installation guide:\\n' +\n          'https://github.com/MobileChromeApps/mobile-chrome-apps/blob/master/docs/Installation.md');\n\n    return Q({\n      hasAndroidPlatform: hasAndroidPlatform,\n      hasXcode: hasXcode,\n    });\n  });\n};\n\nexports.fixEnv = function() {\n  return check_reqs.check_java()\n  .then(function() {\n    return check_reqs.check_android();\n  })\n  .then(null, function() {});\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/bin/lib/check_reqs.js":"#!/usr/bin/env node\n\n/*\n       Licensed to the Apache Software Foundation (ASF) under one\n       or more contributor license agreements.  See the NOTICE file\n       distributed with this work for additional information\n       regarding copyright ownership.  The ASF licenses this file\n       to you under the Apache License, Version 2.0 (the\n       \"License\"); you may not use this file except in compliance\n       with the License.  You may obtain a copy of the License at\n\n         http://www.apache.org/licenses/LICENSE-2.0\n\n       Unless required by applicable law or agreed to in writing,\n       software distributed under the License is distributed on an\n       \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n       KIND, either express or implied.  See the License for the\n       specific language governing permissions and limitations\n       under the License.\n*/\n\n/* jshint sub:true */\n\nvar shelljs = require('shelljs'),\n    child_process = require('child_process'),\n    Q     = require('q'),\n    path  = require('path'),\n    fs    = require('fs'),\n    ROOT  = path.join(__dirname, '..', '..');\nvar CordovaError = require('cordova-common').CordovaError;\n\nvar isWindows = process.platform == 'win32';\n\nfunction forgivingWhichSync(cmd) {\n    try {\n        return fs.realpathSync(shelljs.which(cmd));\n    } catch (e) {\n        return '';\n    }\n}\n\nfunction tryCommand(cmd, errMsg, catchStderr) {\n    var d = Q.defer();\n    child_process.exec(cmd, function(err, stdout, stderr) {\n        if (err) d.reject(new CordovaError(errMsg));\n        // Sometimes it is necessary to return an stderr instead of stdout in case of success, since\n        // some commands prints theirs output to stderr instead of stdout. 'javac' is the example\n        else d.resolve((catchStderr ? stderr : stdout).trim());\n    });\n    return d.promise;\n}\n\n// Get valid target from framework/project.properties\nmodule.exports.get_target = function() {\n    function extractFromFile(filePath) {\n        var target = shelljs.grep(/\\btarget=/, filePath);\n        if (!target) {\n            throw new Error('Could not find android target within: ' + filePath);\n        }\n        return target.split('=')[1].trim();\n    }\n    if (fs.existsSync(path.join(ROOT, 'framework', 'project.properties'))) {\n        return extractFromFile(path.join(ROOT, 'framework', 'project.properties'));\n    }\n    if (fs.existsSync(path.join(ROOT, 'project.properties'))) {\n        // if no target found, we're probably in a project and project.properties is in ROOT.\n        return extractFromFile(path.join(ROOT, 'project.properties'));\n    }\n    throw new Error('Could not find android target. File missing: ' + path.join(ROOT, 'project.properties'));\n};\n\n// Returns a promise. Called only by build and clean commands.\nmodule.exports.check_ant = function() {\n    return tryCommand('ant -version', 'Failed to run \"ant -version\", make sure you have ant installed and added to your PATH.')\n    .then(function (output) {\n        // Parse Ant version from command output\n        return /version ((?:\\d+\\.)+(?:\\d+))/i.exec(output)[1];\n    });\n};\n\n// Returns a promise. Called only by build and clean commands.\nmodule.exports.check_gradle = function() {\n    var sdkDir = process.env['ANDROID_HOME'];\n    if (!sdkDir)\n        return Q.reject(new CordovaError('Could not find gradle wrapper within Android SDK. Could not find Android SDK directory.\\n' +\n            'Might need to install Android SDK or set up \\'ANDROID_HOME\\' env variable.'));\n\n    var wrapperDir = path.join(sdkDir, 'tools', 'templates', 'gradle', 'wrapper');\n    if (!fs.existsSync(wrapperDir)) {\n        return Q.reject(new CordovaError('Could not find gradle wrapper within Android SDK. Might need to update your Android SDK.\\n' +\n            'Looked here: ' + wrapperDir));\n    }\n    return Q.when();\n};\n\n// Returns a promise.\nmodule.exports.check_java = function() {\n    var javacPath = forgivingWhichSync('javac');\n    var hasJavaHome = !!process.env['JAVA_HOME'];\n    return Q().then(function() {\n        if (hasJavaHome) {\n            // Windows java installer doesn't add javac to PATH, nor set JAVA_HOME (ugh).\n            if (!javacPath) {\n                process.env['PATH'] += path.delimiter + path.join(process.env['JAVA_HOME'], 'bin');\n            }\n        } else {\n            if (javacPath) {\n                var msg = 'Failed to find \\'JAVA_HOME\\' environment variable. Try setting setting it manually.';\n                // OS X has a command for finding JAVA_HOME.\n                if (fs.existsSync('/usr/libexec/java_home')) {\n                    return tryCommand('/usr/libexec/java_home', msg)\n                    .then(function(stdout) {\n                        process.env['JAVA_HOME'] = stdout.trim();\n                    });\n                } else {\n                    // See if we can derive it from javac's location.\n                    // fs.realpathSync is require on Ubuntu, which symplinks from /usr/bin -> JDK\n                    var maybeJavaHome = path.dirname(path.dirname(javacPath));\n                    if (fs.existsSync(path.join(maybeJavaHome, 'lib', 'tools.jar'))) {\n                        process.env['JAVA_HOME'] = maybeJavaHome;\n                    } else {\n                        throw new CordovaError(msg);\n                    }\n                }\n            } else if (isWindows) {\n                // Try to auto-detect java in the default install paths.\n                var oldSilent = shelljs.config.silent;\n                shelljs.config.silent = true;\n                var firstJdkDir =\n                    shelljs.ls(process.env['ProgramFiles'] + '\\\\java\\\\jdk*')[0] ||\n                    shelljs.ls('C:\\\\Program Files\\\\java\\\\jdk*')[0] ||\n                    shelljs.ls('C:\\\\Program Files (x86)\\\\java\\\\jdk*')[0];\n                shelljs.config.silent = oldSilent;\n                if (firstJdkDir) {\n                    // shelljs always uses / in paths.\n                    firstJdkDir = firstJdkDir.replace(/\\//g, path.sep);\n                    if (!javacPath) {\n                        process.env['PATH'] += path.delimiter + path.join(firstJdkDir, 'bin');\n                    }\n                    process.env['JAVA_HOME'] = firstJdkDir;\n                }\n            }\n        }\n    }).then(function() {\n        var msg =\n            'Failed to run \"java -version\", make sure that you have a JDK installed.\\n' +\n            'You can get it from: http://www.oracle.com/technetwork/java/javase/downloads.\\n';\n        if (process.env['JAVA_HOME']) {\n            msg += 'Your JAVA_HOME is invalid: ' + process.env['JAVA_HOME'] + '\\n';\n        }\n        return tryCommand('java -version', msg)\n        .then(function() {\n            // We use tryCommand with catchStderr = true, because\n            // javac writes version info to stderr instead of stdout\n            return tryCommand('javac -version', msg, true);\n        }).then(function (output) {\n            var match = /javac ((?:\\d+\\.)+(?:\\d+))/i.exec(output)[1];\n            return match && match[1];\n        });\n    });\n};\n\n// Returns a promise.\nmodule.exports.check_android = function() {\n    return Q().then(function() {\n        var androidCmdPath = forgivingWhichSync('android');\n        var adbInPath = !!forgivingWhichSync('adb');\n        var hasAndroidHome = !!process.env['ANDROID_HOME'] && fs.existsSync(process.env['ANDROID_HOME']);\n        function maybeSetAndroidHome(value) {\n            if (!hasAndroidHome && fs.existsSync(value)) {\n                hasAndroidHome = true;\n                process.env['ANDROID_HOME'] = value;\n            }\n        }\n        if (!hasAndroidHome && !androidCmdPath) {\n            if (isWindows) {\n                // Android Studio 1.0 installer\n                maybeSetAndroidHome(path.join(process.env['LOCALAPPDATA'], 'Android', 'sdk'));\n                maybeSetAndroidHome(path.join(process.env['ProgramFiles'], 'Android', 'sdk'));\n                // Android Studio pre-1.0 installer\n                maybeSetAndroidHome(path.join(process.env['LOCALAPPDATA'], 'Android', 'android-studio', 'sdk'));\n                maybeSetAndroidHome(path.join(process.env['ProgramFiles'], 'Android', 'android-studio', 'sdk'));\n                // Stand-alone installer\n                maybeSetAndroidHome(path.join(process.env['LOCALAPPDATA'], 'Android', 'android-sdk'));\n                maybeSetAndroidHome(path.join(process.env['ProgramFiles'], 'Android', 'android-sdk'));\n            } else if (process.platform == 'darwin') {\n                // Android Studio 1.0 installer\n                maybeSetAndroidHome(path.join(process.env['HOME'], 'Library', 'Android', 'sdk'));\n                // Android Studio pre-1.0 installer\n                maybeSetAndroidHome('/Applications/Android Studio.app/sdk');\n                // Stand-alone zip file that user might think to put under /Applications\n                maybeSetAndroidHome('/Applications/android-sdk-macosx');\n                maybeSetAndroidHome('/Applications/android-sdk');\n            }\n            if (process.env['HOME']) {\n                // Stand-alone zip file that user might think to put under their home directory\n                maybeSetAndroidHome(path.join(process.env['HOME'], 'android-sdk-macosx'));\n                maybeSetAndroidHome(path.join(process.env['HOME'], 'android-sdk'));\n            }\n        }\n        if (hasAndroidHome && !androidCmdPath) {\n            process.env['PATH'] += path.delimiter + path.join(process.env['ANDROID_HOME'], 'tools');\n        }\n        if (androidCmdPath && !hasAndroidHome) {\n            var parentDir = path.dirname(androidCmdPath);\n            var grandParentDir = path.dirname(parentDir);\n            if (path.basename(parentDir) == 'tools') {\n                process.env['ANDROID_HOME'] = path.dirname(parentDir);\n                hasAndroidHome = true;\n            } else if (fs.existsSync(path.join(grandParentDir, 'tools', 'android'))) {\n                process.env['ANDROID_HOME'] = grandParentDir;\n                hasAndroidHome = true;\n            } else {\n                throw new CordovaError('Failed to find \\'ANDROID_HOME\\' environment variable. Try setting setting it manually.\\n' +\n                    'Detected \\'android\\' command at ' + parentDir + ' but no \\'tools\\' directory found near.\\n' +\n                    'Try reinstall Android SDK or update your PATH to include path to valid SDK directory.');\n            }\n        }\n        if (hasAndroidHome && !adbInPath) {\n            process.env['PATH'] += path.delimiter + path.join(process.env['ANDROID_HOME'], 'platform-tools');\n        }\n        if (!process.env['ANDROID_HOME']) {\n            throw new CordovaError('Failed to find \\'ANDROID_HOME\\' environment variable. Try setting setting it manually.\\n' +\n                'Failed to find \\'android\\' command in your \\'PATH\\'. Try update your \\'PATH\\' to include path to valid SDK directory.');\n        }\n        if (!fs.existsSync(process.env['ANDROID_HOME'])) {\n            throw new CordovaError('\\'ANDROID_HOME\\' environment variable is set to non-existent path: ' + process.env['ANDROID_HOME'] +\n                '\\nTry update it manually to point to valid SDK directory.');\n        }\n    });\n};\n\nmodule.exports.getAbsoluteAndroidCmd = function () {\n    var cmd = forgivingWhichSync('android');\n    if (process.platform === 'win32') {\n        return '\"' + cmd + '\"';\n    }\n    return cmd.replace(/(\\s)/g, '\\\\$1');\n};\n\nmodule.exports.check_android_target = function(valid_target) {\n    // valid_target can look like:\n    //   android-19\n    //   android-L\n    //   Google Inc.:Google APIs:20\n    //   Google Inc.:Glass Development Kit Preview:20\n    if (!valid_target) valid_target = module.exports.get_target();\n    var msg = 'Android SDK not found. Make sure that it is installed. If it is not at the default location, set the ANDROID_HOME environment variable.';\n    return tryCommand('android list targets --compact', msg)\n    .then(function(output) {\n        var targets = output.split('\\n');\n        if (targets.indexOf(valid_target) >= 0) {\n            return targets;\n        }\n\n        var androidCmd = module.exports.getAbsoluteAndroidCmd();\n        throw new CordovaError('Please install Android target: \"' + valid_target + '\".\\n\\n' +\n            'Hint: Open the SDK manager by running: ' + androidCmd + '\\n' +\n            'You will require:\\n' +\n            '1. \"SDK Platform\" for ' + valid_target + '\\n' +\n            '2. \"Android SDK Platform-tools (latest)\\n' +\n            '3. \"Android SDK Build-tools\" (latest)');\n    });\n};\n\n// Returns a promise.\nmodule.exports.run = function() {\n    return Q.all([this.check_java(), this.check_android().then(this.check_android_target)])\n    .then(function() {\n        console.log('ANDROID_HOME=' + process.env['ANDROID_HOME']);\n        console.log('JAVA_HOME=' + process.env['JAVA_HOME']);\n    });\n};\n\n/**\n * Object thar represents one of requirements for current platform.\n * @param {String} id         The unique identifier for this requirements.\n * @param {String} name       The name of requirements. Human-readable field.\n * @param {String} version    The version of requirement installed. In some cases could be an array of strings\n *                            (for example, check_android_target returns an array of android targets installed)\n * @param {Boolean} installed Indicates whether the requirement is installed or not\n */\nvar Requirement = function (id, name, version, installed) {\n    this.id = id;\n    this.name = name;\n    this.installed = installed || false;\n    this.metadata = {\n        version: version,\n    };\n};\n\n/**\n * Methods that runs all checks one by one and returns a result of checks\n * as an array of Requirement objects. This method intended to be used by cordova-lib check_reqs method\n *\n * @return Promise<Requirement[]> Array of requirements. Due to implementation, promise is always fulfilled.\n */\nmodule.exports.check_all = function() {\n\n    var requirements = [\n        new Requirement('java', 'Java JDK'),\n        new Requirement('androidSdk', 'Android SDK'),\n        new Requirement('androidTarget', 'Android target'),\n        new Requirement('gradle', 'Gradle')\n    ];\n\n    var checkFns = [\n        this.check_java,\n        this.check_android,\n        this.check_android_target,\n        this.check_gradle\n    ];\n\n    // Then execute requirement checks one-by-one\n    return checkFns.reduce(function (promise, checkFn, idx) {\n        // Update each requirement with results\n        var requirement = requirements[idx];\n        return promise.then(checkFn)\n        .then(function (version) {\n            requirement.installed = true;\n            requirement.metadata.version = version;\n        }, function (err) {\n            requirement.metadata.reason = err instanceof Error ? err.message : err;\n        });\n    }, Q())\n    .then(function () {\n        // When chain is completed, return requirements array to upstream API\n        return requirements;\n    });\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/shell.js":"//\n// ShellJS\n// Unix shell commands on top of Node's API\n//\n// Copyright (c) 2012 Artur Adib\n// http://github.com/arturadib/shelljs\n//\n\nvar common = require('./src/common');\n\n\n//@\n//@ All commands run synchronously, unless otherwise stated.\n//@\n\n//@include ./src/cd\nvar _cd = require('./src/cd');\nexports.cd = common.wrap('cd', _cd);\n\n//@include ./src/pwd\nvar _pwd = require('./src/pwd');\nexports.pwd = common.wrap('pwd', _pwd);\n\n//@include ./src/ls\nvar _ls = require('./src/ls');\nexports.ls = common.wrap('ls', _ls);\n\n//@include ./src/find\nvar _find = require('./src/find');\nexports.find = common.wrap('find', _find);\n\n//@include ./src/cp\nvar _cp = require('./src/cp');\nexports.cp = common.wrap('cp', _cp);\n\n//@include ./src/rm\nvar _rm = require('./src/rm');\nexports.rm = common.wrap('rm', _rm);\n\n//@include ./src/mv\nvar _mv = require('./src/mv');\nexports.mv = common.wrap('mv', _mv);\n\n//@include ./src/mkdir\nvar _mkdir = require('./src/mkdir');\nexports.mkdir = common.wrap('mkdir', _mkdir);\n\n//@include ./src/test\nvar _test = require('./src/test');\nexports.test = common.wrap('test', _test);\n\n//@include ./src/cat\nvar _cat = require('./src/cat');\nexports.cat = common.wrap('cat', _cat);\n\n//@include ./src/to\nvar _to = require('./src/to');\nString.prototype.to = common.wrap('to', _to);\n\n//@include ./src/toEnd\nvar _toEnd = require('./src/toEnd');\nString.prototype.toEnd = common.wrap('toEnd', _toEnd);\n\n//@include ./src/sed\nvar _sed = require('./src/sed');\nexports.sed = common.wrap('sed', _sed);\n\n//@include ./src/grep\nvar _grep = require('./src/grep');\nexports.grep = common.wrap('grep', _grep);\n\n//@include ./src/which\nvar _which = require('./src/which');\nexports.which = common.wrap('which', _which);\n\n//@include ./src/echo\nvar _echo = require('./src/echo');\nexports.echo = _echo; // don't common.wrap() as it could parse '-options'\n\n//@include ./src/dirs\nvar _dirs = require('./src/dirs').dirs;\nexports.dirs = common.wrap(\"dirs\", _dirs);\nvar _pushd = require('./src/dirs').pushd;\nexports.pushd = common.wrap('pushd', _pushd);\nvar _popd = require('./src/dirs').popd;\nexports.popd = common.wrap(\"popd\", _popd);\n\n//@include ./src/ln\nvar _ln = require('./src/ln');\nexports.ln = common.wrap('ln', _ln);\n\n//@\n//@ ### exit(code)\n//@ Exits the current process with the given exit code.\nexports.exit = process.exit;\n\n//@\n//@ ### env['VAR_NAME']\n//@ Object containing environment variables (both getter and setter). Shortcut to process.env.\nexports.env = process.env;\n\n//@include ./src/exec\nvar _exec = require('./src/exec');\nexports.exec = common.wrap('exec', _exec, {notUnix:true});\n\n//@include ./src/chmod\nvar _chmod = require('./src/chmod');\nexports.chmod = common.wrap('chmod', _chmod);\n\n\n\n//@\n//@ ## Non-Unix commands\n//@\n\n//@include ./src/tempdir\nvar _tempDir = require('./src/tempdir');\nexports.tempdir = common.wrap('tempdir', _tempDir);\n\n\n//@include ./src/error\nvar _error = require('./src/error');\nexports.error = _error;\n\n\n\n//@\n//@ ## Configuration\n//@\n\nexports.config = common.config;\n\n//@\n//@ ### config.silent\n//@ Example:\n//@\n//@ ```javascript\n//@ var sh = require('shelljs');\n//@ var silentState = sh.config.silent; // save old silent state\n//@ sh.config.silent = true;\n//@ /* ... */\n//@ sh.config.silent = silentState; // restore old silent state\n//@ ```\n//@\n//@ Suppresses all command output if `true`, except for `echo()` calls.\n//@ Default is `false`.\n\n//@\n//@ ### config.fatal\n//@ Example:\n//@\n//@ ```javascript\n//@ require('shelljs/global');\n//@ config.fatal = true;\n//@ cp('this_file_does_not_exist', '/dev/null'); // dies here\n//@ /* more commands... */\n//@ ```\n//@\n//@ If `true` the script will die on errors. Default is `false`.\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/common.js":"var os = require('os');\nvar fs = require('fs');\nvar _ls = require('./ls');\n\n// Module globals\nvar config = {\n  silent: false,\n  fatal: false\n};\nexports.config = config;\n\nvar state = {\n  error: null,\n  currentCmd: 'shell.js',\n  tempDir: null\n};\nexports.state = state;\n\nvar platform = os.type().match(/^Win/) ? 'win' : 'unix';\nexports.platform = platform;\n\nfunction log() {\n  if (!config.silent)\n    console.log.apply(this, arguments);\n}\nexports.log = log;\n\n// Shows error message. Throws unless _continue or config.fatal are true\nfunction error(msg, _continue) {\n  if (state.error === null)\n    state.error = '';\n  state.error += state.currentCmd + ': ' + msg + '\\n';\n\n  if (msg.length > 0)\n    log(state.error);\n\n  if (config.fatal)\n    process.exit(1);\n\n  if (!_continue)\n    throw '';\n}\nexports.error = error;\n\n// In the future, when Proxies are default, we can add methods like `.to()` to primitive strings.\n// For now, this is a dummy function to bookmark places we need such strings\nfunction ShellString(str) {\n  return str;\n}\nexports.ShellString = ShellString;\n\n// Returns {'alice': true, 'bob': false} when passed a dictionary, e.g.:\n//   parseOptions('-a', {'a':'alice', 'b':'bob'});\nfunction parseOptions(str, map) {\n  if (!map)\n    error('parseOptions() internal error: no map given');\n\n  // All options are false by default\n  var options = {};\n  for (var letter in map)\n    options[map[letter]] = false;\n\n  if (!str)\n    return options; // defaults\n\n  if (typeof str !== 'string')\n    error('parseOptions() internal error: wrong str');\n\n  // e.g. match[1] = 'Rf' for str = '-Rf'\n  var match = str.match(/^\\-(.+)/);\n  if (!match)\n    return options;\n\n  // e.g. chars = ['R', 'f']\n  var chars = match[1].split('');\n\n  chars.forEach(function(c) {\n    if (c in map)\n      options[map[c]] = true;\n    else\n      error('option not recognized: '+c);\n  });\n\n  return options;\n}\nexports.parseOptions = parseOptions;\n\n// Expands wildcards with matching (ie. existing) file names.\n// For example:\n//   expand(['file*.js']) = ['file1.js', 'file2.js', ...]\n//   (if the files 'file1.js', 'file2.js', etc, exist in the current dir)\nfunction expand(list) {\n  var expanded = [];\n  list.forEach(function(listEl) {\n    // Wildcard present on directory names ?\n    if(listEl.search(/\\*[^\\/]*\\//) > -1 || listEl.search(/\\*\\*[^\\/]*\\//) > -1) {\n      var match = listEl.match(/^([^*]+\\/|)(.*)/);\n      var root = match[1];\n      var rest = match[2];\n      var restRegex = rest.replace(/\\*\\*/g, \".*\").replace(/\\*/g, \"[^\\\\/]*\");\n      restRegex = new RegExp(restRegex);\n      \n      _ls('-R', root).filter(function (e) {\n        return restRegex.test(e);\n      }).forEach(function(file) {\n        expanded.push(file);\n      });\n    }\n    // Wildcard present on file names ?\n    else if (listEl.search(/\\*/) > -1) {\n      _ls('', listEl).forEach(function(file) {\n        expanded.push(file);\n      });\n    } else {\n      expanded.push(listEl);\n    }\n  });\n  return expanded;\n}\nexports.expand = expand;\n\n// Normalizes _unlinkSync() across platforms to match Unix behavior, i.e.\n// file can be unlinked even if it's read-only, see https://github.com/joyent/node/issues/3006\nfunction unlinkSync(file) {\n  try {\n    fs.unlinkSync(file);\n  } catch(e) {\n    // Try to override file permission\n    if (e.code === 'EPERM') {\n      fs.chmodSync(file, '0666');\n      fs.unlinkSync(file);\n    } else {\n      throw e;\n    }\n  }\n}\nexports.unlinkSync = unlinkSync;\n\n// e.g. 'shelljs_a5f185d0443ca...'\nfunction randomFileName() {\n  function randomHash(count) {\n    if (count === 1)\n      return parseInt(16*Math.random(), 10).toString(16);\n    else {\n      var hash = '';\n      for (var i=0; i<count; i++)\n        hash += randomHash(1);\n      return hash;\n    }\n  }\n\n  return 'shelljs_'+randomHash(20);\n}\nexports.randomFileName = randomFileName;\n\n// extend(target_obj, source_obj1 [, source_obj2 ...])\n// Shallow extend, e.g.:\n//    extend({A:1}, {b:2}, {c:3}) returns {A:1, b:2, c:3}\nfunction extend(target) {\n  var sources = [].slice.call(arguments, 1);\n  sources.forEach(function(source) {\n    for (var key in source)\n      target[key] = source[key];\n  });\n\n  return target;\n}\nexports.extend = extend;\n\n// Common wrapper for all Unix-like commands\nfunction wrap(cmd, fn, options) {\n  return function() {\n    var retValue = null;\n\n    state.currentCmd = cmd;\n    state.error = null;\n\n    try {\n      var args = [].slice.call(arguments, 0);\n\n      if (options && options.notUnix) {\n        retValue = fn.apply(this, args);\n      } else {\n        if (args.length === 0 || typeof args[0] !== 'string' || args[0][0] !== '-')\n          args.unshift(''); // only add dummy option if '-option' not already present\n        retValue = fn.apply(this, args);\n      }\n    } catch (e) {\n      if (!state.error) {\n        // If state.error hasn't been set it's an error thrown by Node, not us - probably a bug...\n        console.log('shell.js: internal error');\n        console.log(e.stack || e);\n        process.exit(1);\n      }\n      if (config.fatal)\n        throw e;\n    }\n\n    state.currentCmd = 'shell.js';\n    return retValue;\n  };\n} // wrap\nexports.wrap = wrap;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/ls.js":"var path = require('path');\nvar fs = require('fs');\nvar common = require('./common');\nvar _cd = require('./cd');\nvar _pwd = require('./pwd');\n\n//@\n//@ ### ls([options ,] path [,path ...])\n//@ ### ls([options ,] path_array)\n//@ Available options:\n//@\n//@ + `-R`: recursive\n//@ + `-A`: all files (include files beginning with `.`, except for `.` and `..`)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ ls('projs/*.js');\n//@ ls('-R', '/users/me', '/tmp');\n//@ ls('-R', ['/users/me', '/tmp']); // same as above\n//@ ```\n//@\n//@ Returns array of files in the given path, or in current directory if no path provided.\nfunction _ls(options, paths) {\n  options = common.parseOptions(options, {\n    'R': 'recursive',\n    'A': 'all',\n    'a': 'all_deprecated'\n  });\n\n  if (options.all_deprecated) {\n    // We won't support the -a option as it's hard to image why it's useful\n    // (it includes '.' and '..' in addition to '.*' files)\n    // For backwards compatibility we'll dump a deprecated message and proceed as before\n    common.log('ls: Option -a is deprecated. Use -A instead');\n    options.all = true;\n  }\n\n  if (!paths)\n    paths = ['.'];\n  else if (typeof paths === 'object')\n    paths = paths; // assume array\n  else if (typeof paths === 'string')\n    paths = [].slice.call(arguments, 1);\n\n  var list = [];\n\n  // Conditionally pushes file to list - returns true if pushed, false otherwise\n  // (e.g. prevents hidden files to be included unless explicitly told so)\n  function pushFile(file, query) {\n    // hidden file?\n    if (path.basename(file)[0] === '.') {\n      // not explicitly asking for hidden files?\n      if (!options.all && !(path.basename(query)[0] === '.' && path.basename(query).length > 1))\n        return false;\n    }\n\n    if (common.platform === 'win')\n      file = file.replace(/\\\\/g, '/');\n\n    list.push(file);\n    return true;\n  }\n\n  paths.forEach(function(p) {\n    if (fs.existsSync(p)) {\n      var stats = fs.statSync(p);\n      // Simple file?\n      if (stats.isFile()) {\n        pushFile(p, p);\n        return; // continue\n      }\n\n      // Simple dir?\n      if (stats.isDirectory()) {\n        // Iterate over p contents\n        fs.readdirSync(p).forEach(function(file) {\n          if (!pushFile(file, p))\n            return;\n\n          // Recursive?\n          if (options.recursive) {\n            var oldDir = _pwd();\n            _cd('', p);\n            if (fs.statSync(file).isDirectory())\n              list = list.concat(_ls('-R'+(options.all?'A':''), file+'/*'));\n            _cd('', oldDir);\n          }\n        });\n        return; // continue\n      }\n    }\n\n    // p does not exist - possible wildcard present\n\n    var basename = path.basename(p);\n    var dirname = path.dirname(p);\n    // Wildcard present on an existing dir? (e.g. '/tmp/*.js')\n    if (basename.search(/\\*/) > -1 && fs.existsSync(dirname) && fs.statSync(dirname).isDirectory) {\n      // Escape special regular expression chars\n      var regexp = basename.replace(/(\\^|\\$|\\(|\\)|<|>|\\[|\\]|\\{|\\}|\\.|\\+|\\?)/g, '\\\\$1');\n      // Translates wildcard into regex\n      regexp = '^' + regexp.replace(/\\*/g, '.*') + '$';\n      // Iterate over directory contents\n      fs.readdirSync(dirname).forEach(function(file) {\n        if (file.match(new RegExp(regexp))) {\n          if (!pushFile(path.normalize(dirname+'/'+file), basename))\n            return;\n\n          // Recursive?\n          if (options.recursive) {\n            var pp = dirname + '/' + file;\n            if (fs.lstatSync(pp).isDirectory())\n              list = list.concat(_ls('-R'+(options.all?'A':''), pp+'/*'));\n          } // recursive\n        } // if file matches\n      }); // forEach\n      return;\n    }\n\n    common.error('no such file or directory: ' + p, true);\n  });\n\n  return list;\n}\nmodule.exports = _ls;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/cd.js":"var fs = require('fs');\nvar common = require('./common');\n\n//@\n//@ ### cd('dir')\n//@ Changes to directory `dir` for the duration of the script\nfunction _cd(options, dir) {\n  if (!dir)\n    common.error('directory not specified');\n\n  if (!fs.existsSync(dir))\n    common.error('no such file or directory: ' + dir);\n\n  if (!fs.statSync(dir).isDirectory())\n    common.error('not a directory: ' + dir);\n\n  process.chdir(dir);\n}\nmodule.exports = _cd;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/pwd.js":"var path = require('path');\nvar common = require('./common');\n\n//@\n//@ ### pwd()\n//@ Returns the current directory.\nfunction _pwd(options) {\n  var pwd = path.resolve(process.cwd());\n  return common.ShellString(pwd);\n}\nmodule.exports = _pwd;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/find.js":"var fs = require('fs');\nvar common = require('./common');\nvar _ls = require('./ls');\n\n//@\n//@ ### find(path [,path ...])\n//@ ### find(path_array)\n//@ Examples:\n//@\n//@ ```javascript\n//@ find('src', 'lib');\n//@ find(['src', 'lib']); // same as above\n//@ find('.').filter(function(file) { return file.match(/\\.js$/); });\n//@ ```\n//@\n//@ Returns array of all files (however deep) in the given paths.\n//@\n//@ The main difference from `ls('-R', path)` is that the resulting file names\n//@ include the base directories, e.g. `lib/resources/file1` instead of just `file1`.\nfunction _find(options, paths) {\n  if (!paths)\n    common.error('no path specified');\n  else if (typeof paths === 'object')\n    paths = paths; // assume array\n  else if (typeof paths === 'string')\n    paths = [].slice.call(arguments, 1);\n\n  var list = [];\n\n  function pushFile(file) {\n    if (common.platform === 'win')\n      file = file.replace(/\\\\/g, '/');\n    list.push(file);\n  }\n\n  // why not simply do ls('-R', paths)? because the output wouldn't give the base dirs\n  // to get the base dir in the output, we need instead ls('-R', 'dir/*') for every directory\n\n  paths.forEach(function(file) {\n    pushFile(file);\n\n    if (fs.statSync(file).isDirectory()) {\n      _ls('-RA', file+'/*').forEach(function(subfile) {\n        pushFile(subfile);\n      });\n    }\n  });\n\n  return list;\n}\nmodule.exports = _find;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/cp.js":"var fs = require('fs');\nvar path = require('path');\nvar common = require('./common');\nvar os = require('os');\n\n// Buffered file copy, synchronous\n// (Using readFileSync() + writeFileSync() could easily cause a memory overflow\n//  with large files)\nfunction copyFileSync(srcFile, destFile) {\n  if (!fs.existsSync(srcFile))\n    common.error('copyFileSync: no such file or directory: ' + srcFile);\n\n  var BUF_LENGTH = 64*1024,\n      buf = new Buffer(BUF_LENGTH),\n      bytesRead = BUF_LENGTH,\n      pos = 0,\n      fdr = null,\n      fdw = null;\n\n  try {\n    fdr = fs.openSync(srcFile, 'r');\n  } catch(e) {\n    common.error('copyFileSync: could not read src file ('+srcFile+')');\n  }\n\n  try {\n    fdw = fs.openSync(destFile, 'w');\n  } catch(e) {\n    common.error('copyFileSync: could not write to dest file (code='+e.code+'):'+destFile);\n  }\n\n  while (bytesRead === BUF_LENGTH) {\n    bytesRead = fs.readSync(fdr, buf, 0, BUF_LENGTH, pos);\n    fs.writeSync(fdw, buf, 0, bytesRead);\n    pos += bytesRead;\n  }\n\n  fs.closeSync(fdr);\n  fs.closeSync(fdw);\n\n  fs.chmodSync(destFile, fs.statSync(srcFile).mode);\n}\n\n// Recursively copies 'sourceDir' into 'destDir'\n// Adapted from https://github.com/ryanmcgrath/wrench-js\n//\n// Copyright (c) 2010 Ryan McGrath\n// Copyright (c) 2012 Artur Adib\n//\n// Licensed under the MIT License\n// http://www.opensource.org/licenses/mit-license.php\nfunction cpdirSyncRecursive(sourceDir, destDir, opts) {\n  if (!opts) opts = {};\n\n  /* Create the directory where all our junk is moving to; read the mode of the source directory and mirror it */\n  var checkDir = fs.statSync(sourceDir);\n  try {\n    fs.mkdirSync(destDir, checkDir.mode);\n  } catch (e) {\n    //if the directory already exists, that's okay\n    if (e.code !== 'EEXIST') throw e;\n  }\n\n  var files = fs.readdirSync(sourceDir);\n\n  for (var i = 0; i < files.length; i++) {\n    var srcFile = sourceDir + \"/\" + files[i];\n    var destFile = destDir + \"/\" + files[i];\n    var srcFileStat = fs.lstatSync(srcFile);\n\n    if (srcFileStat.isDirectory()) {\n      /* recursion this thing right on back. */\n      cpdirSyncRecursive(srcFile, destFile, opts);\n    } else if (srcFileStat.isSymbolicLink()) {\n      var symlinkFull = fs.readlinkSync(srcFile);\n      fs.symlinkSync(symlinkFull, destFile, os.platform() === \"win32\" ? \"junction\" : null);\n    } else {\n      /* At this point, we've hit a file actually worth copying... so copy it on over. */\n      if (fs.existsSync(destFile) && !opts.force) {\n        common.log('skipping existing file: ' + files[i]);\n      } else {\n        copyFileSync(srcFile, destFile);\n      }\n    }\n\n  } // for files\n} // cpdirSyncRecursive\n\n\n//@\n//@ ### cp([options ,] source [,source ...], dest)\n//@ ### cp([options ,] source_array, dest)\n//@ Available options:\n//@\n//@ + `-f`: force\n//@ + `-r, -R`: recursive\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ cp('file1', 'dir1');\n//@ cp('-Rf', '/tmp/*', '/usr/local/*', '/home/tmp');\n//@ cp('-Rf', ['/tmp/*', '/usr/local/*'], '/home/tmp'); // same as above\n//@ ```\n//@\n//@ Copies files. The wildcard `*` is accepted.\nfunction _cp(options, sources, dest) {\n  options = common.parseOptions(options, {\n    'f': 'force',\n    'R': 'recursive',\n    'r': 'recursive'\n  });\n\n  // Get sources, dest\n  if (arguments.length < 3) {\n    common.error('missing <source> and/or <dest>');\n  } else if (arguments.length > 3) {\n    sources = [].slice.call(arguments, 1, arguments.length - 1);\n    dest = arguments[arguments.length - 1];\n  } else if (typeof sources === 'string') {\n    sources = [sources];\n  } else if ('length' in sources) {\n    sources = sources; // no-op for array\n  } else {\n    common.error('invalid arguments');\n  }\n\n  var exists = fs.existsSync(dest),\n      stats = exists && fs.statSync(dest);\n\n  // Dest is not existing dir, but multiple sources given\n  if ((!exists || !stats.isDirectory()) && sources.length > 1)\n    common.error('dest is not a directory (too many sources)');\n\n  // Dest is an existing file, but no -f given\n  if (exists && stats.isFile() && !options.force)\n    common.error('dest file already exists: ' + dest);\n\n  if (options.recursive) {\n    // Recursive allows the shortcut syntax \"sourcedir/\" for \"sourcedir/*\"\n    // (see Github issue #15)\n    sources.forEach(function(src, i) {\n      if (src[src.length - 1] === '/')\n        sources[i] += '*';\n    });\n\n    // Create dest\n    try {\n      fs.mkdirSync(dest, parseInt('0777', 8));\n    } catch (e) {\n      // like Unix's cp, keep going even if we can't create dest dir\n    }\n  }\n\n  sources = common.expand(sources);\n\n  sources.forEach(function(src) {\n    if (!fs.existsSync(src)) {\n      common.error('no such file or directory: '+src, true);\n      return; // skip file\n    }\n\n    // If here, src exists\n    if (fs.statSync(src).isDirectory()) {\n      if (!options.recursive) {\n        // Non-Recursive\n        common.log(src + ' is a directory (not copied)');\n      } else {\n        // Recursive\n        // 'cp /a/source dest' should create 'source' in 'dest'\n        var newDest = path.join(dest, path.basename(src)),\n            checkDir = fs.statSync(src);\n        try {\n          fs.mkdirSync(newDest, checkDir.mode);\n        } catch (e) {\n          //if the directory already exists, that's okay\n          if (e.code !== 'EEXIST') {\n            common.error('dest file no such file or directory: ' + newDest, true);\n            throw e;\n          }\n        }\n\n        cpdirSyncRecursive(src, newDest, {force: options.force});\n      }\n      return; // done with dir\n    }\n\n    // If here, src is a file\n\n    // When copying to '/path/dir':\n    //    thisDest = '/path/dir/file1'\n    var thisDest = dest;\n    if (fs.existsSync(dest) && fs.statSync(dest).isDirectory())\n      thisDest = path.normalize(dest + '/' + path.basename(src));\n\n    if (fs.existsSync(thisDest) && !options.force) {\n      common.error('dest file already exists: ' + thisDest, true);\n      return; // skip file\n    }\n\n    copyFileSync(src, thisDest);\n  }); // forEach(src)\n}\nmodule.exports = _cp;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/rm.js":"var common = require('./common');\nvar fs = require('fs');\n\n// Recursively removes 'dir'\n// Adapted from https://github.com/ryanmcgrath/wrench-js\n//\n// Copyright (c) 2010 Ryan McGrath\n// Copyright (c) 2012 Artur Adib\n//\n// Licensed under the MIT License\n// http://www.opensource.org/licenses/mit-license.php\nfunction rmdirSyncRecursive(dir, force) {\n  var files;\n\n  files = fs.readdirSync(dir);\n\n  // Loop through and delete everything in the sub-tree after checking it\n  for(var i = 0; i < files.length; i++) {\n    var file = dir + \"/\" + files[i],\n        currFile = fs.lstatSync(file);\n\n    if(currFile.isDirectory()) { // Recursive function back to the beginning\n      rmdirSyncRecursive(file, force);\n    }\n\n    else if(currFile.isSymbolicLink()) { // Unlink symlinks\n      if (force || isWriteable(file)) {\n        try {\n          common.unlinkSync(file);\n        } catch (e) {\n          common.error('could not remove file (code '+e.code+'): ' + file, true);\n        }\n      }\n    }\n\n    else // Assume it's a file - perhaps a try/catch belongs here?\n      if (force || isWriteable(file)) {\n        try {\n          common.unlinkSync(file);\n        } catch (e) {\n          common.error('could not remove file (code '+e.code+'): ' + file, true);\n        }\n      }\n  }\n\n  // Now that we know everything in the sub-tree has been deleted, we can delete the main directory.\n  // Huzzah for the shopkeep.\n\n  var result;\n  try {\n    // Retry on windows, sometimes it takes a little time before all the files in the directory are gone\n    var start = Date.now();\n    while (true) {\n      try {\n        result = fs.rmdirSync(dir);\n        if (fs.existsSync(dir)) throw { code: \"EAGAIN\" }\n        break;\n      } catch(er) {\n        // In addition to error codes, also check if the directory still exists and loop again if true\n        if (process.platform === \"win32\" && (er.code === \"ENOTEMPTY\" || er.code === \"EBUSY\" || er.code === \"EPERM\" || er.code === \"EAGAIN\")) {\n          if (Date.now() - start > 1000) throw er;\n        } else if (er.code === \"ENOENT\") {\n          // Directory did not exist, deletion was successful\n          break;\n        } else {\n          throw er;\n        }\n      }\n    }\n  } catch(e) {\n    common.error('could not remove directory (code '+e.code+'): ' + dir, true);\n  }\n\n  return result;\n} // rmdirSyncRecursive\n\n// Hack to determine if file has write permissions for current user\n// Avoids having to check user, group, etc, but it's probably slow\nfunction isWriteable(file) {\n  var writePermission = true;\n  try {\n    var __fd = fs.openSync(file, 'a');\n    fs.closeSync(__fd);\n  } catch(e) {\n    writePermission = false;\n  }\n\n  return writePermission;\n}\n\n//@\n//@ ### rm([options ,] file [, file ...])\n//@ ### rm([options ,] file_array)\n//@ Available options:\n//@\n//@ + `-f`: force\n//@ + `-r, -R`: recursive\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ rm('-rf', '/tmp/*');\n//@ rm('some_file.txt', 'another_file.txt');\n//@ rm(['some_file.txt', 'another_file.txt']); // same as above\n//@ ```\n//@\n//@ Removes files. The wildcard `*` is accepted.\nfunction _rm(options, files) {\n  options = common.parseOptions(options, {\n    'f': 'force',\n    'r': 'recursive',\n    'R': 'recursive'\n  });\n  if (!files)\n    common.error('no paths given');\n\n  if (typeof files === 'string')\n    files = [].slice.call(arguments, 1);\n  // if it's array leave it as it is\n\n  files = common.expand(files);\n\n  files.forEach(function(file) {\n    if (!fs.existsSync(file)) {\n      // Path does not exist, no force flag given\n      if (!options.force)\n        common.error('no such file or directory: '+file, true);\n\n      return; // skip file\n    }\n\n    // If here, path exists\n\n    var stats = fs.lstatSync(file);\n    if (stats.isFile() || stats.isSymbolicLink()) {\n\n      // Do not check for file writing permissions\n      if (options.force) {\n        common.unlinkSync(file);\n        return;\n      }\n\n      if (isWriteable(file))\n        common.unlinkSync(file);\n      else\n        common.error('permission denied: '+file, true);\n\n      return;\n    } // simple file\n\n    // Path is an existing directory, but no -r flag given\n    if (stats.isDirectory() && !options.recursive) {\n      common.error('path is a directory', true);\n      return; // skip path\n    }\n\n    // Recursively remove existing directory\n    if (stats.isDirectory() && options.recursive) {\n      rmdirSyncRecursive(file, options.force);\n    }\n  }); // forEach(file)\n} // rm\nmodule.exports = _rm;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/mv.js":"var fs = require('fs');\nvar path = require('path');\nvar common = require('./common');\n\n//@\n//@ ### mv(source [, source ...], dest')\n//@ ### mv(source_array, dest')\n//@ Available options:\n//@\n//@ + `f`: force\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ mv('-f', 'file', 'dir/');\n//@ mv('file1', 'file2', 'dir/');\n//@ mv(['file1', 'file2'], 'dir/'); // same as above\n//@ ```\n//@\n//@ Moves files. The wildcard `*` is accepted.\nfunction _mv(options, sources, dest) {\n  options = common.parseOptions(options, {\n    'f': 'force'\n  });\n\n  // Get sources, dest\n  if (arguments.length < 3) {\n    common.error('missing <source> and/or <dest>');\n  } else if (arguments.length > 3) {\n    sources = [].slice.call(arguments, 1, arguments.length - 1);\n    dest = arguments[arguments.length - 1];\n  } else if (typeof sources === 'string') {\n    sources = [sources];\n  } else if ('length' in sources) {\n    sources = sources; // no-op for array\n  } else {\n    common.error('invalid arguments');\n  }\n\n  sources = common.expand(sources);\n\n  var exists = fs.existsSync(dest),\n      stats = exists && fs.statSync(dest);\n\n  // Dest is not existing dir, but multiple sources given\n  if ((!exists || !stats.isDirectory()) && sources.length > 1)\n    common.error('dest is not a directory (too many sources)');\n\n  // Dest is an existing file, but no -f given\n  if (exists && stats.isFile() && !options.force)\n    common.error('dest file already exists: ' + dest);\n\n  sources.forEach(function(src) {\n    if (!fs.existsSync(src)) {\n      common.error('no such file or directory: '+src, true);\n      return; // skip file\n    }\n\n    // If here, src exists\n\n    // When copying to '/path/dir':\n    //    thisDest = '/path/dir/file1'\n    var thisDest = dest;\n    if (fs.existsSync(dest) && fs.statSync(dest).isDirectory())\n      thisDest = path.normalize(dest + '/' + path.basename(src));\n\n    if (fs.existsSync(thisDest) && !options.force) {\n      common.error('dest file already exists: ' + thisDest, true);\n      return; // skip file\n    }\n\n    if (path.resolve(src) === path.dirname(path.resolve(thisDest))) {\n      common.error('cannot move to self: '+src, true);\n      return; // skip file\n    }\n\n    fs.renameSync(src, thisDest);\n  }); // forEach(src)\n} // mv\nmodule.exports = _mv;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/mkdir.js":"var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\n// Recursively creates 'dir'\nfunction mkdirSyncRecursive(dir) {\n  var baseDir = path.dirname(dir);\n\n  // Base dir exists, no recursion necessary\n  if (fs.existsSync(baseDir)) {\n    fs.mkdirSync(dir, parseInt('0777', 8));\n    return;\n  }\n\n  // Base dir does not exist, go recursive\n  mkdirSyncRecursive(baseDir);\n\n  // Base dir created, can create dir\n  fs.mkdirSync(dir, parseInt('0777', 8));\n}\n\n//@\n//@ ### mkdir([options ,] dir [, dir ...])\n//@ ### mkdir([options ,] dir_array)\n//@ Available options:\n//@\n//@ + `p`: full path (will create intermediate dirs if necessary)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ mkdir('-p', '/tmp/a/b/c/d', '/tmp/e/f/g');\n//@ mkdir('-p', ['/tmp/a/b/c/d', '/tmp/e/f/g']); // same as above\n//@ ```\n//@\n//@ Creates directories.\nfunction _mkdir(options, dirs) {\n  options = common.parseOptions(options, {\n    'p': 'fullpath'\n  });\n  if (!dirs)\n    common.error('no paths given');\n\n  if (typeof dirs === 'string')\n    dirs = [].slice.call(arguments, 1);\n  // if it's array leave it as it is\n\n  dirs.forEach(function(dir) {\n    if (fs.existsSync(dir)) {\n      if (!options.fullpath)\n          common.error('path already exists: ' + dir, true);\n      return; // skip dir\n    }\n\n    // Base dir does not exist, and no -p option given\n    var baseDir = path.dirname(dir);\n    if (!fs.existsSync(baseDir) && !options.fullpath) {\n      common.error('no such file or directory: ' + baseDir, true);\n      return; // skip dir\n    }\n\n    if (options.fullpath)\n      mkdirSyncRecursive(dir);\n    else\n      fs.mkdirSync(dir, parseInt('0777', 8));\n  });\n} // mkdir\nmodule.exports = _mkdir;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/test.js":"var common = require('./common');\nvar fs = require('fs');\n\n//@\n//@ ### test(expression)\n//@ Available expression primaries:\n//@\n//@ + `'-b', 'path'`: true if path is a block device\n//@ + `'-c', 'path'`: true if path is a character device\n//@ + `'-d', 'path'`: true if path is a directory\n//@ + `'-e', 'path'`: true if path exists\n//@ + `'-f', 'path'`: true if path is a regular file\n//@ + `'-L', 'path'`: true if path is a symboilc link\n//@ + `'-p', 'path'`: true if path is a pipe (FIFO)\n//@ + `'-S', 'path'`: true if path is a socket\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ if (test('-d', path)) { /* do something with dir */ };\n//@ if (!test('-f', path)) continue; // skip if it's a regular file\n//@ ```\n//@\n//@ Evaluates expression using the available primaries and returns corresponding value.\nfunction _test(options, path) {\n  if (!path)\n    common.error('no path given');\n\n  // hack - only works with unary primaries\n  options = common.parseOptions(options, {\n    'b': 'block',\n    'c': 'character',\n    'd': 'directory',\n    'e': 'exists',\n    'f': 'file',\n    'L': 'link',\n    'p': 'pipe',\n    'S': 'socket'\n  });\n\n  var canInterpret = false;\n  for (var key in options)\n    if (options[key] === true) {\n      canInterpret = true;\n      break;\n    }\n\n  if (!canInterpret)\n    common.error('could not interpret expression');\n\n  if (options.link) {\n    try {\n      return fs.lstatSync(path).isSymbolicLink();\n    } catch(e) {\n      return false;\n    }\n  }\n\n  if (!fs.existsSync(path))\n    return false;\n\n  if (options.exists)\n    return true;\n\n  var stats = fs.statSync(path);\n\n  if (options.block)\n    return stats.isBlockDevice();\n\n  if (options.character)\n    return stats.isCharacterDevice();\n\n  if (options.directory)\n    return stats.isDirectory();\n\n  if (options.file)\n    return stats.isFile();\n\n  if (options.pipe)\n    return stats.isFIFO();\n\n  if (options.socket)\n    return stats.isSocket();\n} // test\nmodule.exports = _test;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/cat.js":"var common = require('./common');\nvar fs = require('fs');\n\n//@\n//@ ### cat(file [, file ...])\n//@ ### cat(file_array)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = cat('file*.txt');\n//@ var str = cat('file1', 'file2');\n//@ var str = cat(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Returns a string containing the given file, or a concatenated string\n//@ containing the files if more than one file is given (a new line character is\n//@ introduced between each file). Wildcard `*` accepted.\nfunction _cat(options, files) {\n  var cat = '';\n\n  if (!files)\n    common.error('no paths given');\n\n  if (typeof files === 'string')\n    files = [].slice.call(arguments, 1);\n  // if it's array leave it as it is\n\n  files = common.expand(files);\n\n  files.forEach(function(file) {\n    if (!fs.existsSync(file))\n      common.error('no such file or directory: ' + file);\n\n    cat += fs.readFileSync(file, 'utf8') + '\\n';\n  });\n\n  if (cat[cat.length-1] === '\\n')\n    cat = cat.substring(0, cat.length-1);\n\n  return common.ShellString(cat);\n}\nmodule.exports = _cat;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/to.js":"var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\n//@\n//@ ### 'string'.to(file)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ cat('input.txt').to('output.txt');\n//@ ```\n//@\n//@ Analogous to the redirection operator `>` in Unix, but works with JavaScript strings (such as\n//@ those returned by `cat`, `grep`, etc). _Like Unix redirections, `to()` will overwrite any existing file!_\nfunction _to(options, file) {\n  if (!file)\n    common.error('wrong arguments');\n\n  if (!fs.existsSync( path.dirname(file) ))\n      common.error('no such file or directory: ' + path.dirname(file));\n\n  try {\n    fs.writeFileSync(file, this.toString(), 'utf8');\n  } catch(e) {\n    common.error('could not write to file (code '+e.code+'): '+file, true);\n  }\n}\nmodule.exports = _to;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/toEnd.js":"var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\n//@\n//@ ### 'string'.toEnd(file)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ cat('input.txt').toEnd('output.txt');\n//@ ```\n//@\n//@ Analogous to the redirect-and-append operator `>>` in Unix, but works with JavaScript strings (such as\n//@ those returned by `cat`, `grep`, etc).\nfunction _toEnd(options, file) {\n  if (!file)\n    common.error('wrong arguments');\n\n  if (!fs.existsSync( path.dirname(file) ))\n      common.error('no such file or directory: ' + path.dirname(file));\n\n  try {\n    fs.appendFileSync(file, this.toString(), 'utf8');\n  } catch(e) {\n    common.error('could not append to file (code '+e.code+'): '+file, true);\n  }\n}\nmodule.exports = _toEnd;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/sed.js":"var common = require('./common');\nvar fs = require('fs');\n\n//@\n//@ ### sed([options ,] search_regex, replacement, file)\n//@ Available options:\n//@\n//@ + `-i`: Replace contents of 'file' in-place. _Note that no backups will be created!_\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ sed('-i', 'PROGRAM_VERSION', 'v0.1.3', 'source.js');\n//@ sed(/.*DELETE_THIS_LINE.*\\n/, '', 'source.js');\n//@ ```\n//@\n//@ Reads an input string from `file` and performs a JavaScript `replace()` on the input\n//@ using the given search regex and replacement string or function. Returns the new string after replacement.\nfunction _sed(options, regex, replacement, file) {\n  options = common.parseOptions(options, {\n    'i': 'inplace'\n  });\n\n  if (typeof replacement === 'string' || typeof replacement === 'function')\n    replacement = replacement; // no-op\n  else if (typeof replacement === 'number')\n    replacement = replacement.toString(); // fallback\n  else\n    common.error('invalid replacement string');\n\n  if (!file)\n    common.error('no file given');\n\n  if (!fs.existsSync(file))\n    common.error('no such file or directory: ' + file);\n\n  var result = fs.readFileSync(file, 'utf8').replace(regex, replacement);\n  if (options.inplace)\n    fs.writeFileSync(file, result, 'utf8');\n\n  return common.ShellString(result);\n}\nmodule.exports = _sed;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/grep.js":"var common = require('./common');\nvar fs = require('fs');\n\n//@\n//@ ### grep([options ,] regex_filter, file [, file ...])\n//@ ### grep([options ,] regex_filter, file_array)\n//@ Available options:\n//@\n//@ + `-v`: Inverse the sense of the regex and print the lines not matching the criteria.\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ grep('-v', 'GLOBAL_VARIABLE', '*.js');\n//@ grep('GLOBAL_VARIABLE', '*.js');\n//@ ```\n//@\n//@ Reads input string from given files and returns a string containing all lines of the\n//@ file that match the given `regex_filter`. Wildcard `*` accepted.\nfunction _grep(options, regex, files) {\n  options = common.parseOptions(options, {\n    'v': 'inverse'\n  });\n\n  if (!files)\n    common.error('no paths given');\n\n  if (typeof files === 'string')\n    files = [].slice.call(arguments, 2);\n  // if it's array leave it as it is\n\n  files = common.expand(files);\n\n  var grep = '';\n  files.forEach(function(file) {\n    if (!fs.existsSync(file)) {\n      common.error('no such file or directory: ' + file, true);\n      return;\n    }\n\n    var contents = fs.readFileSync(file, 'utf8'),\n        lines = contents.split(/\\r*\\n/);\n    lines.forEach(function(line) {\n      var matched = line.match(regex);\n      if ((options.inverse && !matched) || (!options.inverse && matched))\n        grep += line + '\\n';\n    });\n  });\n\n  return common.ShellString(grep);\n}\nmodule.exports = _grep;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/which.js":"var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\n// Cross-platform method for splitting environment PATH variables\nfunction splitPath(p) {\n  for (i=1;i<2;i++) {}\n\n  if (!p)\n    return [];\n\n  if (common.platform === 'win')\n    return p.split(';');\n  else\n    return p.split(':');\n}\n\nfunction checkPath(path) {\n  return fs.existsSync(path) && fs.statSync(path).isDirectory() == false;\n}\n\n//@\n//@ ### which(command)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var nodeExec = which('node');\n//@ ```\n//@\n//@ Searches for `command` in the system's PATH. On Windows looks for `.exe`, `.cmd`, and `.bat` extensions.\n//@ Returns string containing the absolute path to the command.\nfunction _which(options, cmd) {\n  if (!cmd)\n    common.error('must specify command');\n\n  var pathEnv = process.env.path || process.env.Path || process.env.PATH,\n      pathArray = splitPath(pathEnv),\n      where = null;\n\n  // No relative/absolute paths provided?\n  if (cmd.search(/\\//) === -1) {\n    // Search for command in PATH\n    pathArray.forEach(function(dir) {\n      if (where)\n        return; // already found it\n\n      var attempt = path.resolve(dir + '/' + cmd);\n      if (checkPath(attempt)) {\n        where = attempt;\n        return;\n      }\n\n      if (common.platform === 'win') {\n        var baseAttempt = attempt;\n        attempt = baseAttempt + '.exe';\n        if (checkPath(attempt)) {\n          where = attempt;\n          return;\n        }\n        attempt = baseAttempt + '.cmd';\n        if (checkPath(attempt)) {\n          where = attempt;\n          return;\n        }\n        attempt = baseAttempt + '.bat';\n        if (checkPath(attempt)) {\n          where = attempt;\n          return;\n        }\n      } // if 'win'\n    });\n  }\n\n  // Command not found anywhere?\n  if (!checkPath(cmd) && !where)\n    return null;\n\n  where = where || path.resolve(cmd);\n\n  return common.ShellString(where);\n}\nmodule.exports = _which;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/echo.js":"var common = require('./common');\n\n//@\n//@ ### echo(string [,string ...])\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ echo('hello world');\n//@ var str = echo('hello world');\n//@ ```\n//@\n//@ Prints string to stdout, and returns string with additional utility methods\n//@ like `.to()`.\nfunction _echo() {\n  var messages = [].slice.call(arguments, 0);\n  console.log.apply(this, messages);\n  return common.ShellString(messages.join(' '));\n}\nmodule.exports = _echo;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/dirs.js":"var common = require('./common');\nvar _cd = require('./cd');\nvar path = require('path');\n\n// Pushd/popd/dirs internals\nvar _dirStack = [];\n\nfunction _isStackIndex(index) {\n  return (/^[\\-+]\\d+$/).test(index);\n}\n\nfunction _parseStackIndex(index) {\n  if (_isStackIndex(index)) {\n    if (Math.abs(index) < _dirStack.length + 1) { // +1 for pwd\n      return (/^-/).test(index) ? Number(index) - 1 : Number(index);\n    } else {\n      common.error(index + ': directory stack index out of range');\n    }\n  } else {\n    common.error(index + ': invalid number');\n  }\n}\n\nfunction _actualDirStack() {\n  return [process.cwd()].concat(_dirStack);\n}\n\n//@\n//@ ### pushd([options,] [dir | '-N' | '+N'])\n//@\n//@ Available options:\n//@\n//@ + `-n`: Suppresses the normal change of directory when adding directories to the stack, so that only the stack is manipulated.\n//@\n//@ Arguments:\n//@\n//@ + `dir`: Makes the current working directory be the top of the stack, and then executes the equivalent of `cd dir`.\n//@ + `+N`: Brings the Nth directory (counting from the left of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n//@ + `-N`: Brings the Nth directory (counting from the right of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ // process.cwd() === '/usr'\n//@ pushd('/etc'); // Returns /etc /usr\n//@ pushd('+1');   // Returns /usr /etc\n//@ ```\n//@\n//@ Save the current directory on the top of the directory stack and then cd to `dir`. With no arguments, pushd exchanges the top two directories. Returns an array of paths in the stack.\nfunction _pushd(options, dir) {\n  if (_isStackIndex(options)) {\n    dir = options;\n    options = '';\n  }\n\n  options = common.parseOptions(options, {\n    'n' : 'no-cd'\n  });\n\n  var dirs = _actualDirStack();\n\n  if (dir === '+0') {\n    return dirs; // +0 is a noop\n  } else if (!dir) {\n    if (dirs.length > 1) {\n      dirs = dirs.splice(1, 1).concat(dirs);\n    } else {\n      return common.error('no other directory');\n    }\n  } else if (_isStackIndex(dir)) {\n    var n = _parseStackIndex(dir);\n    dirs = dirs.slice(n).concat(dirs.slice(0, n));\n  } else {\n    if (options['no-cd']) {\n      dirs.splice(1, 0, dir);\n    } else {\n      dirs.unshift(dir);\n    }\n  }\n\n  if (options['no-cd']) {\n    dirs = dirs.slice(1);\n  } else {\n    dir = path.resolve(dirs.shift());\n    _cd('', dir);\n  }\n\n  _dirStack = dirs;\n  return _dirs('');\n}\nexports.pushd = _pushd;\n\n//@\n//@ ### popd([options,] ['-N' | '+N'])\n//@\n//@ Available options:\n//@\n//@ + `-n`: Suppresses the normal change of directory when removing directories from the stack, so that only the stack is manipulated.\n//@\n//@ Arguments:\n//@\n//@ + `+N`: Removes the Nth directory (counting from the left of the list printed by dirs), starting with zero.\n//@ + `-N`: Removes the Nth directory (counting from the right of the list printed by dirs), starting with zero.\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ echo(process.cwd()); // '/usr'\n//@ pushd('/etc');       // '/etc /usr'\n//@ echo(process.cwd()); // '/etc'\n//@ popd();              // '/usr'\n//@ echo(process.cwd()); // '/usr'\n//@ ```\n//@\n//@ When no arguments are given, popd removes the top directory from the stack and performs a cd to the new top directory. The elements are numbered from 0 starting at the first directory listed with dirs; i.e., popd is equivalent to popd +0. Returns an array of paths in the stack.\nfunction _popd(options, index) {\n  if (_isStackIndex(options)) {\n    index = options;\n    options = '';\n  }\n\n  options = common.parseOptions(options, {\n    'n' : 'no-cd'\n  });\n\n  if (!_dirStack.length) {\n    return common.error('directory stack empty');\n  }\n\n  index = _parseStackIndex(index || '+0');\n\n  if (options['no-cd'] || index > 0 || _dirStack.length + index === 0) {\n    index = index > 0 ? index - 1 : index;\n    _dirStack.splice(index, 1);\n  } else {\n    var dir = path.resolve(_dirStack.shift());\n    _cd('', dir);\n  }\n\n  return _dirs('');\n}\nexports.popd = _popd;\n\n//@\n//@ ### dirs([options | '+N' | '-N'])\n//@\n//@ Available options:\n//@\n//@ + `-c`: Clears the directory stack by deleting all of the elements.\n//@\n//@ Arguments:\n//@\n//@ + `+N`: Displays the Nth directory (counting from the left of the list printed by dirs when invoked without options), starting with zero.\n//@ + `-N`: Displays the Nth directory (counting from the right of the list printed by dirs when invoked without options), starting with zero.\n//@\n//@ Display the list of currently remembered directories. Returns an array of paths in the stack, or a single path if +N or -N was specified.\n//@\n//@ See also: pushd, popd\nfunction _dirs(options, index) {\n  if (_isStackIndex(options)) {\n    index = options;\n    options = '';\n  }\n\n  options = common.parseOptions(options, {\n    'c' : 'clear'\n  });\n\n  if (options['clear']) {\n    _dirStack = [];\n    return _dirStack;\n  }\n\n  var stack = _actualDirStack();\n\n  if (index) {\n    index = _parseStackIndex(index);\n\n    if (index < 0) {\n      index = stack.length + index;\n    }\n\n    common.log(stack[index]);\n    return stack[index];\n  }\n\n  common.log(stack.join(' '));\n\n  return stack;\n}\nexports.dirs = _dirs;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/ln.js":"var fs = require('fs');\nvar path = require('path');\nvar common = require('./common');\nvar os = require('os');\n\n//@\n//@ ### ln(options, source, dest)\n//@ ### ln(source, dest)\n//@ Available options:\n//@\n//@ + `s`: symlink\n//@ + `f`: force\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ ln('file', 'newlink');\n//@ ln('-sf', 'file', 'existing');\n//@ ```\n//@\n//@ Links source to dest. Use -f to force the link, should dest already exist.\nfunction _ln(options, source, dest) {\n  options = common.parseOptions(options, {\n    's': 'symlink',\n    'f': 'force'\n  });\n\n  if (!source || !dest) {\n    common.error('Missing <source> and/or <dest>');\n  }\n\n  source = path.resolve(process.cwd(), String(source));\n  dest = path.resolve(process.cwd(), String(dest));\n\n  if (!fs.existsSync(source)) {\n    common.error('Source file does not exist', true);\n  }\n\n  if (fs.existsSync(dest)) {\n    if (!options.force) {\n      common.error('Destination file exists', true);\n    }\n\n    fs.unlinkSync(dest);\n  }\n\n  if (options.symlink) {\n    fs.symlinkSync(source, dest, os.platform() === \"win32\" ? \"junction\" : null);\n  } else {\n    fs.linkSync(source, dest, os.platform() === \"win32\" ? \"junction\" : null);\n  }\n}\nmodule.exports = _ln;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/exec.js":"var common = require('./common');\nvar _tempDir = require('./tempdir');\nvar _pwd = require('./pwd');\nvar path = require('path');\nvar fs = require('fs');\nvar child = require('child_process');\n\n// Hack to run child_process.exec() synchronously (sync avoids callback hell)\n// Uses a custom wait loop that checks for a flag file, created when the child process is done.\n// (Can't do a wait loop that checks for internal Node variables/messages as\n// Node is single-threaded; callbacks and other internal state changes are done in the\n// event loop).\nfunction execSync(cmd, opts) {\n  var tempDir = _tempDir();\n  var stdoutFile = path.resolve(tempDir+'/'+common.randomFileName()),\n      codeFile = path.resolve(tempDir+'/'+common.randomFileName()),\n      scriptFile = path.resolve(tempDir+'/'+common.randomFileName()),\n      sleepFile = path.resolve(tempDir+'/'+common.randomFileName());\n\n  var options = common.extend({\n    silent: common.config.silent\n  }, opts);\n\n  var previousStdoutContent = '';\n  // Echoes stdout changes from running process, if not silent\n  function updateStdout() {\n    if (options.silent || !fs.existsSync(stdoutFile))\n      return;\n\n    var stdoutContent = fs.readFileSync(stdoutFile, 'utf8');\n    // No changes since last time?\n    if (stdoutContent.length <= previousStdoutContent.length)\n      return;\n\n    process.stdout.write(stdoutContent.substr(previousStdoutContent.length));\n    previousStdoutContent = stdoutContent;\n  }\n\n  function escape(str) {\n    return (str+'').replace(/([\\\\\"'])/g, \"\\\\$1\").replace(/\\0/g, \"\\\\0\");\n  }\n\n  if (fs.existsSync(scriptFile)) common.unlinkSync(scriptFile);\n  if (fs.existsSync(stdoutFile)) common.unlinkSync(stdoutFile);\n  if (fs.existsSync(codeFile)) common.unlinkSync(codeFile);\n\n  var execCommand = '\"'+process.execPath+'\" '+scriptFile;\n  var execOptions = {\n    env: process.env,\n    cwd: _pwd(),\n    maxBuffer: 20*1024*1024\n  };\n\n  if (typeof child.execSync === 'function') {\n    var script = [\n      \"var child = require('child_process')\",\n      \"  , fs = require('fs');\",\n      \"var childProcess = child.exec('\"+escape(cmd)+\"', {env: process.env, maxBuffer: 20*1024*1024}, function(err) {\",\n      \"  fs.writeFileSync('\"+escape(codeFile)+\"', err ? err.code.toString() : '0');\",\n      \"});\",\n      \"var stdoutStream = fs.createWriteStream('\"+escape(stdoutFile)+\"');\",\n      \"childProcess.stdout.pipe(stdoutStream, {end: false});\",\n      \"childProcess.stderr.pipe(stdoutStream, {end: false});\",\n      \"childProcess.stdout.pipe(process.stdout);\",\n      \"childProcess.stderr.pipe(process.stderr);\",\n      \"var stdoutEnded = false, stderrEnded = false;\",\n      \"function tryClosing(){ if(stdoutEnded && stderrEnded){ stdoutStream.end(); } }\",\n      \"childProcess.stdout.on('end', function(){ stdoutEnded = true; tryClosing(); });\",\n      \"childProcess.stderr.on('end', function(){ stderrEnded = true; tryClosing(); });\"\n    ].join('\\n');\n\n    fs.writeFileSync(scriptFile, script);\n\n    if (options.silent) {\n      execOptions.stdio = 'ignore';\n    } else {\n      execOptions.stdio = [0, 1, 2];\n    }\n\n    // Welcome to the future\n    child.execSync(execCommand, execOptions);\n  } else {\n    cmd += ' > '+stdoutFile+' 2>&1'; // works on both win/unix\n\n    var script = [\n      \"var child = require('child_process')\",\n      \"  , fs = require('fs');\",\n      \"var childProcess = child.exec('\"+escape(cmd)+\"', {env: process.env, maxBuffer: 20*1024*1024}, function(err) {\",\n      \"  fs.writeFileSync('\"+escape(codeFile)+\"', err ? err.code.toString() : '0');\",\n      \"});\"\n    ].join('\\n');\n\n    fs.writeFileSync(scriptFile, script);\n\n    child.exec(execCommand, execOptions);\n\n    // The wait loop\n    // sleepFile is used as a dummy I/O op to mitigate unnecessary CPU usage\n    // (tried many I/O sync ops, writeFileSync() seems to be only one that is effective in reducing\n    // CPU usage, though apparently not so much on Windows)\n    while (!fs.existsSync(codeFile)) { updateStdout(); fs.writeFileSync(sleepFile, 'a'); }\n    while (!fs.existsSync(stdoutFile)) { updateStdout(); fs.writeFileSync(sleepFile, 'a'); }\n  }\n\n  // At this point codeFile exists, but it's not necessarily flushed yet.\n  // Keep reading it until it is.\n  var code = parseInt('', 10);\n  while (isNaN(code)) {\n    code = parseInt(fs.readFileSync(codeFile, 'utf8'), 10);\n  }\n\n  var stdout = fs.readFileSync(stdoutFile, 'utf8');\n\n  // No biggie if we can't erase the files now -- they're in a temp dir anyway\n  try { common.unlinkSync(scriptFile); } catch(e) {}\n  try { common.unlinkSync(stdoutFile); } catch(e) {}\n  try { common.unlinkSync(codeFile); } catch(e) {}\n  try { common.unlinkSync(sleepFile); } catch(e) {}\n\n  // some shell return codes are defined as errors, per http://tldp.org/LDP/abs/html/exitcodes.html\n  if (code === 1 || code === 2 || code >= 126)  {\n      common.error('', true); // unix/shell doesn't really give an error message after non-zero exit codes\n  }\n  // True if successful, false if not\n  var obj = {\n    code: code,\n    output: stdout\n  };\n  return obj;\n} // execSync()\n\n// Wrapper around exec() to enable echoing output to console in real time\nfunction execAsync(cmd, opts, callback) {\n  var output = '';\n\n  var options = common.extend({\n    silent: common.config.silent\n  }, opts);\n\n  var c = child.exec(cmd, {env: process.env, maxBuffer: 20*1024*1024}, function(err) {\n    if (callback)\n      callback(err ? err.code : 0, output);\n  });\n\n  c.stdout.on('data', function(data) {\n    output += data;\n    if (!options.silent)\n      process.stdout.write(data);\n  });\n\n  c.stderr.on('data', function(data) {\n    output += data;\n    if (!options.silent)\n      process.stdout.write(data);\n  });\n\n  return c;\n}\n\n//@\n//@ ### exec(command [, options] [, callback])\n//@ Available options (all `false` by default):\n//@\n//@ + `async`: Asynchronous execution. Defaults to true if a callback is provided.\n//@ + `silent`: Do not echo program output to console.\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var version = exec('node --version', {silent:true}).output;\n//@\n//@ var child = exec('some_long_running_process', {async:true});\n//@ child.stdout.on('data', function(data) {\n//@   /* ... do something with data ... */\n//@ });\n//@\n//@ exec('some_long_running_process', function(code, output) {\n//@   console.log('Exit code:', code);\n//@   console.log('Program output:', output);\n//@ });\n//@ ```\n//@\n//@ Executes the given `command` _synchronously_, unless otherwise specified.\n//@ When in synchronous mode returns the object `{ code:..., output:... }`, containing the program's\n//@ `output` (stdout + stderr)  and its exit `code`. Otherwise returns the child process object, and\n//@ the `callback` gets the arguments `(code, output)`.\n//@\n//@ **Note:** For long-lived processes, it's best to run `exec()` asynchronously as\n//@ the current synchronous implementation uses a lot of CPU. This should be getting\n//@ fixed soon.\nfunction _exec(command, options, callback) {\n  if (!command)\n    common.error('must specify command');\n\n  // Callback is defined instead of options.\n  if (typeof options === 'function') {\n    callback = options;\n    options = { async: true };\n  }\n\n  // Callback is defined with options.\n  if (typeof options === 'object' && typeof callback === 'function') {\n    options.async = true;\n  }\n\n  options = common.extend({\n    silent: common.config.silent,\n    async: false\n  }, options);\n\n  if (options.async)\n    return execAsync(command, options, callback);\n  else\n    return execSync(command, options);\n}\nmodule.exports = _exec;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/tempdir.js":"var common = require('./common');\nvar os = require('os');\nvar fs = require('fs');\n\n// Returns false if 'dir' is not a writeable directory, 'dir' otherwise\nfunction writeableDir(dir) {\n  if (!dir || !fs.existsSync(dir))\n    return false;\n\n  if (!fs.statSync(dir).isDirectory())\n    return false;\n\n  var testFile = dir+'/'+common.randomFileName();\n  try {\n    fs.writeFileSync(testFile, ' ');\n    common.unlinkSync(testFile);\n    return dir;\n  } catch (e) {\n    return false;\n  }\n}\n\n\n//@\n//@ ### tempdir()\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var tmp = tempdir(); // \"/tmp\" for most *nix platforms\n//@ ```\n//@\n//@ Searches and returns string containing a writeable, platform-dependent temporary directory.\n//@ Follows Python's [tempfile algorithm](http://docs.python.org/library/tempfile.html#tempfile.tempdir).\nfunction _tempDir() {\n  var state = common.state;\n  if (state.tempDir)\n    return state.tempDir; // from cache\n\n  state.tempDir = writeableDir(os.tempDir && os.tempDir()) || // node 0.8+\n                  writeableDir(process.env['TMPDIR']) ||\n                  writeableDir(process.env['TEMP']) ||\n                  writeableDir(process.env['TMP']) ||\n                  writeableDir(process.env['Wimp$ScrapDir']) || // RiscOS\n                  writeableDir('C:\\\\TEMP') || // Windows\n                  writeableDir('C:\\\\TMP') || // Windows\n                  writeableDir('\\\\TEMP') || // Windows\n                  writeableDir('\\\\TMP') || // Windows\n                  writeableDir('/tmp') ||\n                  writeableDir('/var/tmp') ||\n                  writeableDir('/usr/tmp') ||\n                  writeableDir('.'); // last resort\n\n  return state.tempDir;\n}\nmodule.exports = _tempDir;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/chmod.js":"var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\nvar PERMS = (function (base) {\n  return {\n    OTHER_EXEC  : base.EXEC,\n    OTHER_WRITE : base.WRITE,\n    OTHER_READ  : base.READ,\n\n    GROUP_EXEC  : base.EXEC  << 3,\n    GROUP_WRITE : base.WRITE << 3,\n    GROUP_READ  : base.READ << 3,\n\n    OWNER_EXEC  : base.EXEC << 6,\n    OWNER_WRITE : base.WRITE << 6,\n    OWNER_READ  : base.READ << 6,\n\n    // Literal octal numbers are apparently not allowed in \"strict\" javascript.  Using parseInt is\n    // the preferred way, else a jshint warning is thrown.\n    STICKY      : parseInt('01000', 8),\n    SETGID      : parseInt('02000', 8),\n    SETUID      : parseInt('04000', 8),\n\n    TYPE_MASK   : parseInt('0770000', 8)\n  };\n})({\n  EXEC  : 1,\n  WRITE : 2,\n  READ  : 4\n});\n\n//@\n//@ ### chmod(octal_mode || octal_string, file)\n//@ ### chmod(symbolic_mode, file)\n//@\n//@ Available options:\n//@\n//@ + `-v`: output a diagnostic for every file processed//@\n//@ + `-c`: like verbose but report only when a change is made//@\n//@ + `-R`: change files and directories recursively//@\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ chmod(755, '/Users/brandon');\n//@ chmod('755', '/Users/brandon'); // same as above\n//@ chmod('u+x', '/Users/brandon');\n//@ ```\n//@\n//@ Alters the permissions of a file or directory by either specifying the\n//@ absolute permissions in octal form or expressing the changes in symbols.\n//@ This command tries to mimic the POSIX behavior as much as possible.\n//@ Notable exceptions:\n//@\n//@ + In symbolic modes, 'a-r' and '-r' are identical.  No consideration is\n//@   given to the umask.\n//@ + There is no \"quiet\" option since default behavior is to run silent.\nfunction _chmod(options, mode, filePattern) {\n  if (!filePattern) {\n    if (options.length > 0 && options.charAt(0) === '-') {\n      // Special case where the specified file permissions started with - to subtract perms, which\n      // get picked up by the option parser as command flags.\n      // If we are down by one argument and options starts with -, shift everything over.\n      filePattern = mode;\n      mode = options;\n      options = '';\n    }\n    else {\n      common.error('You must specify a file.');\n    }\n  }\n\n  options = common.parseOptions(options, {\n    'R': 'recursive',\n    'c': 'changes',\n    'v': 'verbose'\n  });\n\n  if (typeof filePattern === 'string') {\n    filePattern = [ filePattern ];\n  }\n\n  var files;\n\n  if (options.recursive) {\n    files = [];\n    common.expand(filePattern).forEach(function addFile(expandedFile) {\n      var stat = fs.lstatSync(expandedFile);\n\n      if (!stat.isSymbolicLink()) {\n        files.push(expandedFile);\n\n        if (stat.isDirectory()) {  // intentionally does not follow symlinks.\n          fs.readdirSync(expandedFile).forEach(function (child) {\n            addFile(expandedFile + '/' + child);\n          });\n        }\n      }\n    });\n  }\n  else {\n    files = common.expand(filePattern);\n  }\n\n  files.forEach(function innerChmod(file) {\n    file = path.resolve(file);\n    if (!fs.existsSync(file)) {\n      common.error('File not found: ' + file);\n    }\n\n    // When recursing, don't follow symlinks.\n    if (options.recursive && fs.lstatSync(file).isSymbolicLink()) {\n      return;\n    }\n\n    var perms = fs.statSync(file).mode;\n    var type = perms & PERMS.TYPE_MASK;\n\n    var newPerms = perms;\n\n    if (isNaN(parseInt(mode, 8))) {\n      // parse options\n      mode.split(',').forEach(function (symbolicMode) {\n        /*jshint regexdash:true */\n        var pattern = /([ugoa]*)([=\\+-])([rwxXst]*)/i;\n        var matches = pattern.exec(symbolicMode);\n\n        if (matches) {\n          var applyTo = matches[1];\n          var operator = matches[2];\n          var change = matches[3];\n\n          var changeOwner = applyTo.indexOf('u') != -1 || applyTo === 'a' || applyTo === '';\n          var changeGroup = applyTo.indexOf('g') != -1 || applyTo === 'a' || applyTo === '';\n          var changeOther = applyTo.indexOf('o') != -1 || applyTo === 'a' || applyTo === '';\n\n          var changeRead   = change.indexOf('r') != -1;\n          var changeWrite  = change.indexOf('w') != -1;\n          var changeExec   = change.indexOf('x') != -1;\n          var changeSticky = change.indexOf('t') != -1;\n          var changeSetuid = change.indexOf('s') != -1;\n\n          var mask = 0;\n          if (changeOwner) {\n            mask |= (changeRead ? PERMS.OWNER_READ : 0) + (changeWrite ? PERMS.OWNER_WRITE : 0) + (changeExec ? PERMS.OWNER_EXEC : 0) + (changeSetuid ? PERMS.SETUID : 0);\n          }\n          if (changeGroup) {\n            mask |= (changeRead ? PERMS.GROUP_READ : 0) + (changeWrite ? PERMS.GROUP_WRITE : 0) + (changeExec ? PERMS.GROUP_EXEC : 0) + (changeSetuid ? PERMS.SETGID : 0);\n          }\n          if (changeOther) {\n            mask |= (changeRead ? PERMS.OTHER_READ : 0) + (changeWrite ? PERMS.OTHER_WRITE : 0) + (changeExec ? PERMS.OTHER_EXEC : 0);\n          }\n\n          // Sticky bit is special - it's not tied to user, group or other.\n          if (changeSticky) {\n            mask |= PERMS.STICKY;\n          }\n\n          switch (operator) {\n            case '+':\n              newPerms |= mask;\n              break;\n\n            case '-':\n              newPerms &= ~mask;\n              break;\n\n            case '=':\n              newPerms = type + mask;\n\n              // According to POSIX, when using = to explicitly set the permissions, setuid and setgid can never be cleared.\n              if (fs.statSync(file).isDirectory()) {\n                newPerms |= (PERMS.SETUID + PERMS.SETGID) & perms;\n              }\n              break;\n          }\n\n          if (options.verbose) {\n            log(file + ' -> ' + newPerms.toString(8));\n          }\n\n          if (perms != newPerms) {\n            if (!options.verbose && options.changes) {\n              log(file + ' -> ' + newPerms.toString(8));\n            }\n            fs.chmodSync(file, newPerms);\n          }\n        }\n        else {\n          common.error('Invalid symbolic mode change: ' + symbolicMode);\n        }\n      });\n    }\n    else {\n      // they gave us a full number\n      newPerms = type + parseInt(mode, 8);\n\n      // POSIX rules are that setuid and setgid can only be added using numeric form, but not cleared.\n      if (fs.statSync(file).isDirectory()) {\n        newPerms |= (PERMS.SETUID + PERMS.SETGID) & perms;\n      }\n\n      fs.chmodSync(file, newPerms);\n    }\n  });\n}\nmodule.exports = _chmod;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/shelljs/src/error.js":"var common = require('./common');\n\n//@\n//@ ### error()\n//@ Tests if error occurred in the last command. Returns `null` if no error occurred,\n//@ otherwise returns string explaining the error\nfunction error() {\n  return common.state.error;\n};\nmodule.exports = error;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/q/q.js":"// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2012 Kris Kowal under the terms of the MIT\n * license found at http://github.com/kriskowal/q/raw/master/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof window !== \"undefined\" || typeof self !== \"undefined\") {\n        // Prefer window over self for add-on scripts. Use self for\n        // non-windowed contexts.\n        var global = typeof window !== \"undefined\" ? window : self;\n\n        // Get the `window` object, save the previous Q global\n        // and initialize Q as a global.\n        var previousQ = global.Q;\n        global.Q = definition();\n\n        // Add a noConflict function so Q can be removed from the\n        // global namespace.\n        global.Q.noConflict = function () {\n            global.Q = previousQ;\n            return this;\n        };\n\n    } else {\n        throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n    // queue for late tasks, used by unhandled rejection tracking\n    var laterQueue = [];\n\n    function flush() {\n        /* jshint loopfunc: true */\n        var task, domain;\n\n        while (head.next) {\n            head = head.next;\n            task = head.task;\n            head.task = void 0;\n            domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n            runSingle(task, domain);\n\n        }\n        while (laterQueue.length) {\n            task = laterQueue.pop();\n            runSingle(task);\n        }\n        flushing = false;\n    }\n    // runs a single function in the async queue\n    function runSingle(task, domain) {\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process === \"object\" &&\n        process.toString() === \"[object process]\" && process.nextTick) {\n        // Ensure Q is in a real Node environment, with a `process.nextTick`.\n        // To see through fake Node environments:\n        // * Mocha test runner - exposes a `process` global without a `nextTick`\n        // * Browserify - exposes a `process.nexTick` function that uses\n        //   `setTimeout`. In this case `setImmediate` is preferred because\n        //    it is faster. Browserify's `process.toString()` yields\n        //   \"[object Object]\", while in a real Node environment\n        //   `process.nextTick()` yields \"[object process]\".\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n    // runs a task after all other tasks have been run\n    // this is useful for unhandled rejection tracking that needs to happen\n    // after all `then`d tasks have been run.\n    nextTick.runAfter = function (task) {\n        laterQueue.push(task);\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack &&\n        error.stack.indexOf(STACK_JUMP_SEPARATOR) === -1\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack) {\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        error.stack = filterStackString(concatedStacks);\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n        promise.source = newPromise;\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function (resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function (answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar reportedUnhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n    if (typeof process === \"object\" && typeof process.emit === \"function\") {\n        Q.nextTick.runAfter(function () {\n            if (array_indexOf(unhandledRejections, promise) !== -1) {\n                process.emit(\"unhandledRejection\", reason, promise);\n                reportedUnhandledRejections.push(promise);\n            }\n        });\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        if (typeof process === \"object\" && typeof process.emit === \"function\") {\n            Q.nextTick.runAfter(function () {\n                var atReport = array_indexOf(reportedUnhandledRejections, promise);\n                if (atReport !== -1) {\n                    process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n                    reportedUnhandledRejections.splice(atReport, 1);\n                }\n            });\n        }\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var pendingCount = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++pendingCount;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--pendingCount === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (pendingCount === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Returns the first resolved promise of an array. Prior rejected promises are\n * ignored.  Rejects only if all promises are rejected.\n * @param {Array*} an array containing values or promises for values\n * @returns a promise fulfilled with the value of the first resolved promise,\n * or a rejected promise if all promises are rejected.\n */\nQ.any = any;\n\nfunction any(promises) {\n    if (promises.length === 0) {\n        return Q.resolve();\n    }\n\n    var deferred = Q.defer();\n    var pendingCount = 0;\n    array_reduce(promises, function (prev, current, index) {\n        var promise = promises[index];\n\n        pendingCount++;\n\n        when(promise, onFulfilled, onRejected, onProgress);\n        function onFulfilled(result) {\n            deferred.resolve(result);\n        }\n        function onRejected() {\n            pendingCount--;\n            if (pendingCount === 0) {\n                deferred.reject(new Error(\n                    \"Can't get fulfillment value from any promise, all \" +\n                    \"promises were rejected.\"\n                ));\n            }\n        }\n        function onProgress(progress) {\n            deferred.notify({\n                index: index,\n                value: progress\n            });\n        }\n    }, undefined);\n\n    return deferred.promise;\n}\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\nQ.noConflict = function() {\n    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/cordova-common.js":"/**\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n*/\n\n/* jshint node:true */\n\n// For now expose plugman and cordova just as they were in the old repos\nexports = module.exports = {\n    events: require('./src/events'),\n    superspawn: require('./src/superspawn'),\n\n    ActionStack: require('./src/ActionStack'),\n    CordovaError: require('./src/CordovaError/CordovaError'),\n    CordovaExternalToolErrorContext: require('./src/CordovaError/CordovaExternalToolErrorContext'),\n    PlatformJson: require('./src/PlatformJson'),\n    ConfigParser: require('./src/ConfigParser/ConfigParser.js'),\n\n    PluginInfo: require('./src/PluginInfo/PluginInfo.js'),\n    PluginInfoProvider: require('./src/PluginInfo/PluginInfoProvider.js'),\n\n    ConfigChanges: require('./src/ConfigChanges/ConfigChanges.js'),\n    ConfigKeeper: require('./src/ConfigChanges/ConfigKeeper.js'),\n    ConfigFile: require('./src/ConfigChanges/ConfigFile.js'),\n    mungeUtil: require('./src/ConfigChanges/munge-util.js'),\n\n    xmlHelpers: require('./src/util/xml-helpers')\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/events.js":"/**\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n*/\nmodule.exports = new (require('events').EventEmitter)();\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/superspawn.js":"/**\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n*/\n\nvar child_process = require('child_process');\nvar fs = require('fs');\nvar path = require('path');\nvar _ = require('underscore');\nvar Q = require('q');\nvar shell = require('shelljs');\nvar events = require('./events');\nvar iswin32 = process.platform == 'win32';\n\n// On Windows, spawn() for batch files requires absolute path & having the extension.\nfunction resolveWindowsExe(cmd) {\n    var winExtensions = ['.exe', '.cmd', '.bat', '.js', '.vbs'];\n    function isValidExe(c) {\n        return winExtensions.indexOf(path.extname(c)) !== -1 && fs.existsSync(c);\n    }\n    if (isValidExe(cmd)) {\n        return cmd;\n    }\n    cmd = shell.which(cmd) || cmd;\n    if (!isValidExe(cmd)) {\n        winExtensions.some(function(ext) {\n            if (fs.existsSync(cmd + ext)) {\n                cmd = cmd + ext;\n                return true;\n            }\n        });\n    }\n    return cmd;\n}\n\nfunction maybeQuote(a) {\n    if (/^[^\"].*[ &].*[^\"]/.test(a)) return '\"' + a + '\"';\n    return a;\n}\n\n// opts:\n//   printCommand: Whether to log the command (default: false)\n//   stdio: 'default' is to capture output and returning it as a string to success (same as exec)\n//          'ignore' means don't bother capturing it\n//          'inherit' means pipe the input & output. This is required for anything that prompts.\n//   env: Map of extra environment variables.\n//   cwd: Working directory for the command.\n//   chmod: If truthy, will attempt to set the execute bit before executing on non-Windows platforms.\n// Returns a promise that succeeds only for return code = 0.\nexports.spawn = function(cmd, args, opts) {\n    args = args || [];\n    opts = opts || {};\n    var spawnOpts = {};\n    var d = Q.defer();\n\n    if (iswin32) {\n        cmd = resolveWindowsExe(cmd);\n        // If we couldn't find the file, likely we'll end up failing,\n        // but for things like \"del\", cmd will do the trick.\n        if (path.extname(cmd) != '.exe') {\n            var cmdArgs = '\"' + [cmd].concat(args).map(maybeQuote).join(' ') + '\"';\n            // We need to use /s to ensure that spaces are parsed properly with cmd spawned content\n            args = [['/s', '/c', cmdArgs].join(' ')];\n            cmd = 'cmd';\n            spawnOpts.windowsVerbatimArguments = true;\n        } else if (!fs.existsSync(cmd)) {\n            // We need to use /s to ensure that spaces are parsed properly with cmd spawned content\n            args = ['/s', '/c', cmd].concat(args).map(maybeQuote);\n        }\n    }\n\n    if (opts.stdio == 'ignore') {\n        spawnOpts.stdio = 'ignore';\n    } else if (opts.stdio == 'inherit') {\n        spawnOpts.stdio = 'inherit';\n    }\n    if (opts.cwd) {\n        spawnOpts.cwd = opts.cwd;\n    }\n    if (opts.env) {\n        spawnOpts.env = _.extend(_.extend({}, process.env), opts.env);\n    }\n    if (opts.chmod && !iswin32) {\n        try {\n            // This fails when module is installed in a system directory (e.g. via sudo npm install)\n            fs.chmodSync(cmd, '755');\n        } catch (e) {\n            // If the perms weren't set right, then this will come as an error upon execution.\n        }\n    }\n\n    events.emit(opts.printCommand ? 'log' : 'verbose', 'Running command: ' + maybeQuote(cmd) + ' ' + args.map(maybeQuote).join(' '));\n\n    var child = child_process.spawn(cmd, args, spawnOpts);\n    var capturedOut = '';\n    var capturedErr = '';\n\n    if (child.stdout) {\n        child.stdout.setEncoding('utf8');\n        child.stdout.on('data', function(data) {\n            capturedOut += data;\n        });\n\n        child.stderr.setEncoding('utf8');\n        child.stderr.on('data', function(data) {\n            capturedErr += data;\n        });\n    }\n\n    child.on('close', whenDone);\n    child.on('error', whenDone);\n    function whenDone(arg) {\n        child.removeListener('close', whenDone);\n        child.removeListener('error', whenDone);\n        var code = typeof arg == 'number' ? arg : arg && arg.code;\n\n        events.emit('verbose', 'Command finished with error code ' + code + ': ' + cmd + ' ' + args);\n        if (code === 0) {\n            d.resolve(capturedOut.trim());\n        } else {\n            var errMsg = cmd + ': Command failed with exit code ' + code;\n            if (capturedErr) {\n                errMsg += ' Error output:\\n' + capturedErr.trim();\n            }\n            var err = new Error(errMsg);\n            err.code = code;\n            d.reject(err);\n        }\n    }\n\n    return d.promise;\n};\n\nexports.maybeSpawn = function(cmd, args, opts) {\n    if (fs.existsSync(cmd)) {\n        return exports.spawn(cmd, args, opts);\n    }\n    return Q(null);\n};\n\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/underscore/underscore.js":"//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/ActionStack.js":"/**\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n*/\n\n/* jshint quotmark:false */\n\nvar events = require('./events'),\n    Q = require('q');\n\nfunction ActionStack() {\n    this.stack = [];\n    this.completed = [];\n}\n\nActionStack.prototype = {\n    createAction:function(handler, action_params, reverter, revert_params) {\n        return {\n            handler:{\n                run:handler,\n                params:action_params\n            },\n            reverter:{\n                run:reverter,\n                params:revert_params\n            }\n        };\n    },\n    push:function(tx) {\n        this.stack.push(tx);\n    },\n    // Returns a promise.\n    process:function(platform) {\n        events.emit('verbose', 'Beginning processing of action stack for ' + platform + ' project...');\n\n        while (this.stack.length) {\n            var action = this.stack.shift();\n            var handler = action.handler.run;\n            var action_params = action.handler.params;\n\n            try {\n                handler.apply(null, action_params);\n            } catch(e) {\n                events.emit('warn', 'Error during processing of action! Attempting to revert...');\n                this.stack.unshift(action);\n                var issue = 'Uh oh!\\n';\n                // revert completed tasks\n                while(this.completed.length) {\n                    var undo = this.completed.shift();\n                    var revert = undo.reverter.run;\n                    var revert_params = undo.reverter.params;\n\n                    try {\n                        revert.apply(null, revert_params);\n                    } catch(err) {\n                        events.emit('warn', 'Error during reversion of action! We probably really messed up your project now, sorry! D:');\n                        issue += 'A reversion action failed: ' + err.message + '\\n';\n                    }\n                }\n                e.message = issue + e.message;\n                return Q.reject(e);\n            }\n            this.completed.push(action);\n        }\n        events.emit('verbose', 'Action stack processing complete.');\n\n        return Q();\n    }\n};\n\nmodule.exports = ActionStack;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/CordovaError/CordovaError.js":"/**\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n*/\n\n/* jshint proto:true */\n\nvar EOL = require('os').EOL;\n\n/**\n * A derived exception class. See usage example in cli.js\n * Based on:\n * stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript/8460753#8460753\n * @param {String} message Error message\n * @param {Number} [code=0] Error code\n * @param {CordovaExternalToolErrorContext} [context] External tool error context object\n * @constructor\n */\nfunction CordovaError(message, code, context) {\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n    this.message = message;\n    this.code = code || CordovaError.UNKNOWN_ERROR;\n    this.context = context;\n}\nCordovaError.prototype.__proto__ = Error.prototype;\n\n// TODO: Extend error codes according the projects specifics\nCordovaError.UNKNOWN_ERROR = 0;\nCordovaError.EXTERNAL_TOOL_ERROR = 1;\n\n/**\n * Translates instance's error code number into error code name, e.g. 0 -> UNKNOWN_ERROR\n * @returns {string} Error code string name\n */\nCordovaError.prototype.getErrorCodeName = function() {\n    for(var key in CordovaError) {\n        if(CordovaError.hasOwnProperty(key)) {\n            if(CordovaError[key] === this.code) {\n                return key;\n            }\n        }\n    }\n};\n\n/**\n * Converts CordovaError instance to string representation\n * @param   {Boolean}  [isVerbose]  Set up verbose mode. Used to provide more\n *   details including information about error code name and context\n * @return  {String}              Stringified error representation\n */\nCordovaError.prototype.toString = function(isVerbose) {\n    var message = '', codePrefix = '';\n\n    if(this.code !== CordovaError.UNKNOWN_ERROR) {\n        codePrefix = 'code: ' + this.code + (isVerbose ? (' (' + this.getErrorCodeName() + ')') : '') + ' ';\n    }\n\n    if(this.code === CordovaError.EXTERNAL_TOOL_ERROR) {\n        if(typeof this.context !== 'undefined') {\n            if(isVerbose) {\n                message = codePrefix + EOL + this.context.toString(isVerbose) + '\\n failed with an error: ' +\n                    this.message + EOL + 'Stack trace: ' + this.stack;\n            } else {\n                message = codePrefix + '\\'' + this.context.toString(isVerbose) + '\\' ' + this.message;\n            }\n        } else {\n            message = 'External tool failed with an error: ' + this.message;\n        }\n    } else {\n        message = isVerbose ? codePrefix + this.stack : codePrefix + this.message;\n    }\n\n    return message;\n};\n\nmodule.exports = CordovaError;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/CordovaError/CordovaExternalToolErrorContext.js":"/**\n Licensed to the Apache Software Foundation (ASF) under one\n or more contributor license agreements.  See the NOTICE file\n distributed with this work for additional information\n regarding copyright ownership.  The ASF licenses this file\n to you under the Apache License, Version 2.0 (the\n \"License\"); you may not use this file except in compliance\n with the License.  You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing,\n software distributed under the License is distributed on an\n \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n KIND, either express or implied.  See the License for the\n specific language governing permissions and limitations\n under the License.\n */\n\n/* jshint proto:true */\n\nvar path = require('path');\n\n/**\n * @param {String} cmd Command full path\n * @param {String[]} args Command args\n * @param {String} [cwd] Command working directory\n * @constructor\n */\nfunction CordovaExternalToolErrorContext(cmd, args, cwd) {\n    this.cmd = cmd;\n    // Helper field for readability\n    this.cmdShortName = path.basename(cmd);\n    this.args = args;\n    this.cwd = cwd;\n}\n\nCordovaExternalToolErrorContext.prototype.toString = function(isVerbose) {\n    if(isVerbose) {\n        return 'External tool \\'' + this.cmdShortName + '\\'' +\n            '\\nCommand full path: ' + this.cmd + '\\nCommand args: ' + this.args +\n            (typeof this.cwd !== 'undefined' ? '\\nCommand cwd: ' + this.cwd : '');\n    }\n\n    return this.cmdShortName;\n};\n\nmodule.exports = CordovaExternalToolErrorContext;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/PlatformJson.js":"/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n/* jshint sub:true */\n\nvar fs = require('fs');\nvar path = require('path');\nvar shelljs = require('shelljs');\nvar mungeutil = require('./ConfigChanges/munge-util');\nvar pluginMappernto = require('cordova-registry-mapper').newToOld;\nvar pluginMapperotn = require('cordova-registry-mapper').oldToNew;\n\nfunction PlatformJson(filePath, platform, root) {\n    this.filePath = filePath;\n    this.platform = platform;\n    this.root = fix_munge(root || {});\n}\n\nPlatformJson.load = function(plugins_dir, platform) {\n    var filePath = path.join(plugins_dir, platform + '.json');\n    var root = null;\n    if (fs.existsSync(filePath)) {\n        root = JSON.parse(fs.readFileSync(filePath, 'utf-8'));\n    }\n    return new PlatformJson(filePath, platform, root);\n};\n\nPlatformJson.prototype.save = function() {\n    shelljs.mkdir('-p', path.dirname(this.filePath));\n    fs.writeFileSync(this.filePath, JSON.stringify(this.root, null, 4), 'utf-8');\n};\n\n/**\n * Indicates whether the specified plugin is installed as a top-level (not as\n *  dependency to others)\n * @method function\n * @param  {String} pluginId A plugin id to check for.\n * @return {Boolean} true if plugin installed as top-level, otherwise false.\n */\nPlatformJson.prototype.isPluginTopLevel = function(pluginId) {\n    var installedPlugins = this.root.installed_plugins;\n    return installedPlugins[pluginId] ||\n        installedPlugins[pluginMappernto[pluginId]] ||\n        installedPlugins[pluginMapperotn[pluginId]];\n};\n\n/**\n * Indicates whether the specified plugin is installed as a dependency to other\n *  plugin.\n * @method function\n * @param  {String} pluginId A plugin id to check for.\n * @return {Boolean} true if plugin installed as a dependency, otherwise false.\n */\nPlatformJson.prototype.isPluginDependent = function(pluginId) {\n    var dependentPlugins = this.root.dependent_plugins;\n    return dependentPlugins[pluginId] ||\n        dependentPlugins[pluginMappernto[pluginId]] ||\n        dependentPlugins[pluginMapperotn[pluginId]];\n};\n\n/**\n * Indicates whether plugin is installed either as top-level or as dependency.\n * @method function\n * @param  {String} pluginId A plugin id to check for.\n * @return {Boolean} true if plugin installed, otherwise false.\n */\nPlatformJson.prototype.isPluginInstalled = function(pluginId) {\n    return this.isPluginTopLevel(pluginId) ||\n        this.isPluginDependent(pluginId);\n};\n\nPlatformJson.prototype.addPlugin = function(pluginId, variables, isTopLevel) {\n    var pluginsList = isTopLevel ?\n        this.root.installed_plugins :\n        this.root.dependent_plugins;\n\n    pluginsList[pluginId] = variables;\n\n    return this;\n};\n\nPlatformJson.prototype.removePlugin = function(pluginId, isTopLevel) {\n    var pluginsList = isTopLevel ?\n        this.root.installed_plugins :\n        this.root.dependent_plugins;\n\n    delete pluginsList[pluginId];\n\n    return this;\n};\n\nPlatformJson.prototype.addInstalledPluginToPrepareQueue = function(pluginDirName, vars, is_top_level) {\n    this.root.prepare_queue.installed.push({'plugin':pluginDirName, 'vars':vars, 'topLevel':is_top_level});\n};\n\nPlatformJson.prototype.addUninstalledPluginToPrepareQueue = function(pluginId, is_top_level) {\n    this.root.prepare_queue.uninstalled.push({'plugin':pluginId, 'id':pluginId, 'topLevel':is_top_level});\n};\n\n/**\n * Moves plugin, specified by id to top-level plugins. If plugin is top-level\n *  already, then does nothing.\n * @method function\n * @param  {String} pluginId A plugin id to make top-level.\n * @return {PlatformJson} PlatformJson instance.\n */\nPlatformJson.prototype.makeTopLevel = function(pluginId) {\n    var plugin = this.root.dependent_plugins[pluginId];\n    if (plugin) {\n        delete this.root.dependent_plugins[pluginId];\n        this.root.installed_plugins[pluginId] = plugin;\n    }\n    return this;\n};\n\n// convert a munge from the old format ([file][parent][xml] = count) to the current one\nfunction fix_munge(root) {\n    root.prepare_queue = root.prepare_queue || {installed:[], uninstalled:[]};\n    root.config_munge = root.config_munge || {files: {}};\n    root.installed_plugins = root.installed_plugins || {};\n    root.dependent_plugins = root.dependent_plugins || {};\n\n    var munge = root.config_munge;\n    if (!munge.files) {\n        var new_munge = { files: {} };\n        for (var file in munge) {\n            for (var selector in munge[file]) {\n                for (var xml_child in munge[file][selector]) {\n                    var val = parseInt(munge[file][selector][xml_child]);\n                    for (var i = 0; i < val; i++) {\n                        mungeutil.deep_add(new_munge, [file, selector, { xml: xml_child, count: val }]);\n                    }\n                }\n            }\n        }\n        root.config_munge = new_munge;\n    }\n\n    return root;\n}\n\nmodule.exports = PlatformJson;\n\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/ConfigChanges/munge-util.js":"/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n/* jshint sub:true  */\n\nvar _ = require('underscore');\n\n// add the count of [key1][key2]...[keyN] to obj\n// return true if it didn't exist before\nexports.deep_add = function deep_add(obj, keys /* or key1, key2 .... */ ) {\n    if ( !Array.isArray(keys) ) {\n        keys = Array.prototype.slice.call(arguments, 1);\n    }\n\n    return exports.process_munge(obj, true/*createParents*/, function (parentArray, k) {\n        var found = _.find(parentArray, function(element) {\n            return element.xml == k.xml;\n        });\n        if (found) {\n            found.after = found.after || k.after;\n            found.count += k.count;\n        } else {\n            parentArray.push(k);\n        }\n        return !found;\n    }, keys);\n};\n\n// decrement the count of [key1][key2]...[keyN] from obj and remove if it reaches 0\n// return true if it was removed or not found\nexports.deep_remove = function deep_remove(obj, keys /* or key1, key2 .... */ ) {\n    if ( !Array.isArray(keys) ) {\n        keys = Array.prototype.slice.call(arguments, 1);\n    }\n\n    var result = exports.process_munge(obj, false/*createParents*/, function (parentArray, k) {\n        var index = -1;\n        var found = _.find(parentArray, function (element) {\n            index++;\n            return element.xml == k.xml;\n        });\n        if (found) {\n            found.count -= k.count;\n            if (found.count > 0) {\n                return false;\n            }\n            else {\n                parentArray.splice(index, 1);\n            }\n        }\n        return undefined;\n    }, keys);\n\n    return typeof result === 'undefined' ? true : result;\n};\n\n// search for [key1][key2]...[keyN]\n// return the object or undefined if not found\nexports.deep_find = function deep_find(obj, keys /* or key1, key2 .... */ ) {\n    if ( !Array.isArray(keys) ) {\n        keys = Array.prototype.slice.call(arguments, 1);\n    }\n\n    return exports.process_munge(obj, false/*createParents?*/, function (parentArray, k) {\n        return _.find(parentArray, function (element) {\n            return element.xml == (k.xml || k);\n        });\n    }, keys);\n};\n\n// Execute func passing it the parent array and the xmlChild key.\n// When createParents is true, add the file and parent items  they are missing\n// When createParents is false, stop and return undefined if the file and/or parent items are missing\n\nexports.process_munge = function process_munge(obj, createParents, func, keys /* or key1, key2 .... */ ) {\n    if ( !Array.isArray(keys) ) {\n        keys = Array.prototype.slice.call(arguments, 1);\n    }\n    var k = keys[0];\n    if (keys.length == 1) {\n        return func(obj, k);\n    } else if (keys.length == 2) {\n        if (!obj.parents[k] && !createParents) {\n            return undefined;\n        }\n        obj.parents[k] = obj.parents[k] || [];\n        return exports.process_munge(obj.parents[k], createParents, func, keys.slice(1));\n    } else if (keys.length == 3){\n        if (!obj.files[k] && !createParents) {\n            return undefined;\n        }\n        obj.files[k] = obj.files[k] || { parents: {} };\n        return exports.process_munge(obj.files[k], createParents, func, keys.slice(1));\n    } else {\n        throw new Error('Invalid key format. Must contain at most 3 elements (file, parent, xmlChild).');\n    }\n};\n\n// All values from munge are added to base as\n// base[file][selector][child] += munge[file][selector][child]\n// Returns a munge object containing values that exist in munge\n// but not in base.\nexports.increment_munge = function increment_munge(base, munge) {\n    var diff = { files: {} };\n\n    for (var file in munge.files) {\n        for (var selector in munge.files[file].parents) {\n            for (var xml_child in munge.files[file].parents[selector]) {\n                var val = munge.files[file].parents[selector][xml_child];\n                // if node not in base, add it to diff and base\n                // else increment it's value in base without adding to diff\n                var newlyAdded = exports.deep_add(base, [file, selector, val]);\n                if (newlyAdded) {\n                    exports.deep_add(diff, file, selector, val);\n                }\n            }\n        }\n    }\n    return diff;\n};\n\n// Update the base munge object as\n// base[file][selector][child] -= munge[file][selector][child]\n// nodes that reached zero value are removed from base and added to the returned munge\n// object.\nexports.decrement_munge = function decrement_munge(base, munge) {\n    var zeroed = { files: {} };\n\n    for (var file in munge.files) {\n        for (var selector in munge.files[file].parents) {\n            for (var xml_child in munge.files[file].parents[selector]) {\n                var val = munge.files[file].parents[selector][xml_child];\n                // if node not in base, add it to diff and base\n                // else increment it's value in base without adding to diff\n                var removed = exports.deep_remove(base, [file, selector, val]);\n                if (removed) {\n                    exports.deep_add(zeroed, file, selector, val);\n                }\n            }\n        }\n    }\n    return zeroed;\n};\n\n// For better readability where used\nexports.clone_munge = function clone_munge(munge) {\n    return exports.increment_munge({}, munge);\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/cordova-registry-mapper/index.js":"var map = {\n    'org.apache.cordova.battery-status':'cordova-plugin-battery-status',\n    'org.apache.cordova.camera':'cordova-plugin-camera',\n    'org.apache.cordova.console':'cordova-plugin-console',\n    'org.apache.cordova.contacts':'cordova-plugin-contacts',\n    'org.apache.cordova.device':'cordova-plugin-device',\n    'org.apache.cordova.device-motion':'cordova-plugin-device-motion',\n    'org.apache.cordova.device-orientation':'cordova-plugin-device-orientation',\n    'org.apache.cordova.dialogs':'cordova-plugin-dialogs',\n    'org.apache.cordova.file':'cordova-plugin-file',\n    'org.apache.cordova.file-transfer':'cordova-plugin-file-transfer',\n    'org.apache.cordova.geolocation':'cordova-plugin-geolocation',\n    'org.apache.cordova.globalization':'cordova-plugin-globalization',\n    'org.apache.cordova.inappbrowser':'cordova-plugin-inappbrowser',\n    'org.apache.cordova.media':'cordova-plugin-media',\n    'org.apache.cordova.media-capture':'cordova-plugin-media-capture',\n    'org.apache.cordova.network-information':'cordova-plugin-network-information',\n    'org.apache.cordova.splashscreen':'cordova-plugin-splashscreen',\n    'org.apache.cordova.statusbar':'cordova-plugin-statusbar',\n    'org.apache.cordova.vibration':'cordova-plugin-vibration',\n    'org.apache.cordova.test-framework':'cordova-plugin-test-framework',\n    'com.msopentech.websql' : 'cordova-plugin-websql',\n    'com.msopentech.indexeddb' : 'cordova-plugin-indexeddb',\n    'com.microsoft.aad.adal' : 'cordova-plugin-ms-adal',\n    'com.microsoft.capptain' : 'capptain-cordova',\n    'com.microsoft.services.aadgraph' : 'cordova-plugin-ms-aad-graph',\n    'com.microsoft.services.files' : 'cordova-plugin-ms-files',\n    'om.microsoft.services.outlook' : 'cordova-plugin-ms-outlook',\n    'com.pbakondy.sim' : 'cordova-plugin-sim',\n    'android.support.v4' : 'cordova-plugin-android-support-v4',\n    'android.support.v7-appcompat' : 'cordova-plugin-android-support-v7-appcompat',\n    'com.google.playservices' : 'cordova-plugin-googleplayservices',\n    'com.google.cordova.admob' : 'cordova-plugin-admobpro',\n    'com.rjfun.cordova.extension' : 'cordova-plugin-extension',\n    'com.rjfun.cordova.plugin.admob' : 'cordova-plugin-admob',\n    'com.rjfun.cordova.flurryads' : 'cordova-plugin-flurry',\n    'com.rjfun.cordova.facebookads' : 'cordova-plugin-facebookads',\n    'com.rjfun.cordova.httpd' : 'cordova-plugin-httpd',\n    'com.rjfun.cordova.iad' : 'cordova-plugin-iad',\n    'com.rjfun.cordova.iflyspeech' : 'cordova-plugin-iflyspeech',\n    'com.rjfun.cordova.lianlianpay' : 'cordova-plugin-lianlianpay',\n    'com.rjfun.cordova.mobfox' : 'cordova-plugin-mobfox',\n    'com.rjfun.cordova.mopub' : 'cordova-plugin-mopub',\n    'com.rjfun.cordova.mmedia' : 'cordova-plugin-mmedia',\n    'com.rjfun.cordova.nativeaudio' : 'cordova-plugin-nativeaudio',\n    'com.rjfun.cordova.plugin.paypalmpl' : 'cordova-plugin-paypalmpl',\n    'com.rjfun.cordova.smartadserver' : 'cordova-plugin-smartadserver',\n    'com.rjfun.cordova.sms' : 'cordova-plugin-sms',\n    'com.rjfun.cordova.wifi' : 'cordova-plugin-wifi',\n    'com.ohh2ahh.plugins.appavailability' : 'cordova-plugin-appavailability',\n    'org.adapt-it.cordova.fonts' : 'cordova-plugin-fonts',\n    'de.martinreinhardt.cordova.plugins.barcodeScanner' : 'cordova-plugin-barcodescanner',\n    'de.martinreinhardt.cordova.plugins.urlhandler' : 'cordova-plugin-urlhandler',\n    'de.martinreinhardt.cordova.plugins.email' : 'cordova-plugin-email',\n    'de.martinreinhardt.cordova.plugins.certificates' : 'cordova-plugin-certificates',\n    'de.martinreinhardt.cordova.plugins.sqlite' : 'cordova-plugin-sqlite',\n    'fr.smile.cordova.fileopener' : 'cordova-plugin-fileopener',\n    'org.smile.websqldatabase.initializer' : 'cordova-plugin-websqldatabase-initializer',\n    'org.smile.websqldatabase.wpdb' : 'cordova-plugin-websqldatabase',\n    'org.jboss.aerogear.cordova.push' : 'aerogear-cordova-push',\n    'org.jboss.aerogear.cordova.oauth2' : 'aerogear-cordova-oauth2',\n    'org.jboss.aerogear.cordova.geo' : 'aerogear-cordova-geo',\n    'org.jboss.aerogear.cordova.crypto' : 'aerogear-cordova-crypto',\n    'org.jboss.aerogaer.cordova.otp' : 'aerogear-cordova-otp',\n    'uk.co.ilee.applewatch' : 'cordova-plugin-apple-watch',\n    'uk.co.ilee.directions' : 'cordova-plugin-directions',\n    'uk.co.ilee.gamecenter' : 'cordova-plugin-game-center',\n    'uk.co.ilee.jailbreakdetection' : 'cordova-plugin-jailbreak-detection',\n    'uk.co.ilee.nativetransitions' : 'cordova-plugin-native-transitions',\n    'uk.co.ilee.pedometer' : 'cordova-plugin-pedometer',\n    'uk.co.ilee.shake' : 'cordova-plugin-shake',\n    'uk.co.ilee.touchid' : 'cordova-plugin-touchid',\n    'com.knowledgecode.cordova.websocket' : 'cordova-plugin-websocket',\n    'com.elixel.plugins.settings' : 'cordova-plugin-settings',\n    'com.cowbell.cordova.geofence' : 'cordova-plugin-geofence',\n    'com.blackberry.community.preventsleep' : 'cordova-plugin-preventsleep',\n    'com.blackberry.community.gamepad' : 'cordova-plugin-gamepad',\n    'com.blackberry.community.led' : 'cordova-plugin-led',\n    'com.blackberry.community.thumbnail' : 'cordova-plugin-thumbnail',\n    'com.blackberry.community.mediakeys' : 'cordova-plugin-mediakeys',\n    'com.blackberry.community.simplebtlehrplugin' : 'cordova-plugin-bluetoothheartmonitor',\n    'com.blackberry.community.simplebeaconplugin' : 'cordova-plugin-bluetoothibeacon',\n    'com.blackberry.community.simplebtsppplugin' : 'cordova-plugin-bluetoothspp',\n    'com.blackberry.community.clipboard' : 'cordova-plugin-clipboard',\n    'com.blackberry.community.curl' : 'cordova-plugin-curl',\n    'com.blackberry.community.qt' : 'cordova-plugin-qtbridge',\n    'com.blackberry.community.upnp' : 'cordova-plugin-upnp',\n    'com.blackberry.community.PasswordCrypto' : 'cordova-plugin-password-crypto',\n    'com.blackberry.community.deviceinfoplugin' : 'cordova-plugin-deviceinfo',\n    'com.blackberry.community.gsecrypto' : 'cordova-plugin-bb-crypto',\n    'com.blackberry.community.mongoose' : 'cordova-plugin-mongoose',\n    'com.blackberry.community.sysdialog' : 'cordova-plugin-bb-sysdialog',\n    'com.blackberry.community.screendisplay' : 'cordova-plugin-screendisplay',\n    'com.blackberry.community.messageplugin' : 'cordova-plugin-bb-messageretrieve',\n    'com.blackberry.community.emailsenderplugin' : 'cordova-plugin-emailsender',\n    'com.blackberry.community.audiometadata' : 'cordova-plugin-audiometadata',\n    'com.blackberry.community.deviceemails' : 'cordova-plugin-deviceemails',\n    'com.blackberry.community.audiorecorder' : 'cordova-plugin-audiorecorder',\n    'com.blackberry.community.vibration' : 'cordova-plugin-vibrate-intense',\n    'com.blackberry.community.SMSPlugin' : 'cordova-plugin-bb-sms',\n    'com.blackberry.community.extractZipFile' : 'cordova-plugin-bb-zip',\n    'com.blackberry.community.lowlatencyaudio' : 'cordova-plugin-bb-nativeaudio',\n    'com.blackberry.community.barcodescanner' : 'phonegap-plugin-barcodescanner',\n    'com.blackberry.app' : 'cordova-plugin-bb-app',\n    'com.blackberry.bbm.platform' : 'cordova-plugin-bbm',\n    'com.blackberry.connection' : 'cordova-plugin-bb-connection',\n    'com.blackberry.identity' : 'cordova-plugin-bb-identity',\n    'com.blackberry.invoke.card' : 'cordova-plugin-bb-card',\n    'com.blackberry.invoke' : 'cordova-plugin-bb-invoke',\n    'com.blackberry.invoked' : 'cordova-plugin-bb-invoked',\n    'com.blackberry.io.filetransfer' : 'cordova-plugin-bb-filetransfer',\n    'com.blackberry.io' : 'cordova-plugin-bb-io',\n    'com.blackberry.notification' : 'cordova-plugin-bb-notification',\n    'com.blackberry.payment' : 'cordova-plugin-bb-payment',\n    'com.blackberry.pim.calendar' : 'cordova-plugin-bb-calendar',\n    'com.blackberry.pim.contacts' : 'cordova-plugin-bb-contacts',\n    'com.blackberry.pim.lib' : 'cordova-plugin-bb-pimlib',\n    'com.blackberry.push' : 'cordova-plugin-bb-push',\n    'com.blackberry.screenshot' : 'cordova-plugin-screenshot',\n    'com.blackberry.sensors' : 'cordova-plugin-bb-sensors',\n    'com.blackberry.system' : 'cordova-plugin-bb-system',\n    'com.blackberry.ui.contextmenu' : 'cordova-plugin-bb-ctxmenu',\n    'com.blackberry.ui.cover' : 'cordova-plugin-bb-cover',\n    'com.blackberry.ui.dialog' : 'cordova-plugin-bb-dialog',\n    'com.blackberry.ui.input' : 'cordova-plugin-touch-keyboard',\n    'com.blackberry.ui.toast' : 'cordova-plugin-toast',\n    'com.blackberry.user.identity' : 'cordova-plugin-bb-idservice',\n    'com.blackberry.utils' : 'cordova-plugin-bb-utils',\n    'net.yoik.cordova.plugins.screenorientation' : 'cordova-plugin-screen-orientation',\n    'com.phonegap.plugins.barcodescanner' : 'phonegap-plugin-barcodescanner',\n    'com.manifoldjs.hostedwebapp' : 'cordova-plugin-hostedwebapp',\n    'com.initialxy.cordova.themeablebrowser' : 'cordova-plugin-themeablebrowser',\n    'gr.denton.photosphere' : 'cordova-plugin-panoramaviewer',\n    'nl.x-services.plugins.actionsheet' : 'cordova-plugin-actionsheet',\n    'nl.x-services.plugins.socialsharing' : 'cordova-plugin-x-socialsharing',\n    'nl.x-services.plugins.googleplus' : 'cordova-plugin-googleplus',\n    'nl.x-services.plugins.insomnia' : 'cordova-plugin-insomnia',\n    'nl.x-services.plugins.toast' : 'cordova-plugin-x-toast',\n    'nl.x-services.plugins.calendar' : 'cordova-plugin-calendar',\n    'nl.x-services.plugins.launchmyapp' : 'cordova-plugin-customurlscheme',\n    'nl.x-services.plugins.flashlight' : 'cordova-plugin-flashlight',\n    'nl.x-services.plugins.sslcertificatechecker' : 'cordova-plugin-sslcertificatechecker',\n    'com.bridge.open' : 'cordova-open',\n    'com.bridge.safe' : 'cordova-safe',\n    'com.disusered.open' : 'cordova-open',\n    'com.disusered.safe' : 'cordova-safe',\n    'me.apla.cordova.app-preferences' : 'cordova-plugin-app-preferences',\n    'com.konotor.cordova' : 'cordova-plugin-konotor',\n    'io.intercom.cordova' : 'cordova-plugin-intercom',\n    'com.onesignal.plugins.onesignal' : 'onesignal-cordova-plugin',\n    'com.danjarvis.document-contract': 'cordova-plugin-document-contract',\n    'com.eface2face.iosrtc' : 'cordova-plugin-iosrtc',\n    'com.mobileapptracking.matplugin' : 'cordova-plugin-tune',\n    'com.marianhello.cordova.background-geolocation' : 'cordova-plugin-mauron85-background-geolocation',\n    'fr.louisbl.cordova.locationservices' : 'cordova-plugin-locationservices',\n    'fr.louisbl.cordova.gpslocation' : 'cordova-plugin-gpslocation',\n    'com.hiliaox.weibo' : 'cordova-plugin-weibo',\n    'com.uxcam.cordova.plugin' : 'cordova-uxcam',\n    'de.fastr.phonegap.plugins.downloader' : 'cordova-plugin-fastrde-downloader',\n    'de.fastr.phonegap.plugins.injectView' : 'cordova-plugin-fastrde-injectview',\n    'de.fastr.phonegap.plugins.CheckGPS' : 'cordova-plugin-fastrde-checkgps',\n    'de.fastr.phonegap.plugins.md5chksum' : ' cordova-plugin-fastrde-md5',\n    'io.repro.cordova' : 'cordova-plugin-repro',\n    're.notifica.cordova': 'cordova-plugin-notificare-push',\n    'com.megster.cordova.ble': 'cordova-plugin-ble-central',\n    'com.megster.cordova.bluetoothserial': 'cordova-plugin-bluetooth-serial',\n    'com.megster.cordova.rfduino': 'cordova-plugin-rfduino',\n    'cz.velda.cordova.plugin.devicefeedback': 'cordova-plugin-velda-devicefeedback',\n    'cz.Velda.cordova.plugin.devicefeedback': 'cordova-plugin-velda-devicefeedback',\n    'org.scriptotek.appinfo': 'cordova-plugin-appinfo',\n    'com.yezhiming.cordova.appinfo': 'cordova-plugin-appinfo',\n    'pl.makingwaves.estimotebeacons': 'cordova-plugin-estimote',\n    'com.evothings.ble': 'cordova-plugin-ble',\n    'com.appsee.plugin' : 'cordova-plugin-appsee',\n    'am.armsoft.plugins.listpicker': 'cordova-plugin-listpicker',\n    'com.pushbots.push': 'pushbots-cordova-plugin',\n    'com.admob.google': 'cordova-admob',\n    'admob.ads.google': 'cordova-admob-ads',\n    'admob.google.plugin': 'admob-google',\n    'com.admob.admobads': 'admob-ads',\n    'com.connectivity.monitor': 'cordova-connectivity-monitor',\n    'com.ios.libgoogleadmobads': 'cordova-libgoogleadmobads',\n    'com.google.play.services': 'cordova-google-play-services',\n    'android.support.v13': 'cordova-android-support-v13',\n    'android.support.v4': 'cordova-android-support-v4',\n    'com.analytics.google': 'cordova-plugin-analytics',\n    'com.analytics.adid.google': 'cordova-plugin-analytics-adid',\n    'com.chariotsolutions.nfc.plugin': 'phonegap-nfc',\n    'com.samz.mixpanel': 'cordova-plugin-mixpanel'\n}\n\nmodule.exports.oldToNew = map;\n\nvar reverseMap = {};\nObject.keys(map).forEach(function(elem){\n    reverseMap[map[elem]] = elem;\n})\n\nmodule.exports.newToOld = reverseMap;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/ConfigParser/ConfigParser.js":"/**\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n*/\n\n/* jshint sub:true */\n\nvar et = require('elementtree'),\n    xml= require('../util/xml-helpers'),\n    CordovaError = require('../CordovaError/CordovaError'),\n    fs = require('fs'),\n    events = require('../events');\n\n\n/** Wraps a config.xml file */\nfunction ConfigParser(path) {\n    this.path = path;\n    try {\n        this.doc = xml.parseElementtreeSync(path);\n        this.cdvNamespacePrefix = getCordovaNamespacePrefix(this.doc);\n        et.register_namespace(this.cdvNamespacePrefix, 'http://cordova.apache.org/ns/1.0');\n    } catch (e) {\n        console.error('Parsing '+path+' failed');\n        throw e;\n    }\n    var r = this.doc.getroot();\n    if (r.tag !== 'widget') {\n        throw new CordovaError(path + ' has incorrect root node name (expected \"widget\", was \"' + r.tag + '\")');\n    }\n}\n\nfunction getNodeTextSafe(el) {\n    return el && el.text && el.text.trim();\n}\n\nfunction findOrCreate(doc, name) {\n    var ret = doc.find(name);\n    if (!ret) {\n        ret = new et.Element(name);\n        doc.getroot().append(ret);\n    }\n    return ret;\n}\n\nfunction getCordovaNamespacePrefix(doc){\n    var rootAtribs = Object.getOwnPropertyNames(doc.getroot().attrib);\n    var prefix = 'cdv';\n    for (var j = 0; j < rootAtribs.length; j++ ) {\n        if(rootAtribs[j].indexOf('xmlns:') === 0 &&\n            doc.getroot().attrib[rootAtribs[j]] === 'http://cordova.apache.org/ns/1.0'){\n            var strings = rootAtribs[j].split(':');\n            prefix = strings[1];\n            break;\n        }\n    }\n    return prefix;\n}\n\n/**\n * Finds the value of an element's attribute\n * @param  {String} attributeName Name of the attribute to search for\n * @param  {Array}  elems         An array of ElementTree nodes\n * @return {String}\n */\nfunction findElementAttributeValue(attributeName, elems) {\n\n    elems = Array.isArray(elems) ? elems : [ elems ];\n\n    var value = elems.filter(function (elem) {\n        return elem.attrib.name.toLowerCase() === attributeName.toLowerCase();\n    }).map(function (filteredElems) {\n        return filteredElems.attrib.value;\n    }).pop();\n\n    return value ? value : '';\n}\n\nConfigParser.prototype = {\n    packageName: function(id) {\n        return this.doc.getroot().attrib['id'];\n    },\n    setPackageName: function(id) {\n        this.doc.getroot().attrib['id'] = id;\n    },\n    android_packageName: function() {\n        return this.doc.getroot().attrib['android-packageName'];\n    },\n    android_activityName: function() {\n\treturn this.doc.getroot().attrib['android-activityName'];\n    },\n    ios_CFBundleIdentifier: function() {\n        return this.doc.getroot().attrib['ios-CFBundleIdentifier'];\n    },\n    name: function() {\n        return getNodeTextSafe(this.doc.find('name'));\n    },\n    setName: function(name) {\n        var el = findOrCreate(this.doc, 'name');\n        el.text = name;\n    },\n    description: function() {\n        return getNodeTextSafe(this.doc.find('description'));\n    },\n    setDescription: function(text) {\n        var el = findOrCreate(this.doc, 'description');\n        el.text = text;\n    },\n    version: function() {\n        return this.doc.getroot().attrib['version'];\n    },\n    windows_packageVersion: function() {\n        return this.doc.getroot().attrib('windows-packageVersion');\n    },\n    android_versionCode: function() {\n        return this.doc.getroot().attrib['android-versionCode'];\n    },\n    ios_CFBundleVersion: function() {\n        return this.doc.getroot().attrib['ios-CFBundleVersion'];\n    },\n    setVersion: function(value) {\n        this.doc.getroot().attrib['version'] = value;\n    },\n    author: function() {\n        return getNodeTextSafe(this.doc.find('author'));\n    },\n    getGlobalPreference: function (name) {\n        return findElementAttributeValue(name, this.doc.findall('preference'));\n    },\n    setGlobalPreference: function (name, value) {\n        var pref = this.doc.find('preference[@name=\"' + name + '\"]');\n        if (!pref) {\n            pref = new et.Element('preference');\n            pref.attrib.name = name;\n            this.doc.getroot().append(pref);\n        }\n        pref.attrib.value = value;\n    },\n    getPlatformPreference: function (name, platform) {\n        return findElementAttributeValue(name, this.doc.findall('platform[@name=\\'' + platform + '\\']/preference'));\n    },\n    getPreference: function(name, platform) {\n\n        var platformPreference = '';\n\n        if (platform) {\n            platformPreference = this.getPlatformPreference(name, platform);\n        }\n\n        return platformPreference ? platformPreference : this.getGlobalPreference(name);\n\n    },\n    /**\n     * Returns all resources for the platform specified.\n     * @param  {String} platform     The platform.\n     * @param {string}  resourceName Type of static resources to return.\n     *                               \"icon\" and \"splash\" currently supported.\n     * @return {Array}               Resources for the platform specified.\n     */\n    getStaticResources: function(platform, resourceName) {\n        var ret = [],\n            staticResources = [];\n        if (platform) { // platform specific icons\n            this.doc.findall('platform[@name=\\'' + platform + '\\']/' + resourceName).forEach(function(elt){\n                elt.platform = platform; // mark as platform specific resource\n                staticResources.push(elt);\n            });\n        }\n        // root level resources\n        staticResources = staticResources.concat(this.doc.findall(resourceName));\n        // parse resource elements\n        var that = this;\n        staticResources.forEach(function (elt) {\n            var res = {};\n            res.src = elt.attrib.src;\n            res.density = elt.attrib['density'] || elt.attrib[that.cdvNamespacePrefix+':density'] || elt.attrib['gap:density'];\n            res.platform = elt.platform || null; // null means icon represents default icon (shared between platforms)\n            res.width = +elt.attrib.width || undefined;\n            res.height = +elt.attrib.height || undefined;\n\n            // default icon\n            if (!res.width && !res.height && !res.density) {\n                ret.defaultResource = res;\n            }\n            ret.push(res);\n        });\n\n        /**\n         * Returns resource with specified width and/or height.\n         * @param  {number} width Width of resource.\n         * @param  {number} height Height of resource.\n         * @return {Resource} Resource object or null if not found.\n         */\n        ret.getBySize = function(width, height) {\n            return ret.filter(function(res) {\n                if (!res.width && !res.height) {\n                    return false;\n                }\n                return ((!res.width || (width == res.width)) &&\n                    (!res.height || (height == res.height)));\n            })[0] || null;\n        };\n\n        /**\n         * Returns resource with specified density.\n         * @param  {string} density Density of resource.\n         * @return {Resource}       Resource object or null if not found.\n         */\n        ret.getByDensity = function(density) {\n            return ret.filter(function(res) {\n                return res.density == density;\n            })[0] || null;\n        };\n\n        /** Returns default icons */\n        ret.getDefault = function() {\n            return ret.defaultResource;\n        };\n\n        return ret;\n    },\n\n    /**\n     * Returns all icons for specific platform.\n     * @param  {string} platform Platform name\n     * @return {Resource[]}      Array of icon objects.\n     */\n    getIcons: function(platform) {\n        return this.getStaticResources(platform, 'icon');\n    },\n\n    /**\n     * Returns all splash images for specific platform.\n     * @param  {string} platform Platform name\n     * @return {Resource[]}      Array of Splash objects.\n     */\n    getSplashScreens: function(platform) {\n        return this.getStaticResources(platform, 'splash');\n    },\n\n    /**\n     * Returns all hook scripts for the hook type specified.\n     * @param  {String} hook     The hook type.\n     * @param {Array}  platforms Platforms to look for scripts into (root scripts will be included as well).\n     * @return {Array}               Script elements.\n     */\n    getHookScripts: function(hook, platforms) {\n        var self = this;\n        var scriptElements = self.doc.findall('./hook');\n\n        if(platforms) {\n            platforms.forEach(function (platform) {\n                scriptElements = scriptElements.concat(self.doc.findall('./platform[@name=\"' + platform + '\"]/hook'));\n            });\n        }\n\n        function filterScriptByHookType(el) {\n            return el.attrib.src && el.attrib.type && el.attrib.type.toLowerCase() === hook;\n        }\n\n        return scriptElements.filter(filterScriptByHookType);\n    },\n   /**\n    * Returns a list of plugin (IDs).\n    *\n    * This function also returns any plugin's that\n    * were defined using the legacy <feature> tags.\n    * @return {string[]} Array of plugin IDs\n    */\n    getPluginIdList: function () {\n        var plugins = this.doc.findall('plugin');\n        var result = plugins.map(function(plugin){\n            return plugin.attrib.name;\n        });\n        var features = this.doc.findall('feature');\n        features.forEach(function(element ){\n            var idTag = element.find('./param[@name=\"id\"]');\n            if(idTag){\n                result.push(idTag.attrib.value);\n            }\n        });\n        return result;\n    },\n    getPlugins: function () {\n        return this.getPluginIdList().map(function (pluginId) {\n            return this.getPlugin(pluginId);\n        }, this);\n    },\n    /**\n     * Adds a plugin element. Does not check for duplicates.\n     * @name addPlugin\n     * @function\n     * @param {object} attributes name and spec are supported\n     * @param {Array|object} variables name, value or arbitary object\n     */\n    addPlugin: function (attributes, variables) {\n        if (!attributes && !attributes.name) return;\n        var el = new et.Element('plugin');\n        el.attrib.name = attributes.name;\n        if (attributes.spec) {\n            el.attrib.spec = attributes.spec;\n        }\n\n        // support arbitrary object as variables source\n        if (variables && typeof variables === 'object' && !Array.isArray(variables)) {\n            variables = Object.keys(variables)\n            .map(function (variableName) {\n                return {name: variableName, value: variables[variableName]};\n            });\n        }\n\n        if (variables) {\n            variables.forEach(function (variable) {\n                el.append(new et.Element('variable', { name: variable.name, value: variable.value }));\n            });\n        }\n        this.doc.getroot().append(el);\n    },\n    /**\n     * Retrives the plugin with the given id or null if not found.\n     *\n     * This function also returns any plugin's that\n     * were defined using the legacy <feature> tags.\n     * @name getPlugin\n     * @function\n     * @param {String} id\n     * @returns {object} plugin including any variables\n     */\n    getPlugin: function(id){\n        if(!id){\n            return undefined;\n        }\n        var pluginElement = this.doc.find('./plugin/[@name=\"' + id + '\"]');\n        if (null === pluginElement) {\n            var legacyFeature =  this.doc.find('./feature/param[@name=\"id\"][@value=\"' + id + '\"]/..');\n            if(legacyFeature){\n                 events.emit('log', 'Found deprecated feature entry for ' + id +' in config.xml.');\n                return featureToPlugin(legacyFeature);\n            }\n            return undefined;\n        }\n        var plugin = {};\n\n        plugin.name = pluginElement.attrib.name;\n        plugin.spec = pluginElement.attrib.spec || pluginElement.attrib.src || pluginElement.attrib.version;\n        plugin.variables = {};\n        var variableElements = pluginElement.findall('variable');\n        variableElements.forEach(function(varElement){\n            var name = varElement.attrib.name;\n            var value = varElement.attrib.value;\n            if(name){\n                plugin.variables[name] = value;\n            }\n        });\n        return plugin;\n    },\n    /**\n     * Remove the plugin entry with give name (id).\n     *\n     * This function also operates on any plugin's that\n     * were defined using the legacy <feature> tags.\n     * @name removePlugin\n     * @function\n     * @param id name of the plugin\n     */\n    removePlugin: function(id){\n        if(id){\n            var plugins = this.doc.findall('./plugin/[@name=\"' + id + '\"]')\n                .concat(this.doc.findall('./feature/param[@name=\"id\"][@value=\"' + id + '\"]/..'));\n            var children = this.doc.getroot().getchildren();\n            plugins.forEach(function (plugin) {\n                var idx = children.indexOf(plugin);\n                if (idx > -1) {\n                    children.splice(idx, 1);\n                }\n            });\n        }\n    },\n\n    // Add any element to the root\n    addElement: function(name, attributes) {\n        var el = et.Element(name);\n        for (var a in attributes) {\n            el.attrib[a] = attributes[a];\n        }\n        this.doc.getroot().append(el);\n    },\n\n    /**\n     * Adds an engine. Does not check for duplicates.\n     * @param  {String} name the engine name\n     * @param  {String} spec engine source location or version (optional)\n     */\n    addEngine: function(name, spec){\n        if(!name) return;\n        var el = et.Element('engine');\n        el.attrib.name = name;\n        if(spec){\n            el.attrib.spec = spec;\n        }\n        this.doc.getroot().append(el);\n    },\n    /**\n     * Removes all the engines with given name\n     * @param  {String} name the engine name.\n     */\n    removeEngine: function(name){\n        var engines = this.doc.findall('./engine/[@name=\"' +name+'\"]');\n        for(var i=0; i < engines.length; i++){\n            var children = this.doc.getroot().getchildren();\n            var idx = children.indexOf(engines[i]);\n            if(idx > -1){\n                children.splice(idx,1);\n            }\n        }\n    },\n    getEngines: function(){\n        var engines = this.doc.findall('./engine');\n        return engines.map(function(engine){\n            var spec = engine.attrib.spec || engine.attrib.version;\n            return {\n                'name': engine.attrib.name,\n                'spec': spec ? spec : null\n            };\n        });\n    },\n    /* Get all the access tags */\n    getAccesses: function() {\n        var accesses = this.doc.findall('./access');\n        return accesses.map(function(access){\n            var minimum_tls_version = access.attrib['minimum-tls-version']; /* String */\n            var requires_forward_secrecy = access.attrib['requires-forward-secrecy']; /* Boolean */\n            return {\n                'origin': access.attrib.origin,\n                'minimum_tls_version': minimum_tls_version,\n                'requires_forward_secrecy' : requires_forward_secrecy\n            };\n        });\n    },\n    /* Get all the allow-navigation tags */\n    getAllowNavigations: function() {\n        var allow_navigations = this.doc.findall('./allow-navigation');\n        return allow_navigations.map(function(allow_navigation){\n            var minimum_tls_version = allow_navigation.attrib['minimum-tls-version']; /* String */\n            var requires_forward_secrecy = allow_navigation.attrib['requires-forward-secrecy']; /* Boolean */\n            return {\n                'href': allow_navigation.attrib.href,\n                'minimum_tls_version': minimum_tls_version,\n                'requires_forward_secrecy' : requires_forward_secrecy\n            };\n        });\n    },\n    write:function() {\n        fs.writeFileSync(this.path, this.doc.write({indent: 4}), 'utf-8');\n    }\n};\n\nfunction featureToPlugin(featureElement) {\n    var plugin = {};\n    plugin.variables = [];\n    var pluginVersion,\n        pluginSrc;\n\n    var nodes = featureElement.findall('param');\n    nodes.forEach(function (element) {\n        var n = element.attrib.name;\n        var v = element.attrib.value;\n        if (n === 'id') {\n            plugin.name = v;\n        } else if (n === 'version') {\n            pluginVersion = v;\n        } else if (n === 'url' || n === 'installPath') {\n            pluginSrc = v;\n        } else {\n            plugin.variables[n] = v;\n        }\n    });\n\n    var spec = pluginSrc || pluginVersion;\n    if (spec) {\n        plugin.spec = spec;\n    }\n\n    return plugin;\n}\nmodule.exports = ConfigParser;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/elementtree/lib/elementtree.js":"/**\n *  Copyright 2011 Rackspace\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\nvar sprintf = require('./sprintf').sprintf;\n\nvar utils = require('./utils');\nvar ElementPath = require('./elementpath');\nvar TreeBuilder = require('./treebuilder').TreeBuilder;\nvar get_parser = require('./parser').get_parser;\nvar constants = require('./constants');\n\nvar element_ids = 0;\n\nfunction Element(tag, attrib)\n{\n  this._id = element_ids++;\n  this.tag = tag;\n  this.attrib = {};\n  this.text = null;\n  this.tail = null;\n  this._children = [];\n\n  if (attrib) {\n    this.attrib = utils.merge(this.attrib, attrib);\n  }\n}\n\nElement.prototype.toString = function()\n{\n  return sprintf(\"<Element %s at %s>\", this.tag, this._id);\n};\n\nElement.prototype.makeelement = function(tag, attrib)\n{\n  return new Element(tag, attrib);\n};\n\nElement.prototype.len = function()\n{\n  return this._children.length;\n};\n\nElement.prototype.getItem = function(index)\n{\n  return this._children[index];\n};\n\nElement.prototype.setItem = function(index, element)\n{\n  this._children[index] = element;\n};\n\nElement.prototype.delItem = function(index)\n{\n  this._children.splice(index, 1);\n};\n\nElement.prototype.getSlice = function(start, stop)\n{\n  return this._children.slice(start, stop);\n};\n\nElement.prototype.setSlice = function(start, stop, elements)\n{\n  var i;\n  var k = 0;\n  for (i = start; i < stop; i++, k++) {\n    this._children[i] = elements[k];\n  }\n};\n\nElement.prototype.delSlice = function(start, stop)\n{\n  this._children.splice(start, stop - start);\n};\n\nElement.prototype.append = function(element)\n{\n  this._children.push(element);\n};\n\nElement.prototype.extend = function(elements)\n{\n  this._children.concat(elements);\n};\n\nElement.prototype.insert = function(index, element)\n{\n  this._children[index] = element;\n};\n\nElement.prototype.remove = function(element)\n{\n  this._children = this._children.filter(function(e) {\n    /* TODO: is this the right way to do this? */\n    if (e._id === element._id) {\n      return false;\n    }\n    return true;\n  });\n};\n\nElement.prototype.getchildren = function() {\n  return this._children;\n};\n\nElement.prototype.find = function(path)\n{\n  return ElementPath.find(this, path);\n};\n\nElement.prototype.findtext = function(path, defvalue)\n{\n  return ElementPath.findtext(this, path, defvalue);\n};\n\nElement.prototype.findall = function(path, defvalue)\n{\n  return ElementPath.findall(this, path, defvalue);\n};\n\nElement.prototype.clear = function()\n{\n  this.attrib = {};\n  this._children = [];\n  this.text = null;\n  this.tail = null;\n};\n\nElement.prototype.get = function(key, defvalue)\n{\n  if (this.attrib[key] !== undefined) {\n    return this.attrib[key];\n  }\n  else {\n    return defvalue;\n  }\n};\n\nElement.prototype.set = function(key, value)\n{\n  this.attrib[key] = value;\n};\n\nElement.prototype.keys = function()\n{\n  return Object.keys(this.attrib);\n};\n\nElement.prototype.items = function()\n{\n  return utils.items(this.attrib);\n};\n\n/*\n * In python this uses a generator, but in v8 we don't have em,\n * so we use a callback instead.\n **/\nElement.prototype.iter = function(tag, callback)\n{\n  var self = this;\n  var i, child;\n\n  if (tag === \"*\") {\n    tag = null;\n  }\n\n  if (tag === null || this.tag === tag) {\n    callback(self);\n  }\n\n  for (i = 0; i < this._children.length; i++) {\n    child = this._children[i];\n    child.iter(tag, function(e) {\n      callback(e);\n    });\n  }\n};\n\nElement.prototype.itertext = function(callback)\n{\n  this.iter(null, function(e) {\n    if (e.text) {\n      callback(e.text);\n    }\n\n    if (e.tail) {\n      callback(e.tail);\n    }\n  });\n};\n\n\nfunction SubElement(parent, tag, attrib) {\n  var element = parent.makeelement(tag, attrib);\n  parent.append(element);\n  return element;\n}\n\nfunction Comment(text) {\n  var element = new Element(Comment);\n  if (text) {\n    element.text = text;\n  }\n  return element;\n}\n\nfunction CData(text) {\n  var element = new Element(CData);\n  if (text) {\n    element.text = text;\n  }\n  return element;\n}\n\nfunction ProcessingInstruction(target, text)\n{\n  var element = new Element(ProcessingInstruction);\n  element.text = target;\n  if (text) {\n    element.text = element.text + \" \" + text;\n  }\n  return element;\n}\n\nfunction QName(text_or_uri, tag)\n{\n  if (tag) {\n    text_or_uri = sprintf(\"{%s}%s\", text_or_uri, tag);\n  }\n  this.text = text_or_uri;\n}\n\nQName.prototype.toString = function() {\n  return this.text;\n};\n\nfunction ElementTree(element)\n{\n  this._root = element;\n}\n\nElementTree.prototype.getroot = function() {\n  return this._root;\n};\n\nElementTree.prototype._setroot = function(element) {\n  this._root = element;\n};\n\nElementTree.prototype.parse = function(source, parser) {\n  if (!parser) {\n    parser = get_parser(constants.DEFAULT_PARSER);\n    parser = new parser.XMLParser(new TreeBuilder());\n  }\n\n  parser.feed(source);\n  this._root = parser.close();\n  return this._root;\n};\n\nElementTree.prototype.iter = function(tag, callback) {\n  this._root.iter(tag, callback);\n};\n\nElementTree.prototype.find = function(path) {\n  return this._root.find(path);\n};\n\nElementTree.prototype.findtext = function(path, defvalue) {\n  return this._root.findtext(path, defvalue);\n};\n\nElementTree.prototype.findall = function(path) {\n  return this._root.findall(path);\n};\n\n/**\n * Unlike ElementTree, we don't write to a file, we return you a string.\n */\nElementTree.prototype.write = function(options) {\n  var sb = [];\n  options = utils.merge({\n    encoding: 'utf-8',\n    xml_declaration: null,\n    default_namespace: null,\n    method: 'xml'}, options);\n\n  if (options.xml_declaration !== false) {\n    sb.push(\"<?xml version='1.0' encoding='\"+options.encoding +\"'?>\\n\");\n  }\n\n  if (options.method === \"text\") {\n    _serialize_text(sb, self._root, encoding);\n  }\n  else {\n    var qnames, namespaces, indent, indent_string;\n    var x = _namespaces(this._root, options.encoding, options.default_namespace);\n    qnames = x[0];\n    namespaces = x[1];\n\n    if (options.hasOwnProperty('indent')) {\n      indent = 0;\n      indent_string = new Array(options.indent + 1).join(' ');\n    }\n    else {\n      indent = false;\n    }\n\n    if (options.method === \"xml\") {\n      _serialize_xml(function(data) {\n        sb.push(data);\n      }, this._root, options.encoding, qnames, namespaces, indent, indent_string);\n    }\n    else {\n      /* TODO: html */\n      throw new Error(\"unknown serialization method \"+ options.method);\n    }\n  }\n\n  return sb.join(\"\");\n};\n\nvar _namespace_map = {\n    /* \"well-known\" namespace prefixes */\n    \"http://www.w3.org/XML/1998/namespace\": \"xml\",\n    \"http://www.w3.org/1999/xhtml\": \"html\",\n    \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\": \"rdf\",\n    \"http://schemas.xmlsoap.org/wsdl/\": \"wsdl\",\n    /* xml schema */\n    \"http://www.w3.org/2001/XMLSchema\": \"xs\",\n    \"http://www.w3.org/2001/XMLSchema-instance\": \"xsi\",\n    /* dublic core */\n    \"http://purl.org/dc/elements/1.1/\": \"dc\",\n};\n\nfunction register_namespace(prefix, uri) {\n  if (/ns\\d+$/.test(prefix)) {\n    throw new Error('Prefix format reserved for internal use');\n  }\n\n  if (_namespace_map.hasOwnProperty(uri) && _namespace_map[uri] === prefix) {\n    delete _namespace_map[uri];\n  }\n\n  _namespace_map[uri] = prefix;\n}\n\n\nfunction _escape(text, encoding, isAttribute, isText) {\n  if (text) {\n    text = text.toString();\n    text = text.replace(/&/g, '&amp;');\n    text = text.replace(/</g, '&lt;');\n    text = text.replace(/>/g, '&gt;');\n    if (!isText) {\n        text = text.replace(/\\n/g, '&#xA;');\n        text = text.replace(/\\r/g, '&#xD;');\n    }\n    if (isAttribute) {\n      text = text.replace(/\"/g, '&quot;');\n    }\n  }\n  return text;\n}\n\n/* TODO: benchmark single regex */\nfunction _escape_attrib(text, encoding) {\n  return _escape(text, encoding, true);\n}\n\nfunction _escape_cdata(text, encoding) {\n  return _escape(text, encoding, false);\n}\n\nfunction _escape_text(text, encoding) {\n  return _escape(text, encoding, false, true);\n}\n\nfunction _namespaces(elem, encoding, default_namespace) {\n  var qnames = {};\n  var namespaces = {};\n\n  if (default_namespace) {\n    namespaces[default_namespace] = \"\";\n  }\n\n  function encode(text) {\n    return text;\n  }\n\n  function add_qname(qname) {\n    if (qname[0] === \"{\") {\n      var tmp = qname.substring(1).split(\"}\", 2);\n      var uri = tmp[0];\n      var tag = tmp[1];\n      var prefix = namespaces[uri];\n\n      if (prefix === undefined) {\n        prefix = _namespace_map[uri];\n        if (prefix === undefined) {\n          prefix = \"ns\" + Object.keys(namespaces).length;\n        }\n        if (prefix !== \"xml\") {\n          namespaces[uri] = prefix;\n        }\n      }\n\n      if (prefix) {\n        qnames[qname] = sprintf(\"%s:%s\", prefix, tag);\n      }\n      else {\n        qnames[qname] = tag;\n      }\n    }\n    else {\n      if (default_namespace) {\n        throw new Error('cannot use non-qualified names with default_namespace option');\n      }\n\n      qnames[qname] = qname;\n    }\n  }\n\n\n  elem.iter(null, function(e) {\n    var i;\n    var tag = e.tag;\n    var text = e.text;\n    var items = e.items();\n\n    if (tag instanceof QName && qnames[tag.text] === undefined) {\n      add_qname(tag.text);\n    }\n    else if (typeof(tag) === \"string\") {\n      add_qname(tag);\n    }\n    else if (tag !== null && tag !== Comment && tag !== CData && tag !== ProcessingInstruction) {\n      throw new Error('Invalid tag type for serialization: '+ tag);\n    }\n\n    if (text instanceof QName && qnames[text.text] === undefined) {\n      add_qname(text.text);\n    }\n\n    items.forEach(function(item) {\n      var key = item[0],\n          value = item[1];\n      if (key instanceof QName) {\n        key = key.text;\n      }\n\n      if (qnames[key] === undefined) {\n        add_qname(key);\n      }\n\n      if (value instanceof QName && qnames[value.text] === undefined) {\n        add_qname(value.text);\n      }\n    });\n  });\n  return [qnames, namespaces];\n}\n\nfunction _serialize_xml(write, elem, encoding, qnames, namespaces, indent, indent_string) {\n  var tag = elem.tag;\n  var text = elem.text;\n  var items;\n  var i;\n\n  var newlines = indent || (indent === 0);\n  write(Array(indent + 1).join(indent_string));\n\n  if (tag === Comment) {\n    write(sprintf(\"<!--%s-->\", _escape_cdata(text, encoding)));\n  }\n  else if (tag === ProcessingInstruction) {\n    write(sprintf(\"<?%s?>\", _escape_cdata(text, encoding)));\n  }\n  else if (tag === CData) {\n    text = text || '';\n    write(sprintf(\"<![CDATA[%s]]>\", text));\n  }\n  else {\n    tag = qnames[tag];\n    if (tag === undefined) {\n      if (text) {\n        write(_escape_text(text, encoding));\n      }\n      elem.iter(function(e) {\n        _serialize_xml(write, e, encoding, qnames, null, newlines ? indent + 1 : false, indent_string);\n      });\n    }\n    else {\n      write(\"<\" + tag);\n      items = elem.items();\n\n      if (items || namespaces) {\n        items.sort(); // lexical order\n\n        items.forEach(function(item) {\n          var k = item[0],\n              v = item[1];\n\n            if (k instanceof QName) {\n              k = k.text;\n            }\n\n            if (v instanceof QName) {\n              v = qnames[v.text];\n            }\n            else {\n              v = _escape_attrib(v, encoding);\n            }\n            write(sprintf(\" %s=\\\"%s\\\"\", qnames[k], v));\n        });\n\n        if (namespaces) {\n          items = utils.items(namespaces);\n          items.sort(function(a, b) { return a[1] < b[1]; });\n\n          items.forEach(function(item) {\n            var k = item[1],\n                v = item[0];\n\n            if (k) {\n              k = ':' + k;\n            }\n\n            write(sprintf(\" xmlns%s=\\\"%s\\\"\", k, _escape_attrib(v, encoding)));\n          });\n        }\n      }\n\n      if (text || elem.len()) {\n        if (text && text.toString().match(/^\\s*$/)) {\n            text = null;\n        }\n\n        write(\">\");\n        if (!text && newlines) {\n          write(\"\\n\");\n        }\n\n        if (text) {\n          write(_escape_text(text, encoding));\n        }\n        elem._children.forEach(function(e) {\n          _serialize_xml(write, e, encoding, qnames, null, newlines ? indent + 1 : false, indent_string);\n        });\n\n        if (!text && indent) {\n          write(Array(indent + 1).join(indent_string));\n        }\n        write(\"</\" + tag + \">\");\n      }\n      else {\n        write(\" />\");\n      }\n    }\n  }\n\n  if (newlines) {\n    write(\"\\n\");\n  }\n}\n\nfunction parse(source, parser) {\n  var tree = new ElementTree();\n  tree.parse(source, parser);\n  return tree;\n}\n\nfunction tostring(element, options) {\n  return new ElementTree(element).write(options);\n}\n\nexports.PI = ProcessingInstruction;\nexports.Comment = Comment;\nexports.CData = CData;\nexports.ProcessingInstruction = ProcessingInstruction;\nexports.SubElement = SubElement;\nexports.QName = QName;\nexports.ElementTree = ElementTree;\nexports.ElementPath = ElementPath;\nexports.Element = function(tag, attrib) {\n  return new Element(tag, attrib);\n};\n\nexports.XML = function(data) {\n  var et = new ElementTree();\n  return et.parse(data);\n};\n\nexports.parse = parse;\nexports.register_namespace = register_namespace;\nexports.tostring = tostring;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/elementtree/lib/sprintf.js":"/*\n *  Copyright 2011 Rackspace\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\nvar cache = {};\n\n\n// Do any others need escaping?\nvar TO_ESCAPE = {\n  '\\'': '\\\\\\'',\n  '\\n': '\\\\n'\n};\n\n\nfunction populate(formatter) {\n  var i, type,\n      key = formatter,\n      prev = 0,\n      arg = 1,\n      builder = 'return \\'';\n\n  for (i = 0; i < formatter.length; i++) {\n    if (formatter[i] === '%') {\n      type = formatter[i + 1];\n\n      switch (type) {\n        case 's':\n          builder += formatter.slice(prev, i) + '\\' + arguments[' + arg + '] + \\'';\n          prev = i + 2;\n          arg++;\n          break;\n        case 'j':\n          builder += formatter.slice(prev, i) + '\\' + JSON.stringify(arguments[' + arg + ']) + \\'';\n          prev = i + 2;\n          arg++;\n          break;\n        case '%':\n          builder += formatter.slice(prev, i + 1);\n          prev = i + 2;\n          i++;\n          break;\n      }\n\n\n    } else if (TO_ESCAPE[formatter[i]]) {\n      builder += formatter.slice(prev, i) + TO_ESCAPE[formatter[i]];\n      prev = i + 1;\n    }\n  }\n\n  builder += formatter.slice(prev) + '\\';';\n  cache[key] = new Function(builder);\n}\n\n\n/**\n * A fast version of sprintf(), which currently only supports the %s and %j.\n * This caches a formatting function for each format string that is used, so\n * you should only use this sprintf() will be called many times with a single\n * format string and a limited number of format strings will ever be used (in\n * general this means that format strings should be string literals).\n *\n * @param {String} formatter A format string.\n * @param {...String} var_args Values that will be formatted by %s and %j.\n * @return {String} The formatted output.\n */\nexports.sprintf = function(formatter, var_args) {\n  if (!cache[formatter]) {\n    populate(formatter);\n  }\n\n  return cache[formatter].apply(null, arguments);\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/elementtree/lib/utils.js":"/**\n *  Copyright 2011 Rackspace\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\n/**\n * @param {Object} hash.\n * @param {Array} ignored.\n */\nfunction items(hash, ignored) {\n  ignored = ignored || null;\n  var k, rv = [];\n\n  function is_ignored(key) {\n    if (!ignored || ignored.length === 0) {\n      return false;\n    }\n\n    return ignored.indexOf(key);\n  }\n\n  for (k in hash) {\n    if (hash.hasOwnProperty(k) && !(is_ignored(ignored))) {\n      rv.push([k, hash[k]]);\n    }\n  }\n\n  return rv;\n}\n\n\nfunction findall(re, str) {\n  var match, matches = [];\n\n  while ((match = re.exec(str))) {\n      matches.push(match);\n  }\n\n  return matches;\n}\n\nfunction merge(a, b) {\n  var c = {}, attrname;\n\n  for (attrname in a) {\n    if (a.hasOwnProperty(attrname)) {\n      c[attrname] = a[attrname];\n    }\n  }\n  for (attrname in b) {\n    if (b.hasOwnProperty(attrname)) {\n      c[attrname] = b[attrname];\n    }\n  }\n  return c;\n}\n\nexports.items = items;\nexports.findall = findall;\nexports.merge = merge;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/elementtree/lib/elementpath.js":"/**\n *  Copyright 2011 Rackspace\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\nvar sprintf = require('./sprintf').sprintf;\n\nvar utils = require('./utils');\nvar SyntaxError = require('./errors').SyntaxError;\n\nvar _cache = {};\n\nvar RE = new RegExp(\n  \"(\" +\n  \"'[^']*'|\\\"[^\\\"]*\\\"|\" +\n  \"::|\" +\n  \"//?|\" +\n  \"\\\\.\\\\.|\" +\n  \"\\\\(\\\\)|\" +\n  \"[/.*:\\\\[\\\\]\\\\(\\\\)@=])|\" +\n  \"((?:\\\\{[^}]+\\\\})?[^/\\\\[\\\\]\\\\(\\\\)@=\\\\s]+)|\" +\n  \"\\\\s+\", 'g'\n);\n\nvar xpath_tokenizer = utils.findall.bind(null, RE);\n\nfunction prepare_tag(next, token) {\n  var tag = token[0];\n\n  function select(context, result) {\n    var i, len, elem, rv = [];\n\n    for (i = 0, len = result.length; i < len; i++) {\n      elem = result[i];\n      elem._children.forEach(function(e) {\n        if (e.tag === tag) {\n          rv.push(e);\n        }\n      });\n    }\n\n    return rv;\n  }\n\n  return select;\n}\n\nfunction prepare_star(next, token) {\n  function select(context, result) {\n    var i, len, elem, rv = [];\n\n    for (i = 0, len = result.length; i < len; i++) {\n      elem = result[i];\n      elem._children.forEach(function(e) {\n        rv.push(e);\n      });\n    }\n\n    return rv;\n  }\n\n  return select;\n}\n\nfunction prepare_dot(next, token) {\n  function select(context, result) {\n    var i, len, elem, rv = [];\n\n    for (i = 0, len = result.length; i < len; i++) {\n      elem = result[i];\n      rv.push(elem);\n    }\n\n    return rv;\n  }\n\n  return select;\n}\n\nfunction prepare_iter(next, token) {\n  var tag;\n  token = next();\n\n  if (token[1] === '*') {\n    tag = '*';\n  }\n  else if (!token[1]) {\n    tag = token[0] || '';\n  }\n  else {\n    throw new SyntaxError(token);\n  }\n\n  function select(context, result) {\n    var i, len, elem, rv = [];\n\n    for (i = 0, len = result.length; i < len; i++) {\n      elem = result[i];\n      elem.iter(tag, function(e) {\n        if (e !== elem) {\n          rv.push(e);\n        }\n      });\n    }\n\n    return rv;\n  }\n\n  return select;\n}\n\nfunction prepare_dot_dot(next, token) {\n  function select(context, result) {\n    var i, len, elem, rv = [], parent_map = context.parent_map;\n\n    if (!parent_map) {\n      context.parent_map = parent_map = {};\n\n      context.root.iter(null, function(p) {\n        p._children.forEach(function(e) {\n          parent_map[e] = p;\n        });\n      });\n    }\n\n    for (i = 0, len = result.length; i < len; i++) {\n      elem = result[i];\n\n      if (parent_map.hasOwnProperty(elem)) {\n        rv.push(parent_map[elem]);\n      }\n    }\n\n    return rv;\n  }\n\n  return select;\n}\n\n\nfunction prepare_predicate(next, token) {\n  var tag, key, value, select;\n  token = next();\n\n  if (token[1] === '@') {\n    // attribute\n    token = next();\n\n    if (token[1]) {\n      throw new SyntaxError(token, 'Invalid attribute predicate');\n    }\n\n    key = token[0];\n    token = next();\n\n    if (token[1] === ']') {\n      select = function(context, result) {\n        var i, len, elem, rv = [];\n\n        for (i = 0, len = result.length; i < len; i++) {\n          elem = result[i];\n\n          if (elem.get(key)) {\n            rv.push(elem);\n          }\n        }\n\n        return rv;\n      };\n    }\n    else if (token[1] === '=') {\n      value = next()[1];\n\n      if (value[0] === '\"' || value[value.length - 1] === '\\'') {\n        value = value.slice(1, value.length - 1);\n      }\n      else {\n        throw new SyntaxError(token, 'Ivalid comparison target');\n      }\n\n      token = next();\n      select = function(context, result) {\n        var i, len, elem, rv = [];\n\n        for (i = 0, len = result.length; i < len; i++) {\n          elem = result[i];\n\n          if (elem.get(key) === value) {\n            rv.push(elem);\n          }\n        }\n\n        return rv;\n      };\n    }\n\n    if (token[1] !== ']') {\n      throw new SyntaxError(token, 'Invalid attribute predicate');\n    }\n  }\n  else if (!token[1]) {\n    tag = token[0] || '';\n    token = next();\n\n    if (token[1] !== ']') {\n      throw new SyntaxError(token, 'Invalid node predicate');\n    }\n\n    select = function(context, result) {\n      var i, len, elem, rv = [];\n\n      for (i = 0, len = result.length; i < len; i++) {\n        elem = result[i];\n\n        if (elem.find(tag)) {\n          rv.push(elem);\n        }\n      }\n\n      return rv;\n    };\n  }\n  else {\n    throw new SyntaxError(null, 'Invalid predicate');\n  }\n\n  return select;\n}\n\n\n\nvar ops = {\n  \"\": prepare_tag,\n  \"*\": prepare_star,\n  \".\": prepare_dot,\n  \"..\": prepare_dot_dot,\n  \"//\": prepare_iter,\n  \"[\": prepare_predicate,\n};\n\nfunction _SelectorContext(root) {\n  this.parent_map = null;\n  this.root = root;\n}\n\nfunction findall(elem, path) {\n  var selector, result, i, len, token, value, select, context;\n\n  if (_cache.hasOwnProperty(path)) {\n    selector = _cache[path];\n  }\n  else {\n    // TODO: Use smarter cache purging approach\n    if (Object.keys(_cache).length > 100) {\n      _cache = {};\n    }\n\n    if (path.charAt(0) === '/') {\n      throw new SyntaxError(null, 'Cannot use absolute path on element');\n    }\n\n    result = xpath_tokenizer(path);\n    selector = [];\n\n    function getToken() {\n      return result.shift();\n    }\n\n    token = getToken();\n    while (true) {\n      var c = token[1] || '';\n      value = ops[c](getToken, token);\n\n      if (!value) {\n        throw new SyntaxError(null, sprintf('Invalid path: %s', path));\n      }\n\n      selector.push(value);\n      token = getToken();\n\n      if (!token) {\n        break;\n      }\n      else if (token[1] === '/') {\n        token = getToken();\n      }\n\n      if (!token) {\n        break;\n      }\n    }\n\n    _cache[path] = selector;\n  }\n\n  // Execute slector pattern\n  result = [elem];\n  context = new _SelectorContext(elem);\n\n  for (i = 0, len = selector.length; i < len; i++) {\n    select = selector[i];\n    result = select(context, result);\n  }\n\n  return result || [];\n}\n\nfunction find(element, path) {\n  var resultElements = findall(element, path);\n\n  if (resultElements && resultElements.length > 0) {\n    return resultElements[0];\n  }\n\n  return null;\n}\n\nfunction findtext(element, path, defvalue) {\n  var resultElements = findall(element, path);\n\n  if (resultElements && resultElements.length > 0) {\n    return resultElements[0].text;\n  }\n\n  return defvalue;\n}\n\n\nexports.find = find;\nexports.findall = findall;\nexports.findtext = findtext;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/elementtree/lib/errors.js":"/**\n *  Copyright 2011 Rackspace\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\nvar util = require('util');\n\nvar sprintf = require('./sprintf').sprintf;\n\nfunction SyntaxError(token, msg) {\n  msg = msg || sprintf('Syntax Error at token %s', token.toString());\n  this.token = token;\n  this.message = msg;\n  Error.call(this, msg);\n}\n\nutil.inherits(SyntaxError, Error);\n\nexports.SyntaxError = SyntaxError;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/elementtree/lib/treebuilder.js":"function TreeBuilder(element_factory) {\n  this._data = [];\n  this._elem = [];\n  this._last = null;\n  this._tail = null;\n  if (!element_factory) {\n    /* evil circular dep */\n    element_factory = require('./elementtree').Element;\n  }\n  this._factory = element_factory;\n}\n\nTreeBuilder.prototype.close = function() {\n  return this._last;\n};\n\nTreeBuilder.prototype._flush = function() {\n  if (this._data) {\n    if (this._last !== null) {\n      var text = this._data.join(\"\");\n      if (this._tail) {\n        this._last.tail = text;\n      }\n      else {\n        this._last.text = text;\n      }\n    }\n    this._data = [];\n  }\n};\n\nTreeBuilder.prototype.data = function(data) {\n  this._data.push(data);\n};\n\nTreeBuilder.prototype.start = function(tag, attrs) {\n  this._flush();\n  var elem = this._factory(tag, attrs);\n  this._last = elem;\n\n  if (this._elem.length) {\n    this._elem[this._elem.length - 1].append(elem);\n  }\n\n  this._elem.push(elem);\n\n  this._tail = null;\n};\n\nTreeBuilder.prototype.end = function(tag) {\n  this._flush();\n  this._last = this._elem.pop();\n  if (this._last.tag !== tag) {\n    throw new Error(\"end tag mismatch\");\n  }\n  this._tail = 1;\n  return this._last;\n};\n\nexports.TreeBuilder = TreeBuilder;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/elementtree/lib/parser.js":"/*\n *  Copyright 2011 Rackspace\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\n/* TODO: support node-expat C++ module optionally */\n\nvar util = require('util');\nvar parsers = require('./parsers/index');\n\nfunction get_parser(name) {\n  if (name === 'sax') {\n    return parsers.sax;\n  }\n  else {\n    throw new Error('Invalid parser: ' + name);\n  }\n}\n\n\nexports.get_parser = get_parser;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/elementtree/lib/parsers/index.js":"exports.sax = require('./sax');\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/elementtree/lib/parsers/sax.js":"var util = require('util');\n\nvar sax = require('sax');\n\nvar TreeBuilder = require('./../treebuilder').TreeBuilder;\n\nfunction XMLParser(target) {\n  this.parser = sax.parser(true);\n\n  this.target = (target) ? target : new TreeBuilder();\n\n  this.parser.onopentag = this._handleOpenTag.bind(this);\n  this.parser.ontext = this._handleText.bind(this);\n  this.parser.oncdata = this._handleCdata.bind(this);\n  this.parser.ondoctype = this._handleDoctype.bind(this);\n  this.parser.oncomment = this._handleComment.bind(this);\n  this.parser.onclosetag = this._handleCloseTag.bind(this);\n  this.parser.onerror = this._handleError.bind(this);\n}\n\nXMLParser.prototype._handleOpenTag = function(tag) {\n  this.target.start(tag.name, tag.attributes);\n};\n\nXMLParser.prototype._handleText = function(text) {\n  this.target.data(text);\n};\n\nXMLParser.prototype._handleCdata = function(text) {\n  this.target.data(text);\n};\n\nXMLParser.prototype._handleDoctype = function(text) {\n};\n\nXMLParser.prototype._handleComment = function(comment) {\n};\n\nXMLParser.prototype._handleCloseTag = function(tag) {\n  this.target.end(tag);\n};\n\nXMLParser.prototype._handleError = function(err) {\n  throw err;\n};\n\nXMLParser.prototype.feed = function(chunk) {\n  this.parser.write(chunk);\n};\n\nXMLParser.prototype.close = function() {\n  this.parser.close();\n  return this.target.close();\n};\n\nexports.XMLParser = XMLParser;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/elementtree/node_modules/sax/lib/sax.js":"// wrapper for non-node envs\n;(function (sax) {\n\nsax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\nsax.SAXParser = SAXParser\nsax.SAXStream = SAXStream\nsax.createStream = createStream\n\n// When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n// When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n// since that's the earliest that a buffer overrun could occur.  This way, checks are\n// as rare as required, but as often as necessary to ensure never crossing this bound.\n// Furthermore, buffers are only tested at most once per write(), so passing a very\n// large string into write() might have undesirable effects, but this is manageable by\n// the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n// edge case, result in creating at most one complete copy of the string passed in.\n// Set to Infinity to have unlimited buffers.\nsax.MAX_BUFFER_LENGTH = 64 * 1024\n\nvar buffers = [\n  \"comment\", \"sgmlDecl\", \"textNode\", \"tagName\", \"doctype\",\n  \"procInstName\", \"procInstBody\", \"entity\", \"attribName\",\n  \"attribValue\", \"cdata\", \"script\"\n]\n\nsax.EVENTS = // for discoverability.\n  [ \"text\"\n  , \"processinginstruction\"\n  , \"sgmldeclaration\"\n  , \"doctype\"\n  , \"comment\"\n  , \"attribute\"\n  , \"opentag\"\n  , \"closetag\"\n  , \"opencdata\"\n  , \"cdata\"\n  , \"closecdata\"\n  , \"error\"\n  , \"end\"\n  , \"ready\"\n  , \"script\"\n  , \"opennamespace\"\n  , \"closenamespace\"\n  ]\n\nfunction SAXParser (strict, opt) {\n  if (!(this instanceof SAXParser)) return new SAXParser(strict, opt)\n\n  var parser = this\n  clearBuffers(parser)\n  parser.q = parser.c = \"\"\n  parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n  parser.opt = opt || {}\n  parser.tagCase = parser.opt.lowercasetags ? \"toLowerCase\" : \"toUpperCase\"\n  parser.tags = []\n  parser.closed = parser.closedRoot = parser.sawRoot = false\n  parser.tag = parser.error = null\n  parser.strict = !!strict\n  parser.noscript = !!(strict || parser.opt.noscript)\n  parser.state = S.BEGIN\n  parser.ENTITIES = Object.create(sax.ENTITIES)\n  parser.attribList = []\n\n  // namespaces form a prototype chain.\n  // it always points at the current tag,\n  // which protos to its parent tag.\n  if (parser.opt.xmlns) parser.ns = Object.create(rootNS)\n\n  // mostly just for error reporting\n  parser.position = parser.line = parser.column = 0\n  emit(parser, \"onready\")\n}\n\nif (!Object.create) Object.create = function (o) {\n  function f () { this.__proto__ = o }\n  f.prototype = o\n  return new f\n}\n\nif (!Object.getPrototypeOf) Object.getPrototypeOf = function (o) {\n  return o.__proto__\n}\n\nif (!Object.keys) Object.keys = function (o) {\n  var a = []\n  for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n  return a\n}\n\nfunction checkBufferLength (parser) {\n  var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    , maxActual = 0\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    var len = parser[buffers[i]].length\n    if (len > maxAllowed) {\n      // Text/cdata nodes can get big, and since they're buffered,\n      // we can get here under normal conditions.\n      // Avoid issues by emitting the text node now,\n      // so at least it won't get any bigger.\n      switch (buffers[i]) {\n        case \"textNode\":\n          closeText(parser)\n        break\n\n        case \"cdata\":\n          emitNode(parser, \"oncdata\", parser.cdata)\n          parser.cdata = \"\"\n        break\n\n        case \"script\":\n          emitNode(parser, \"onscript\", parser.script)\n          parser.script = \"\"\n        break\n\n        default:\n          error(parser, \"Max buffer length exceeded: \"+buffers[i])\n      }\n    }\n    maxActual = Math.max(maxActual, len)\n  }\n  // schedule the next check for the earliest possible buffer overrun.\n  parser.bufferCheckPosition = (sax.MAX_BUFFER_LENGTH - maxActual)\n                             + parser.position\n}\n\nfunction clearBuffers (parser) {\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    parser[buffers[i]] = \"\"\n  }\n}\n\nSAXParser.prototype =\n  { end: function () { end(this) }\n  , write: write\n  , resume: function () { this.error = null; return this }\n  , close: function () { return this.write(null) }\n  , end: function () { return this.write(null) }\n  }\n\ntry {\n  var Stream = require(\"stream\").Stream\n} catch (ex) {\n  var Stream = function () {}\n}\n\n\nvar streamWraps = sax.EVENTS.filter(function (ev) {\n  return ev !== \"error\" && ev !== \"end\"\n})\n\nfunction createStream (strict, opt) {\n  return new SAXStream(strict, opt)\n}\n\nfunction SAXStream (strict, opt) {\n  if (!(this instanceof SAXStream)) return new SAXStream(strict, opt)\n\n  Stream.apply(me)\n\n  this._parser = new SAXParser(strict, opt)\n  this.writable = true\n  this.readable = true\n\n\n  var me = this\n\n  this._parser.onend = function () {\n    me.emit(\"end\")\n  }\n\n  this._parser.onerror = function (er) {\n    me.emit(\"error\", er)\n\n    // if didn't throw, then means error was handled.\n    // go ahead and clear error, so we can write again.\n    me._parser.error = null\n  }\n\n  streamWraps.forEach(function (ev) {\n    Object.defineProperty(me, \"on\" + ev, {\n      get: function () { return me._parser[\"on\" + ev] },\n      set: function (h) {\n        if (!h) {\n          me.removeAllListeners(ev)\n          return me._parser[\"on\"+ev] = h\n        }\n        me.on(ev, h)\n      },\n      enumerable: true,\n      configurable: false\n    })\n  })\n}\n\nSAXStream.prototype = Object.create(Stream.prototype,\n  { constructor: { value: SAXStream } })\n\nSAXStream.prototype.write = function (data) {\n  this._parser.write(data.toString())\n  this.emit(\"data\", data)\n  return true\n}\n\nSAXStream.prototype.end = function (chunk) {\n  if (chunk && chunk.length) this._parser.write(chunk.toString())\n  this._parser.end()\n  return true\n}\n\nSAXStream.prototype.on = function (ev, handler) {\n  var me = this\n  if (!me._parser[\"on\"+ev] && streamWraps.indexOf(ev) !== -1) {\n    me._parser[\"on\"+ev] = function () {\n      var args = arguments.length === 1 ? [arguments[0]]\n               : Array.apply(null, arguments)\n      args.splice(0, 0, ev)\n      me.emit.apply(me, args)\n    }\n  }\n\n  return Stream.prototype.on.call(me, ev, handler)\n}\n\n\n\n// character classes and tokens\nvar whitespace = \"\\r\\n\\t \"\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  , number = \"0124356789\"\n  , letter = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  // (Letter | \"_\" | \":\")\n  , nameStart = letter+\"_:\"\n  , nameBody = nameStart+number+\"-.\"\n  , quote = \"'\\\"\"\n  , entity = number+letter+\"#\"\n  , attribEnd = whitespace + \">\"\n  , CDATA = \"[CDATA[\"\n  , DOCTYPE = \"DOCTYPE\"\n  , XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\"\n  , XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\"\n  , rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n// turn all the string character sets into character class objects.\nwhitespace = charClass(whitespace)\nnumber = charClass(number)\nletter = charClass(letter)\nnameStart = charClass(nameStart)\nnameBody = charClass(nameBody)\nquote = charClass(quote)\nentity = charClass(entity)\nattribEnd = charClass(attribEnd)\n\nfunction charClass (str) {\n  return str.split(\"\").reduce(function (s, c) {\n    s[c] = true\n    return s\n  }, {})\n}\n\nfunction is (charclass, c) {\n  return charclass[c]\n}\n\nfunction not (charclass, c) {\n  return !charclass[c]\n}\n\nvar S = 0\nsax.STATE =\n{ BEGIN                     : S++\n, TEXT                      : S++ // general stuff\n, TEXT_ENTITY               : S++ // &amp and such.\n, OPEN_WAKA                 : S++ // <\n, SGML_DECL                 : S++ // <!BLARG\n, SGML_DECL_QUOTED          : S++ // <!BLARG foo \"bar\n, DOCTYPE                   : S++ // <!DOCTYPE\n, DOCTYPE_QUOTED            : S++ // <!DOCTYPE \"//blah\n, DOCTYPE_DTD               : S++ // <!DOCTYPE \"//blah\" [ ...\n, DOCTYPE_DTD_QUOTED        : S++ // <!DOCTYPE \"//blah\" [ \"foo\n, COMMENT_STARTING          : S++ // <!-\n, COMMENT                   : S++ // <!--\n, COMMENT_ENDING            : S++ // <!-- blah -\n, COMMENT_ENDED             : S++ // <!-- blah --\n, CDATA                     : S++ // <![CDATA[ something\n, CDATA_ENDING              : S++ // ]\n, CDATA_ENDING_2            : S++ // ]]\n, PROC_INST                 : S++ // <?hi\n, PROC_INST_BODY            : S++ // <?hi there\n, PROC_INST_QUOTED          : S++ // <?hi \"there\n, PROC_INST_ENDING          : S++ // <?hi \"there\" ?\n, OPEN_TAG                  : S++ // <strong\n, OPEN_TAG_SLASH            : S++ // <strong /\n, ATTRIB                    : S++ // <a\n, ATTRIB_NAME               : S++ // <a foo\n, ATTRIB_NAME_SAW_WHITE     : S++ // <a foo _\n, ATTRIB_VALUE              : S++ // <a foo=\n, ATTRIB_VALUE_QUOTED       : S++ // <a foo=\"bar\n, ATTRIB_VALUE_UNQUOTED     : S++ // <a foo=bar\n, ATTRIB_VALUE_ENTITY_Q     : S++ // <foo bar=\"&quot;\"\n, ATTRIB_VALUE_ENTITY_U     : S++ // <foo bar=&quot;\n, CLOSE_TAG                 : S++ // </a\n, CLOSE_TAG_SAW_WHITE       : S++ // </a   >\n, SCRIPT                    : S++ // <script> ...\n, SCRIPT_ENDING             : S++ // <script> ... <\n}\n\nsax.ENTITIES =\n{ \"apos\" : \"'\"\n, \"quot\" : \"\\\"\"\n, \"amp\"  : \"&\"\n, \"gt\"   : \">\"\n, \"lt\"   : \"<\"\n}\n\nfor (var S in sax.STATE) sax.STATE[sax.STATE[S]] = S\n\n// shorthand\nS = sax.STATE\n\nfunction emit (parser, event, data) {\n  parser[event] && parser[event](data)\n}\n\nfunction emitNode (parser, nodeType, data) {\n  if (parser.textNode) closeText(parser)\n  emit(parser, nodeType, data)\n}\n\nfunction closeText (parser) {\n  parser.textNode = textopts(parser.opt, parser.textNode)\n  if (parser.textNode) emit(parser, \"ontext\", parser.textNode)\n  parser.textNode = \"\"\n}\n\nfunction textopts (opt, text) {\n  if (opt.trim) text = text.trim()\n  if (opt.normalize) text = text.replace(/\\s+/g, \" \")\n  return text\n}\n\nfunction error (parser, er) {\n  closeText(parser)\n  er += \"\\nLine: \"+parser.line+\n        \"\\nColumn: \"+parser.column+\n        \"\\nChar: \"+parser.c\n  er = new Error(er)\n  parser.error = er\n  emit(parser, \"onerror\", er)\n  return parser\n}\n\nfunction end (parser) {\n  if (parser.state !== S.TEXT) error(parser, \"Unexpected end\")\n  closeText(parser)\n  parser.c = \"\"\n  parser.closed = true\n  emit(parser, \"onend\")\n  SAXParser.call(parser, parser.strict, parser.opt)\n  return parser\n}\n\nfunction strictFail (parser, message) {\n  if (parser.strict) error(parser, message)\n}\n\nfunction newTag (parser) {\n  if (!parser.strict) parser.tagName = parser.tagName[parser.tagCase]()\n  var parent = parser.tags[parser.tags.length - 1] || parser\n    , tag = parser.tag = { name : parser.tagName, attributes : {} }\n\n  // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n  if (parser.opt.xmlns) tag.ns = parent.ns\n  parser.attribList.length = 0\n}\n\nfunction qname (name) {\n  var i = name.indexOf(\":\")\n    , qualName = i < 0 ? [ \"\", name ] : name.split(\":\")\n    , prefix = qualName[0]\n    , local = qualName[1]\n\n  // <x \"xmlns\"=\"http://foo\">\n  if (name === \"xmlns\") {\n    prefix = \"xmlns\"\n    local = \"\"\n  }\n\n  return { prefix: prefix, local: local }\n}\n\nfunction attrib (parser) {\n  if (parser.opt.xmlns) {\n    var qn = qname(parser.attribName)\n      , prefix = qn.prefix\n      , local = qn.local\n\n    if (prefix === \"xmlns\") {\n      // namespace binding attribute; push the binding into scope\n      if (local === \"xml\" && parser.attribValue !== XML_NAMESPACE) {\n        strictFail( parser\n                  , \"xml: prefix must be bound to \" + XML_NAMESPACE + \"\\n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else if (local === \"xmlns\" && parser.attribValue !== XMLNS_NAMESPACE) {\n        strictFail( parser\n                  , \"xmlns: prefix must be bound to \" + XMLNS_NAMESPACE + \"\\n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else {\n        var tag = parser.tag\n          , parent = parser.tags[parser.tags.length - 1] || parser\n        if (tag.ns === parent.ns) {\n          tag.ns = Object.create(parent.ns)\n        }\n        tag.ns[local] = parser.attribValue\n      }\n    }\n\n    // defer onattribute events until all attributes have been seen\n    // so any new bindings can take effect; preserve attribute order\n    // so deferred events can be emitted in document order\n    parser.attribList.push([parser.attribName, parser.attribValue])\n  } else {\n    // in non-xmlns mode, we can emit the event right away\n    parser.tag.attributes[parser.attribName] = parser.attribValue\n    emitNode( parser\n            , \"onattribute\"\n            , { name: parser.attribName\n              , value: parser.attribValue } )\n  }\n\n  parser.attribName = parser.attribValue = \"\"\n}\n\nfunction openTag (parser, selfClosing) {\n  if (parser.opt.xmlns) {\n    // emit namespace binding events\n    var tag = parser.tag\n\n    // add namespace info to tag\n    var qn = qname(parser.tagName)\n    tag.prefix = qn.prefix\n    tag.local = qn.local\n    tag.uri = tag.ns[qn.prefix] || qn.prefix\n\n    if (tag.prefix && !tag.uri) {\n      strictFail(parser, \"Unbound namespace prefix: \"\n                       + JSON.stringify(parser.tagName))\n    }\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (tag.ns && parent.ns !== tag.ns) {\n      Object.keys(tag.ns).forEach(function (p) {\n        emitNode( parser\n                , \"onopennamespace\"\n                , { prefix: p , uri: tag.ns[p] } )\n      })\n    }\n\n    // handle deferred onattribute events\n    for (var i = 0, l = parser.attribList.length; i < l; i ++) {\n      var nv = parser.attribList[i]\n      var name = nv[0]\n        , value = nv[1]\n        , qualName = qname(name)\n        , prefix = qualName.prefix\n        , local = qualName.local\n        , uri = tag.ns[prefix] || \"\"\n        , a = { name: name\n              , value: value\n              , prefix: prefix\n              , local: local\n              , uri: uri\n              }\n\n      // if there's any attributes with an undefined namespace,\n      // then fail on them now.\n      if (prefix && prefix != \"xmlns\" && !uri) {\n        strictFail(parser, \"Unbound namespace prefix: \"\n                         + JSON.stringify(prefix))\n        a.uri = prefix\n      }\n      parser.tag.attributes[name] = a\n      emitNode(parser, \"onattribute\", a)\n    }\n    parser.attribList.length = 0\n  }\n\n  // process the tag\n  parser.sawRoot = true\n  parser.tags.push(parser.tag)\n  emitNode(parser, \"onopentag\", parser.tag)\n  if (!selfClosing) {\n    // special case for <script> in non-strict mode.\n    if (!parser.noscript && parser.tagName.toLowerCase() === \"script\") {\n      parser.state = S.SCRIPT\n    } else {\n      parser.state = S.TEXT\n    }\n    parser.tag = null\n    parser.tagName = \"\"\n  }\n  parser.attribName = parser.attribValue = \"\"\n  parser.attribList.length = 0\n}\n\nfunction closeTag (parser) {\n  if (!parser.tagName) {\n    strictFail(parser, \"Weird empty close tag.\")\n    parser.textNode += \"</>\"\n    parser.state = S.TEXT\n    return\n  }\n  // first make sure that the closing tag actually exists.\n  // <a><b></c></b></a> will close everything, otherwise.\n  var t = parser.tags.length\n  var tagName = parser.tagName\n  if (!parser.strict) tagName = tagName[parser.tagCase]()\n  var closeTo = tagName\n  while (t --) {\n    var close = parser.tags[t]\n    if (close.name !== closeTo) {\n      // fail the first time in strict mode\n      strictFail(parser, \"Unexpected close tag\")\n    } else break\n  }\n\n  // didn't find it.  we already failed for strict, so just abort.\n  if (t < 0) {\n    strictFail(parser, \"Unmatched closing tag: \"+parser.tagName)\n    parser.textNode += \"</\" + parser.tagName + \">\"\n    parser.state = S.TEXT\n    return\n  }\n  parser.tagName = tagName\n  var s = parser.tags.length\n  while (s --> t) {\n    var tag = parser.tag = parser.tags.pop()\n    parser.tagName = parser.tag.name\n    emitNode(parser, \"onclosetag\", parser.tagName)\n\n    var x = {}\n    for (var i in tag.ns) x[i] = tag.ns[i]\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (parser.opt.xmlns && tag.ns !== parent.ns) {\n      // remove namespace bindings introduced by tag\n      Object.keys(tag.ns).forEach(function (p) {\n        var n = tag.ns[p]\n        emitNode(parser, \"onclosenamespace\", { prefix: p, uri: n })\n      })\n    }\n  }\n  if (t === 0) parser.closedRoot = true\n  parser.tagName = parser.attribValue = parser.attribName = \"\"\n  parser.attribList.length = 0\n  parser.state = S.TEXT\n}\n\nfunction parseEntity (parser) {\n  var entity = parser.entity.toLowerCase()\n    , num\n    , numStr = \"\"\n  if (parser.ENTITIES[entity]) return parser.ENTITIES[entity]\n  if (entity.charAt(0) === \"#\") {\n    if (entity.charAt(1) === \"x\") {\n      entity = entity.slice(2)\n      num = parseInt(entity, 16)\n      numStr = num.toString(16)\n    } else {\n      entity = entity.slice(1)\n      num = parseInt(entity, 10)\n      numStr = num.toString(10)\n    }\n  }\n  entity = entity.replace(/^0+/, \"\")\n  if (numStr.toLowerCase() !== entity) {\n    strictFail(parser, \"Invalid character entity\")\n    return \"&\"+parser.entity + \";\"\n  }\n  return String.fromCharCode(num)\n}\n\nfunction write (chunk) {\n  var parser = this\n  if (this.error) throw this.error\n  if (parser.closed) return error(parser,\n    \"Cannot write after close. Assign an onready handler.\")\n  if (chunk === null) return end(parser)\n  var i = 0, c = \"\"\n  while (parser.c = c = chunk.charAt(i++)) {\n    parser.position ++\n    if (c === \"\\n\") {\n      parser.line ++\n      parser.column = 0\n    } else parser.column ++\n    switch (parser.state) {\n\n      case S.BEGIN:\n        if (c === \"<\") parser.state = S.OPEN_WAKA\n        else if (not(whitespace,c)) {\n          // have to process this as a text node.\n          // weird, but happens.\n          strictFail(parser, \"Non-whitespace before first tag.\")\n          parser.textNode = c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.TEXT:\n        if (parser.sawRoot && !parser.closedRoot) {\n          var starti = i-1\n          while (c && c!==\"<\" && c!==\"&\") {\n            c = chunk.charAt(i++)\n            if (c) {\n              parser.position ++\n              if (c === \"\\n\") {\n                parser.line ++\n                parser.column = 0\n              } else parser.column ++\n            }\n          }\n          parser.textNode += chunk.substring(starti, i-1)\n        }\n        if (c === \"<\") parser.state = S.OPEN_WAKA\n        else {\n          if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot))\n            strictFail(\"Text data outside of root node.\")\n          if (c === \"&\") parser.state = S.TEXT_ENTITY\n          else parser.textNode += c\n        }\n      continue\n\n      case S.SCRIPT:\n        // only non-strict\n        if (c === \"<\") {\n          parser.state = S.SCRIPT_ENDING\n        } else parser.script += c\n      continue\n\n      case S.SCRIPT_ENDING:\n        if (c === \"/\") {\n          emitNode(parser, \"onscript\", parser.script)\n          parser.state = S.CLOSE_TAG\n          parser.script = \"\"\n          parser.tagName = \"\"\n        } else {\n          parser.script += \"<\" + c\n          parser.state = S.SCRIPT\n        }\n      continue\n\n      case S.OPEN_WAKA:\n        // either a /, ?, !, or text is coming next.\n        if (c === \"!\") {\n          parser.state = S.SGML_DECL\n          parser.sgmlDecl = \"\"\n        } else if (is(whitespace, c)) {\n          // wait for it...\n        } else if (is(nameStart,c)) {\n          parser.startTagPosition = parser.position - 1\n          parser.state = S.OPEN_TAG\n          parser.tagName = c\n        } else if (c === \"/\") {\n          parser.startTagPosition = parser.position - 1\n          parser.state = S.CLOSE_TAG\n          parser.tagName = \"\"\n        } else if (c === \"?\") {\n          parser.state = S.PROC_INST\n          parser.procInstName = parser.procInstBody = \"\"\n        } else {\n          strictFail(parser, \"Unencoded <\")\n          parser.textNode += \"<\" + c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.SGML_DECL:\n        if ((parser.sgmlDecl+c).toUpperCase() === CDATA) {\n          emitNode(parser, \"onopencdata\")\n          parser.state = S.CDATA\n          parser.sgmlDecl = \"\"\n          parser.cdata = \"\"\n        } else if (parser.sgmlDecl+c === \"--\") {\n          parser.state = S.COMMENT\n          parser.comment = \"\"\n          parser.sgmlDecl = \"\"\n        } else if ((parser.sgmlDecl+c).toUpperCase() === DOCTYPE) {\n          parser.state = S.DOCTYPE\n          if (parser.doctype || parser.sawRoot) strictFail(parser,\n            \"Inappropriately located doctype declaration\")\n          parser.doctype = \"\"\n          parser.sgmlDecl = \"\"\n        } else if (c === \">\") {\n          emitNode(parser, \"onsgmldeclaration\", parser.sgmlDecl)\n          parser.sgmlDecl = \"\"\n          parser.state = S.TEXT\n        } else if (is(quote, c)) {\n          parser.state = S.SGML_DECL_QUOTED\n          parser.sgmlDecl += c\n        } else parser.sgmlDecl += c\n      continue\n\n      case S.SGML_DECL_QUOTED:\n        if (c === parser.q) {\n          parser.state = S.SGML_DECL\n          parser.q = \"\"\n        }\n        parser.sgmlDecl += c\n      continue\n\n      case S.DOCTYPE:\n        if (c === \">\") {\n          parser.state = S.TEXT\n          emitNode(parser, \"ondoctype\", parser.doctype)\n          parser.doctype = true // just remember that we saw it.\n        } else {\n          parser.doctype += c\n          if (c === \"[\") parser.state = S.DOCTYPE_DTD\n          else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_QUOTED\n            parser.q = c\n          }\n        }\n      continue\n\n      case S.DOCTYPE_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.q = \"\"\n          parser.state = S.DOCTYPE\n        }\n      continue\n\n      case S.DOCTYPE_DTD:\n        parser.doctype += c\n        if (c === \"]\") parser.state = S.DOCTYPE\n        else if (is(quote,c)) {\n          parser.state = S.DOCTYPE_DTD_QUOTED\n          parser.q = c\n        }\n      continue\n\n      case S.DOCTYPE_DTD_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.state = S.DOCTYPE_DTD\n          parser.q = \"\"\n        }\n      continue\n\n      case S.COMMENT:\n        if (c === \"-\") parser.state = S.COMMENT_ENDING\n        else parser.comment += c\n      continue\n\n      case S.COMMENT_ENDING:\n        if (c === \"-\") {\n          parser.state = S.COMMENT_ENDED\n          parser.comment = textopts(parser.opt, parser.comment)\n          if (parser.comment) emitNode(parser, \"oncomment\", parser.comment)\n          parser.comment = \"\"\n        } else {\n          parser.comment += \"-\" + c\n          parser.state = S.COMMENT\n        }\n      continue\n\n      case S.COMMENT_ENDED:\n        if (c !== \">\") {\n          strictFail(parser, \"Malformed comment\")\n          // allow <!-- blah -- bloo --> in non-strict mode,\n          // which is a comment of \" blah -- bloo \"\n          parser.comment += \"--\" + c\n          parser.state = S.COMMENT\n        } else parser.state = S.TEXT\n      continue\n\n      case S.CDATA:\n        if (c === \"]\") parser.state = S.CDATA_ENDING\n        else parser.cdata += c\n      continue\n\n      case S.CDATA_ENDING:\n        if (c === \"]\") parser.state = S.CDATA_ENDING_2\n        else {\n          parser.cdata += \"]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.CDATA_ENDING_2:\n        if (c === \">\") {\n          if (parser.cdata) emitNode(parser, \"oncdata\", parser.cdata)\n          emitNode(parser, \"onclosecdata\")\n          parser.cdata = \"\"\n          parser.state = S.TEXT\n        } else if (c === \"]\") {\n          parser.cdata += \"]\"\n        } else {\n          parser.cdata += \"]]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.PROC_INST:\n        if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else if (is(whitespace, c)) parser.state = S.PROC_INST_BODY\n        else parser.procInstName += c\n      continue\n\n      case S.PROC_INST_BODY:\n        if (!parser.procInstBody && is(whitespace, c)) continue\n        else if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else if (is(quote, c)) {\n          parser.state = S.PROC_INST_QUOTED\n          parser.q = c\n          parser.procInstBody += c\n        } else parser.procInstBody += c\n      continue\n\n      case S.PROC_INST_ENDING:\n        if (c === \">\") {\n          emitNode(parser, \"onprocessinginstruction\", {\n            name : parser.procInstName,\n            body : parser.procInstBody\n          })\n          parser.procInstName = parser.procInstBody = \"\"\n          parser.state = S.TEXT\n        } else {\n          parser.procInstBody += \"?\" + c\n          parser.state = S.PROC_INST_BODY\n        }\n      continue\n\n      case S.PROC_INST_QUOTED:\n        parser.procInstBody += c\n        if (c === parser.q) {\n          parser.state = S.PROC_INST_BODY\n          parser.q = \"\"\n        }\n      continue\n\n      case S.OPEN_TAG:\n        if (is(nameBody, c)) parser.tagName += c\n        else {\n          newTag(parser)\n          if (c === \">\") openTag(parser)\n          else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n          else {\n            if (not(whitespace, c)) strictFail(\n              parser, \"Invalid character in tag name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.OPEN_TAG_SLASH:\n        if (c === \">\") {\n          openTag(parser, true)\n          closeTag(parser)\n        } else {\n          strictFail(parser, \"Forward-slash in opening tag not followed by >\")\n          parser.state = S.ATTRIB\n        }\n      continue\n\n      case S.ATTRIB:\n        // haven't read the attribute name yet.\n        if (is(whitespace, c)) continue\n        else if (c === \">\") openTag(parser)\n        else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n        else if (is(nameStart, c)) {\n          parser.attribName = c\n          parser.attribValue = \"\"\n          parser.state = S.ATTRIB_NAME\n        } else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (is(whitespace, c)) parser.state = S.ATTRIB_NAME_SAW_WHITE\n        else if (is(nameBody, c)) parser.attribName += c\n        else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME_SAW_WHITE:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (is(whitespace, c)) continue\n        else {\n          strictFail(parser, \"Attribute without value\")\n          parser.tag.attributes[parser.attribName] = \"\"\n          parser.attribValue = \"\"\n          emitNode(parser, \"onattribute\",\n                   { name : parser.attribName, value : \"\" })\n          parser.attribName = \"\"\n          if (c === \">\") openTag(parser)\n          else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, \"Invalid attribute name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.ATTRIB_VALUE:\n        if (is(whitespace, c)) continue\n        else if (is(quote, c)) {\n          parser.q = c\n          parser.state = S.ATTRIB_VALUE_QUOTED\n        } else {\n          strictFail(parser, \"Unquoted attribute value\")\n          parser.state = S.ATTRIB_VALUE_UNQUOTED\n          parser.attribValue = c\n        }\n      continue\n\n      case S.ATTRIB_VALUE_QUOTED:\n        if (c !== parser.q) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_Q\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        parser.q = \"\"\n        parser.state = S.ATTRIB\n      continue\n\n      case S.ATTRIB_VALUE_UNQUOTED:\n        if (not(attribEnd,c)) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_U\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        if (c === \">\") openTag(parser)\n        else parser.state = S.ATTRIB\n      continue\n\n      case S.CLOSE_TAG:\n        if (!parser.tagName) {\n          if (is(whitespace, c)) continue\n          else if (not(nameStart, c)) strictFail(parser,\n            \"Invalid tagname in closing tag.\")\n          else parser.tagName = c\n        }\n        else if (c === \">\") closeTag(parser)\n        else if (is(nameBody, c)) parser.tagName += c\n        else {\n          if (not(whitespace, c)) strictFail(parser,\n            \"Invalid tagname in closing tag\")\n          parser.state = S.CLOSE_TAG_SAW_WHITE\n        }\n      continue\n\n      case S.CLOSE_TAG_SAW_WHITE:\n        if (is(whitespace, c)) continue\n        if (c === \">\") closeTag(parser)\n        else strictFail(\"Invalid characters in closing tag\")\n      continue\n\n      case S.TEXT_ENTITY:\n      case S.ATTRIB_VALUE_ENTITY_Q:\n      case S.ATTRIB_VALUE_ENTITY_U:\n        switch(parser.state) {\n          case S.TEXT_ENTITY:\n            var returnState = S.TEXT, buffer = \"textNode\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_Q:\n            var returnState = S.ATTRIB_VALUE_QUOTED, buffer = \"attribValue\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_U:\n            var returnState = S.ATTRIB_VALUE_UNQUOTED, buffer = \"attribValue\"\n          break\n        }\n        if (c === \";\") {\n          parser[buffer] += parseEntity(parser)\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n        else if (is(entity, c)) parser.entity += c\n        else {\n          strictFail(\"Invalid character entity\")\n          parser[buffer] += \"&\" + parser.entity + c\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n      continue\n\n      default:\n        throw new Error(parser, \"Unknown state: \" + parser.state)\n    }\n  } // while\n  // cdata blocks can get very big under normal conditions. emit and move on.\n  // if (parser.state === S.CDATA && parser.cdata) {\n  //   emitNode(parser, \"oncdata\", parser.cdata)\n  //   parser.cdata = \"\"\n  // }\n  if (parser.position >= parser.bufferCheckPosition) checkBufferLength(parser)\n  return parser\n}\n\n})(typeof exports === \"undefined\" ? sax = {} : exports)\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/elementtree/lib/constants.js":"/*\n *  Copyright 2011 Rackspace\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\nvar DEFAULT_PARSER = 'sax';\n\nexports.DEFAULT_PARSER = DEFAULT_PARSER;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/util/xml-helpers.js":"/*\n *\n * Copyright 2013 Anis Kadri\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n\n/* jshint sub:true, laxcomma:true */\n\n/**\n * contains XML utility functions, some of which are specific to elementtree\n */\n\nvar fs = require('fs')\n  , path = require('path')\n  , _ = require('underscore')\n  , et = require('elementtree')\n  ;\n\nmodule.exports = {\n    // compare two et.XML nodes, see if they match\n    // compares tagName, text, attributes and children (recursively)\n    equalNodes: function(one, two) {\n        if (one.tag != two.tag) {\n            return false;\n        } else if (one.text.trim() != two.text.trim()) {\n            return false;\n        } else if (one._children.length != two._children.length) {\n            return false;\n        }\n\n        var oneAttribKeys = Object.keys(one.attrib),\n            twoAttribKeys = Object.keys(two.attrib),\n            i = 0, attribName;\n\n        if (oneAttribKeys.length != twoAttribKeys.length) {\n            return false;\n        }\n\n        for (i; i < oneAttribKeys.length; i++) {\n            attribName = oneAttribKeys[i];\n\n            if (one.attrib[attribName] != two.attrib[attribName]) {\n                return false;\n            }\n        }\n\n        for (i; i < one._children.length; i++) {\n            if (!module.exports.equalNodes(one._children[i], two._children[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    // adds node to doc at selector, creating parent if it doesn't exist\n    graftXML: function(doc, nodes, selector, after) {\n        var parent = resolveParent(doc, selector);\n        if (!parent) {\n            //Try to create the parent recursively if necessary\n            try {\n                var parentToCreate = et.XML('<' + path.basename(selector) + '>'),\n                    parentSelector = path.dirname(selector);\n\n                this.graftXML(doc, [parentToCreate], parentSelector);\n            } catch (e) {\n                return false;\n            }\n            parent = resolveParent(doc, selector);\n            if (!parent) return false;\n        }\n\n        nodes.forEach(function (node) {\n            // check if child is unique first\n            if (uniqueChild(node, parent)) {\n                var children = parent.getchildren();\n                var insertIdx = after ? findInsertIdx(children, after) : children.length;\n\n                //TODO: replace with parent.insert after the bug in ElementTree is fixed\n                parent.getchildren().splice(insertIdx, 0, node);\n            }\n        });\n\n        return true;\n    },\n\n    // removes node from doc at selector\n    pruneXML: function(doc, nodes, selector) {\n        var parent = resolveParent(doc, selector);\n        if (!parent) return false;\n\n        nodes.forEach(function (node) {\n            var matchingKid = null;\n            if ((matchingKid = findChild(node, parent)) !== null) {\n                // stupid elementtree takes an index argument it doesn't use\n                // and does not conform to the python lib\n                parent.remove(matchingKid);\n            }\n        });\n\n        return true;\n    },\n\n    parseElementtreeSync: function (filename) {\n        var contents = fs.readFileSync(filename, 'utf-8');\n        if(contents) {\n            //Windows is the BOM. Skip the Byte Order Mark.\n            contents = contents.substring(contents.indexOf('<'));\n        }\n        return new et.ElementTree(et.XML(contents));\n    }\n};\n\nfunction findChild(node, parent) {\n    var matchingKids = parent.findall(node.tag)\n      , i, j;\n\n    for (i = 0, j = matchingKids.length ; i < j ; i++) {\n        if (module.exports.equalNodes(node, matchingKids[i])) {\n            return matchingKids[i];\n        }\n    }\n    return null;\n}\n\nfunction uniqueChild(node, parent) {\n    var matchingKids = parent.findall(node.tag)\n      , i = 0;\n\n    if (matchingKids.length === 0) {\n        return true;\n    } else  {\n        for (i; i < matchingKids.length; i++) {\n            if (module.exports.equalNodes(node, matchingKids[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nvar ROOT = /^\\/([^\\/]*)/,\n    ABSOLUTE = /^\\/([^\\/]*)\\/(.*)/;\n\nfunction resolveParent(doc, selector) {\n    var parent, tagName, subSelector;\n\n    // handle absolute selector (which elementtree doesn't like)\n    if (ROOT.test(selector)) {\n        tagName = selector.match(ROOT)[1];\n        // test for wildcard \"any-tag\" root selector\n        if (tagName == '*' || tagName === doc._root.tag) {\n            parent = doc._root;\n\n            // could be an absolute path, but not selecting the root\n            if (ABSOLUTE.test(selector)) {\n                subSelector = selector.match(ABSOLUTE)[2];\n                parent = parent.find(subSelector);\n            }\n        } else {\n            return false;\n        }\n    } else {\n        parent = doc.find(selector);\n    }\n    return parent;\n}\n\n// Find the index at which to insert an entry. After is a ;-separated priority list\n// of tags after which the insertion should be made. E.g. If we need to\n// insert an element C, and the rule is that the order of children has to be\n// As, Bs, Cs. After will be equal to \"C;B;A\".\nfunction findInsertIdx(children, after) {\n    var childrenTags = children.map(function(child) { return child.tag; });\n    var afters = after.split(';');\n    var afterIndexes = afters.map(function(current) { return childrenTags.lastIndexOf(current); });\n    var foundIndex = _.find(afterIndexes, function(index) { return index != -1; });\n\n    //add to the beginning if no matching nodes are found\n    return typeof foundIndex === 'undefined' ? 0 : foundIndex+1;\n}\n\nvar BLACKLIST = ['platform', 'feature','plugin','engine'];\nvar SINGLETONS = ['content', 'author'];\nfunction mergeXml(src, dest, platform, clobber) {\n    // Do nothing for blacklisted tags.\n    if (BLACKLIST.indexOf(src.tag) != -1) return;\n\n    //Handle attributes\n    Object.getOwnPropertyNames(src.attrib).forEach(function (attribute) {\n        if (clobber || !dest.attrib[attribute]) {\n            dest.attrib[attribute] = src.attrib[attribute];\n        }\n    });\n    //Handle text\n    if (src.text && (clobber || !dest.text)) {\n        dest.text = src.text;\n    }\n    //Handle platform\n    if (platform) {\n        src.findall('platform[@name=\"' + platform + '\"]').forEach(function (platformElement) {\n            platformElement.getchildren().forEach(mergeChild);\n        });\n    }\n\n    //Handle children\n    src.getchildren().forEach(mergeChild);\n\n    function mergeChild (srcChild) {\n        var srcTag = srcChild.tag,\n            destChild = new et.Element(srcTag),\n            foundChild,\n            query = srcTag + '',\n            shouldMerge = true;\n\n        if (BLACKLIST.indexOf(srcTag) === -1) {\n            if (SINGLETONS.indexOf(srcTag) !== -1) {\n                foundChild = dest.find(query);\n                if (foundChild) {\n                    destChild = foundChild;\n                    dest.remove(destChild);\n                }\n            } else {\n                //Check for an exact match and if you find one don't add\n                Object.getOwnPropertyNames(srcChild.attrib).forEach(function (attribute) {\n                    query += '[@' + attribute + '=\"' + srcChild.attrib[attribute] + '\"]';\n                });\n                var foundChildren = dest.findall(query);\n                for(var i = 0; i < foundChildren.length; i++) {\n                    foundChild = foundChildren[i];\n                    if (foundChild && textMatch(srcChild, foundChild) && (Object.keys(srcChild.attrib).length==Object.keys(foundChild.attrib).length)) {\n                        destChild = foundChild;\n                        dest.remove(destChild);\n                        shouldMerge = false;\n                        break;\n                    }\n                }\n            }\n\n            mergeXml(srcChild, destChild, platform, clobber && shouldMerge);\n            dest.append(destChild);\n        }\n    }\n}\n\n// Expose for testing.\nmodule.exports.mergeXml = mergeXml;\n\nfunction textMatch(elm1, elm2) {\n    var text1 = elm1.text ? elm1.text.replace(/\\s+/, '') : '',\n        text2 = elm2.text ? elm2.text.replace(/\\s+/, '') : '';\n    return (text1 === '' || text1 === text2);\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/PluginInfo/PluginInfo.js":"/**\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n*/\n\n/* jshint sub:true, laxcomma:true, laxbreak:true */\n\n/*\nA class for holidng the information currently stored in plugin.xml\nIt should also be able to answer questions like whether the plugin\nis compatible with a given engine version.\n\nTODO (kamrik): refactor this to not use sync functions and return promises.\n*/\n\n\nvar path = require('path')\n  , fs = require('fs')\n  , xml_helpers = require('../util/xml-helpers')\n  , CordovaError = require('../CordovaError/CordovaError')\n  ;\n\nfunction PluginInfo(dirname) {\n    var self = this;\n\n    // METHODS\n    // Defined inside the constructor to avoid the \"this\" binding problems.\n\n    // <preference> tag\n    // Example: <preference name=\"API_KEY\" />\n    // Used to require a variable to be specified via --variable when installing the plugin.\n    self.getPreferences = getPreferences;\n    function getPreferences(platform) {\n        var arprefs = _getTags(self._et, 'preference', platform, _parsePreference);\n\n        var prefs= {};\n        for(var i in arprefs)\n        {\n            var pref=arprefs[i];\n            prefs[pref.preference]=pref.default;\n        }\n        // returns { key : default | null}\n        return prefs;\n    }\n\n    function _parsePreference(prefTag) {\n        var name = prefTag.attrib.name.toUpperCase();\n        var def = prefTag.attrib.default || null;\n        return {preference: name, default: def};\n    }\n\n    // <asset>\n    self.getAssets = getAssets;\n    function getAssets(platform) {\n        var assets = _getTags(self._et, 'asset', platform, _parseAsset);\n        return assets;\n    }\n\n    function _parseAsset(tag) {\n        var src = tag.attrib.src;\n        var target = tag.attrib.target;\n\n        if ( !src || !target) {\n            var msg =\n                'Malformed <asset> tag. Both \"src\" and \"target\" attributes'\n                + 'must be specified in\\n'\n                + self.filepath\n                ;\n            throw new Error(msg);\n        }\n\n        var asset = {\n            itemType: 'asset',\n            src: src,\n            target: target\n        };\n        return asset;\n    }\n\n\n    // <dependency>\n    // Example:\n    // <dependency id=\"com.plugin.id\"\n    //     url=\"https://github.com/myuser/someplugin\"\n    //     commit=\"428931ada3891801\"\n    //     subdir=\"some/path/here\" />\n    self.getDependencies = getDependencies;\n    function getDependencies(platform) {\n        var deps = _getTags(\n                self._et,\n                'dependency',\n                platform,\n                _parseDependency\n        );\n        return deps;\n    }\n\n    function _parseDependency(tag) {\n        var dep =\n            { id : tag.attrib.id\n            , url : tag.attrib.url || ''\n            , subdir : tag.attrib.subdir || ''\n            , commit : tag.attrib.commit\n            };\n\n        dep.git_ref = dep.commit;\n\n        if ( !dep.id ) {\n            var msg =\n                '<dependency> tag is missing id attribute in '\n                + self.filepath\n                ;\n            throw new CordovaError(msg);\n        }\n        return dep;\n    }\n\n\n    // <config-file> tag\n    self.getConfigFiles = getConfigFiles;\n    function getConfigFiles(platform) {\n        var configFiles = _getTags(self._et, 'config-file', platform, _parseConfigFile);\n        return configFiles;\n    }\n\n    function _parseConfigFile(tag) {\n        var configFile =\n            { target : tag.attrib['target']\n            , parent : tag.attrib['parent']\n            , after : tag.attrib['after']\n            , xmls : tag.getchildren()\n            // To support demuxing via versions\n            , versions : tag.attrib['versions']\n            , deviceTarget: tag.attrib['device-target']\n            };\n        return configFile;\n    }\n\n    // <info> tags, both global and within a <platform>\n    // TODO (kamrik): Do we ever use <info> under <platform>? Example wanted.\n    self.getInfo = getInfo;\n    function getInfo(platform) {\n        var infos = _getTags(\n                self._et,\n                'info',\n                platform,\n                function(elem) { return elem.text; }\n        );\n        // Filter out any undefined or empty strings.\n        infos = infos.filter(Boolean);\n        return infos;\n    }\n\n    // <source-file>\n    // Examples:\n    // <source-file src=\"src/ios/someLib.a\" framework=\"true\" />\n    // <source-file src=\"src/ios/someLib.a\" compiler-flags=\"-fno-objc-arc\" />\n    self.getSourceFiles = getSourceFiles;\n    function getSourceFiles(platform) {\n        var sourceFiles = _getTagsInPlatform(self._et, 'source-file', platform, _parseSourceFile);\n        return sourceFiles;\n    }\n\n    function _parseSourceFile(tag) {\n        return {\n            itemType: 'source-file',\n            src: tag.attrib.src,\n            framework: isStrTrue(tag.attrib.framework),\n            weak: isStrTrue(tag.attrib.weak),\n            compilerFlags: tag.attrib['compiler-flags'],\n            targetDir: tag.attrib['target-dir']\n        };\n    }\n\n    // <header-file>\n    // Example:\n    // <header-file src=\"CDVFoo.h\" />\n    self.getHeaderFiles = getHeaderFiles;\n    function getHeaderFiles(platform) {\n        var headerFiles = _getTagsInPlatform(self._et, 'header-file', platform, function(tag) {\n            return {\n                itemType: 'header-file',\n                src: tag.attrib.src,\n                targetDir: tag.attrib['target-dir']\n            };\n        });\n        return headerFiles;\n    }\n\n    // <resource-file>\n    // Example:\n    // <resource-file src=\"FooPluginStrings.xml\" target=\"res/values/FooPluginStrings.xml\" device-target=\"win\" arch=\"x86\" versions=\"&gt;=8.1\" />\n    self.getResourceFiles = getResourceFiles;\n    function getResourceFiles(platform) {\n        var resourceFiles = _getTagsInPlatform(self._et, 'resource-file', platform, function(tag) {\n            return {\n                itemType: 'resource-file',\n                src: tag.attrib.src,\n                target: tag.attrib.target,\n                versions: tag.attrib.versions,\n                deviceTarget: tag.attrib['device-target'],\n                arch: tag.attrib.arch\n            };\n        });\n        return resourceFiles;\n    }\n\n    // <lib-file>\n    // Example:\n    // <lib-file src=\"src/BlackBerry10/native/device/libfoo.so\" arch=\"device\" />\n    self.getLibFiles = getLibFiles;\n    function getLibFiles(platform) {\n        var libFiles = _getTagsInPlatform(self._et, 'lib-file', platform, function(tag) {\n            return {\n                itemType: 'lib-file',\n                src: tag.attrib.src,\n                arch: tag.attrib.arch,\n                Include: tag.attrib.Include,\n                versions: tag.attrib.versions,\n                deviceTarget: tag.attrib['device-target'] || tag.attrib.target\n            };\n        });\n        return libFiles;\n    }\n\n    // <hook>\n    // Example:\n    // <hook type=\"before_build\" src=\"scripts/beforeBuild.js\" />\n    self.getHookScripts = getHookScripts;\n    function getHookScripts(hook, platforms) {\n        var scriptElements =  self._et.findall('./hook');\n\n        if(platforms) {\n            platforms.forEach(function (platform) {\n                scriptElements = scriptElements.concat(self._et.findall('./platform[@name=\"' + platform + '\"]/hook'));\n            });\n        }\n\n        function filterScriptByHookType(el) {\n            return el.attrib.src && el.attrib.type && el.attrib.type.toLowerCase() === hook;\n        }\n\n        return scriptElements.filter(filterScriptByHookType);\n    }\n\n    self.getJsModules = getJsModules;\n    function getJsModules(platform) {\n        var modules = _getTags(self._et, 'js-module', platform, _parseJsModule);\n        return modules;\n    }\n\n    function _parseJsModule(tag) {\n        var ret = {\n            itemType: 'js-module',\n            name: tag.attrib.name,\n            src: tag.attrib.src,\n            clobbers: tag.findall('clobbers').map(function(tag) { return { target: tag.attrib.target }; }),\n            merges: tag.findall('merges').map(function(tag) { return { target: tag.attrib.target }; }),\n            runs: tag.findall('runs').length > 0\n        };\n\n        return ret;\n    }\n\n    self.getEngines = function() {\n        return self._et.findall('engines/engine').map(function(n) {\n            return {\n                name: n.attrib.name,\n                version: n.attrib.version,\n                platform: n.attrib.platform,\n                scriptSrc: n.attrib.scriptSrc\n            };\n        });\n    };\n\n    self.getPlatforms = function() {\n        return self._et.findall('platform').map(function(n) {\n            return { name: n.attrib.name };\n        });\n    };\n\n    self.getPlatformsArray = function() {\n        return self._et.findall('platform').map(function(n) {\n            return n.attrib.name;\n        });\n    };\n    self.getFrameworks = function(platform) {\n        return _getTags(self._et, 'framework', platform, function(el) {\n            var ret = {\n                itemType: 'framework',\n                type: el.attrib.type,\n                parent: el.attrib.parent,\n                custom: isStrTrue(el.attrib.custom),\n                src: el.attrib.src,\n                weak: isStrTrue(el.attrib.weak),\n                versions: el.attrib.versions,\n                targetDir: el.attrib['target-dir'],\n                deviceTarget: el.attrib['device-target'] || el.attrib.target,\n                arch: el.attrib.arch\n            };\n            return ret;\n        });\n    };\n\n    self.getFilesAndFrameworks = getFilesAndFrameworks;\n    function getFilesAndFrameworks(platform) {\n        // Please avoid changing the order of the calls below, files will be\n        // installed in this order.\n        var items = [].concat(\n            self.getSourceFiles(platform),\n            self.getHeaderFiles(platform),\n            self.getResourceFiles(platform),\n            self.getFrameworks(platform),\n            self.getLibFiles(platform)\n        );\n        return items;\n    }\n    ///// End of PluginInfo methods /////\n\n\n    ///// PluginInfo Constructor logic  /////\n    self.filepath = path.join(dirname, 'plugin.xml');\n    if (!fs.existsSync(self.filepath)) {\n        throw new CordovaError('Cannot find plugin.xml for plugin \\'' + path.basename(dirname) + '\\'. Please try adding it again.');\n    }\n\n    self.dir = dirname;\n    var et = self._et = xml_helpers.parseElementtreeSync(self.filepath);\n    var pelem = et.getroot();\n    self.id = pelem.attrib.id;\n    self.version = pelem.attrib.version;\n\n    // Optional fields\n    self.name = pelem.findtext('name');\n    self.description = pelem.findtext('description');\n    self.license = pelem.findtext('license');\n    self.repo = pelem.findtext('repo');\n    self.issue = pelem.findtext('issue');\n    self.keywords = pelem.findtext('keywords');\n    self.info = pelem.findtext('info');\n    if (self.keywords) {\n        self.keywords = self.keywords.split(',').map( function(s) { return s.trim(); } );\n    }\n    self.getKeywordsAndPlatforms = function () {\n        var ret = self.keywords || [];\n        return ret.concat('ecosystem:cordova').concat(addCordova(self.getPlatformsArray()));\n    };\n}  // End of PluginInfo constructor.\n\n// Helper function used to prefix every element of an array with cordova-\n// Useful when we want to modify platforms to be cordova-platform\nfunction addCordova(someArray) {\n    var newArray = someArray.map(function(element) {\n        return 'cordova-' + element;\n    });\n    return newArray;\n}\n\n// Helper function used by most of the getSomething methods of PluginInfo.\n// Get all elements of a given name. Both in root and in platform sections\n// for the given platform. If transform is given and is a function, it is\n// applied to each element.\nfunction _getTags(pelem, tag, platform, transform) {\n    var platformTag = pelem.find('./platform[@name=\"' + platform + '\"]');\n    if (platform == 'windows' && !platformTag) {\n        platformTag = pelem.find('platform[@name=\"' + 'windows8' + '\"]');\n    }\n    var tagsInRoot = pelem.findall(tag);\n    tagsInRoot = tagsInRoot || [];\n    var tagsInPlatform = platformTag ? platformTag.findall(tag) : [];\n    var tags = tagsInRoot.concat(tagsInPlatform);\n    if ( typeof transform === 'function' ) {\n        tags = tags.map(transform);\n    }\n    return tags;\n}\n\n// Same as _getTags() but only looks inside a platfrom section.\nfunction _getTagsInPlatform(pelem, tag, platform, transform) {\n    var platformTag = pelem.find('./platform[@name=\"' + platform + '\"]');\n    if (platform == 'windows' && !platformTag) {\n        platformTag = pelem.find('platform[@name=\"' + 'windows8' + '\"]');\n    }\n    var tags = platformTag ? platformTag.findall(tag) : [];\n    if ( typeof transform === 'function' ) {\n        tags = tags.map(transform);\n    }\n    return tags;\n}\n\n// Check if x is a string 'true'.\nfunction isStrTrue(x) {\n    return String(x).toLowerCase() == 'true';\n}\n\nmodule.exports = PluginInfo;\n// Backwards compat:\nPluginInfo.PluginInfo = PluginInfo;\nPluginInfo.loadPluginsDir = function(dir) {\n    var PluginInfoProvider = require('./PluginInfoProvider');\n    return new PluginInfoProvider().getAllWithinSearchPath(dir);\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/PluginInfo/PluginInfoProvider.js":"/**\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n*/\n\n/* jshint sub:true, laxcomma:true, laxbreak:true */\n\nvar fs = require('fs');\nvar path = require('path');\nvar PluginInfo = require('./PluginInfo');\nvar events = require('../events');\n\nfunction PluginInfoProvider() {\n    this._cache = {};\n    this._getAllCache = {};\n}\n\nPluginInfoProvider.prototype.get = function(dirName) {\n    var absPath = path.resolve(dirName);\n    if (!this._cache[absPath]) {\n        this._cache[absPath] = new PluginInfo(dirName);\n    }\n    return this._cache[absPath];\n};\n\n// Normally you don't need to put() entries, but it's used\n// when copying plugins, and in unit tests.\nPluginInfoProvider.prototype.put = function(pluginInfo) {\n    var absPath = path.resolve(pluginInfo.dir);\n    this._cache[absPath] = pluginInfo;\n};\n\n// Used for plugin search path processing.\n// Given a dir containing multiple plugins, create a PluginInfo object for\n// each of them and return as array.\n// Should load them all in parallel and return a promise, but not yet.\nPluginInfoProvider.prototype.getAllWithinSearchPath = function(dirName) {\n    var absPath = path.resolve(dirName);\n    if (!this._getAllCache[absPath]) {\n        this._getAllCache[absPath] = getAllHelper(absPath, this);\n    }\n    return this._getAllCache[absPath];\n};\n\nfunction getAllHelper(absPath, provider) {\n    if (!fs.existsSync(absPath)){\n        return [];\n    }\n    // If dir itself is a plugin, return it in an array with one element.\n    if (fs.existsSync(path.join(absPath, 'plugin.xml'))) {\n        return [provider.get(absPath)];\n    }\n    var subdirs = fs.readdirSync(absPath);\n    var plugins = [];\n    subdirs.forEach(function(subdir) {\n        var d = path.join(absPath, subdir);\n        if (fs.existsSync(path.join(d, 'plugin.xml'))) {\n            try {\n                plugins.push(provider.get(d));\n            } catch (e) {\n                events.emit('warn', 'Error parsing ' + path.join(d, 'plugin.xml.\\n' + e.stack));\n            }\n        }\n    });\n    return plugins;\n}\n\nmodule.exports = PluginInfoProvider;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/ConfigChanges/ConfigChanges.js":"/*\n *\n * Copyright 2013 Anis Kadri\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n\n/*\n * This module deals with shared configuration / dependency \"stuff\". That is:\n * - XML configuration files such as config.xml, AndroidManifest.xml or WMAppManifest.xml.\n * - plist files in iOS\n * Essentially, any type of shared resources that we need to handle with awareness\n * of how potentially multiple plugins depend on a single shared resource, should be\n * handled in this module.\n *\n * The implementation uses an object as a hash table, with \"leaves\" of the table tracking\n * reference counts.\n */\n\n/* jshint sub:true */\n\nvar fs   = require('fs'),\n    path = require('path'),\n    et   = require('elementtree'),\n    semver = require('semver'),\n    events = require('../events'),\n    ConfigKeeper = require('./ConfigKeeper');\n\nvar mungeutil = require('./munge-util');\n\nexports.PlatformMunger = PlatformMunger;\n\nexports.process = function(plugins_dir, project_dir, platform, platformJson, pluginInfoProvider) {\n    var munger = new PlatformMunger(platform, project_dir, platformJson, pluginInfoProvider);\n    munger.process(plugins_dir);\n    munger.save_all();\n};\n\n/******************************************************************************\n* PlatformMunger class\n*\n* Can deal with config file of a single project.\n* Parsed config files are cached in a ConfigKeeper object.\n******************************************************************************/\nfunction PlatformMunger(platform, project_dir, platformJson, pluginInfoProvider) {\n    this.platform = platform;\n    this.project_dir = project_dir;\n    this.config_keeper = new ConfigKeeper(project_dir);\n    this.platformJson = platformJson;\n    this.pluginInfoProvider = pluginInfoProvider;\n}\n\n// Write out all unsaved files.\nPlatformMunger.prototype.save_all = PlatformMunger_save_all;\nfunction PlatformMunger_save_all() {\n    this.config_keeper.save_all();\n    this.platformJson.save();\n}\n\n// Apply a munge object to a single config file.\n// The remove parameter tells whether to add the change or remove it.\nPlatformMunger.prototype.apply_file_munge = PlatformMunger_apply_file_munge;\nfunction PlatformMunger_apply_file_munge(file, munge, remove) {\n    var self = this;\n\n    for (var selector in munge.parents) {\n        for (var xml_child in munge.parents[selector]) {\n            // this xml child is new, graft it (only if config file exists)\n            var config_file = self.config_keeper.get(self.project_dir, self.platform, file);\n            if (config_file.exists) {\n                if (remove) config_file.prune_child(selector, munge.parents[selector][xml_child]);\n                else config_file.graft_child(selector, munge.parents[selector][xml_child]);\n            }\n        }\n    }\n}\n\n\nPlatformMunger.prototype.remove_plugin_changes = remove_plugin_changes;\nfunction remove_plugin_changes(pluginInfo, is_top_level) {\n    var self = this;\n    var platform_config = self.platformJson.root;\n    var plugin_vars = is_top_level ?\n        platform_config.installed_plugins[pluginInfo.id] :\n        platform_config.dependent_plugins[pluginInfo.id];\n\n    // get config munge, aka how did this plugin change various config files\n    var config_munge = self.generate_plugin_config_munge(pluginInfo, plugin_vars);\n    // global munge looks at all plugins' changes to config files\n    var global_munge = platform_config.config_munge;\n    var munge = mungeutil.decrement_munge(global_munge, config_munge);\n\n    for (var file in munge.files) {\n        // CB-6976 Windows Universal Apps. Compatibility fix for existing plugins.\n        if (self.platform == 'windows' && file == 'package.appxmanifest' &&\n            !fs.existsSync(path.join(self.project_dir, 'package.appxmanifest'))) {\n            // New windows template separate manifest files for Windows8, Windows8.1 and WP8.1\n            var substs = ['package.phone.appxmanifest', 'package.windows.appxmanifest', 'package.windows80.appxmanifest', 'package.windows10.appxmanifest'];\n            /* jshint loopfunc:true */\n            substs.forEach(function(subst) {\n                events.emit('verbose', 'Applying munge to ' + subst);\n                self.apply_file_munge(subst, munge.files[file], true);\n            });\n            /* jshint loopfunc:false */\n        }\n        self.apply_file_munge(file, munge.files[file], /* remove = */ true);\n    }\n\n    // Remove from installed_plugins\n    self.platformJson.removePlugin(pluginInfo.id, is_top_level);\n    return self;\n}\n\n\nPlatformMunger.prototype.add_plugin_changes = add_plugin_changes;\nfunction add_plugin_changes(pluginInfo, plugin_vars, is_top_level, should_increment) {\n    var self = this;\n    var platform_config = self.platformJson.root;\n\n    // get config munge, aka how should this plugin change various config files\n    var config_munge = self.generate_plugin_config_munge(pluginInfo, plugin_vars);\n    // global munge looks at all plugins' changes to config files\n\n    // TODO: The should_increment param is only used by cordova-cli and is going away soon.\n    // If should_increment is set to false, avoid modifying the global_munge (use clone)\n    // and apply the entire config_munge because it's already a proper subset of the global_munge.\n    var munge, global_munge;\n    if (should_increment) {\n        global_munge = platform_config.config_munge;\n        munge = mungeutil.increment_munge(global_munge, config_munge);\n    } else {\n        global_munge = mungeutil.clone_munge(platform_config.config_munge);\n        munge = config_munge;\n    }\n\n    for (var file in munge.files) {\n        // CB-6976 Windows Universal Apps. Compatibility fix for existing plugins.\n        if (self.platform == 'windows' && file == 'package.appxmanifest' &&\n            !fs.existsSync(path.join(self.project_dir, 'package.appxmanifest'))) {\n            var substs = ['package.phone.appxmanifest', 'package.windows.appxmanifest', 'package.windows80.appxmanifest', 'package.windows10.appxmanifest'];\n            /* jshint loopfunc:true */\n            substs.forEach(function(subst) {\n                events.emit('verbose', 'Applying munge to ' + subst);\n                self.apply_file_munge(subst, munge.files[file]);\n            });\n            /* jshint loopfunc:false */\n        }\n        self.apply_file_munge(file, munge.files[file]);\n    }\n\n    // Move to installed/dependent_plugins\n    self.platformJson.addPlugin(pluginInfo.id, plugin_vars || {}, is_top_level);\n    return self;\n}\n\n\n// Load the global munge from platform json and apply all of it.\n// Used by cordova prepare to re-generate some config file from platform\n// defaults and the global munge.\nPlatformMunger.prototype.reapply_global_munge = reapply_global_munge ;\nfunction reapply_global_munge () {\n    var self = this;\n\n    var platform_config = self.platformJson.root;\n    var global_munge = platform_config.config_munge;\n    for (var file in global_munge.files) {\n        self.apply_file_munge(file, global_munge.files[file]);\n    }\n\n    return self;\n}\n\n\n// generate_plugin_config_munge\n// Generate the munge object from plugin.xml + vars\nPlatformMunger.prototype.generate_plugin_config_munge = generate_plugin_config_munge;\nfunction generate_plugin_config_munge(pluginInfo, vars) {\n    var self = this;\n\n    vars = vars || {};\n    var munge = { files: {} };\n    var changes = pluginInfo.getConfigFiles(self.platform);\n\n    // Demux 'package.appxmanifest' into relevant platform-specific appx manifests.\n    // Only spend the cycles if there are version-specific plugin settings\n    if (self.platform === 'windows' &&\n            changes.some(function(change) {\n                return ((typeof change.versions !== 'undefined') ||\n                    (typeof change.deviceTarget !== 'undefined'));\n            }))\n    {\n        var manifests = {\n            'windows': {\n                '8.0.0': 'package.windows80.appxmanifest',\n                '8.1.0': 'package.windows.appxmanifest',\n                '10.0.0': 'package.windows10.appxmanifest'\n            },\n            'phone': {\n                '8.1.0': 'package.phone.appxmanifest',\n                '10.0.0': 'package.windows10.appxmanifest'\n            },\n            'all': {\n                '8.0.0': 'package.windows80.appxmanifest',\n                '8.1.0': ['package.windows.appxmanifest', 'package.phone.appxmanifest'],\n                '10.0.0': 'package.windows10.appxmanifest'\n            }\n        };\n\n        var oldChanges = changes;\n        changes = [];\n\n        oldChanges.forEach(function(change, changeIndex) {\n            // Only support semver/device-target demux for package.appxmanifest\n            // Pass through in case something downstream wants to use it\n            if (change.target !== 'package.appxmanifest') {\n                changes.push(change);\n                return;\n            }\n\n            var hasVersion = (typeof change.versions !== 'undefined');\n            var hasTargets = (typeof change.deviceTarget !== 'undefined');\n\n            // No semver/device-target for this config-file, pass it through\n            if (!(hasVersion || hasTargets)) {\n                changes.push(change);\n                return;\n            }\n\n            var targetDeviceSet = hasTargets ? change.deviceTarget : 'all';\n            if (['windows', 'phone', 'all'].indexOf(targetDeviceSet) === -1) {\n                // target-device couldn't be resolved, fix it up here to a valid value\n                targetDeviceSet = 'all';\n            }\n            var knownWindowsVersionsForTargetDeviceSet = Object.keys(manifests[targetDeviceSet]);\n\n            // at this point, 'change' targets package.appxmanifest and has a version attribute\n            knownWindowsVersionsForTargetDeviceSet.forEach(function(winver) {\n                // This is a local function that creates the new replacement representing the\n                // mutation.  Used to save code further down.\n                var createReplacement = function(manifestFile, originalChange) {\n                    var replacement = {\n                        target:         manifestFile,\n                        parent:         originalChange.parent,\n                        after:          originalChange.after,\n                        xmls:           originalChange.xmls,\n                        versions:       originalChange.versions,\n                        deviceTarget:   originalChange.deviceTarget\n                    };\n                    return replacement;\n                };\n\n                // version doesn't satisfy, so skip\n                if (hasVersion && !semver.satisfies(winver, change.versions)) {\n                    return;\n                }\n\n                var versionSpecificManifests = manifests[targetDeviceSet][winver];\n                if (versionSpecificManifests.constructor === Array) {\n                    // e.g. all['8.1.0'] === ['pkg.windows.appxmanifest', 'pkg.phone.appxmanifest']\n                    versionSpecificManifests.forEach(function(manifestFile) {\n                        changes.push(createReplacement(manifestFile, change));\n                    });\n                }\n                else {\n                    // versionSpecificManifests is actually a single string\n                    changes.push(createReplacement(versionSpecificManifests, change));\n                }\n            });\n        });\n    }\n\n    changes.forEach(function(change) {\n        change.xmls.forEach(function(xml) {\n            // 1. stringify each xml\n            var stringified = (new et.ElementTree(xml)).write({xml_declaration:false});\n            // interp vars\n            if (vars) {\n                Object.keys(vars).forEach(function(key) {\n                    var regExp = new RegExp('\\\\$' + key, 'g');\n                    stringified = stringified.replace(regExp, vars[key]);\n                });\n            }\n            // 2. add into munge\n            mungeutil.deep_add(munge, change.target, change.parent, { xml: stringified, count: 1, after: change.after });\n        });\n    });\n    return munge;\n}\n\n// Go over the prepare queue and apply the config munges for each plugin\n// that has been (un)installed.\nPlatformMunger.prototype.process = PlatformMunger_process;\nfunction PlatformMunger_process(plugins_dir) {\n    var self = this;\n    var platform_config = self.platformJson.root;\n\n    // Uninstallation first\n    platform_config.prepare_queue.uninstalled.forEach(function(u) {\n        var pluginInfo = self.pluginInfoProvider.get(path.join(plugins_dir, u.plugin));\n        self.remove_plugin_changes(pluginInfo, u.topLevel);\n    });\n\n    // Now handle installation\n    platform_config.prepare_queue.installed.forEach(function(u) {\n        var pluginInfo = self.pluginInfoProvider.get(path.join(plugins_dir, u.plugin));\n        self.add_plugin_changes(pluginInfo, u.vars, u.topLevel, true);\n    });\n\n    // Empty out installed/ uninstalled queues.\n    platform_config.prepare_queue.uninstalled = [];\n    platform_config.prepare_queue.installed = [];\n}\n/**** END of PlatformMunger ****/\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/semver/semver.js":"exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.inspect = function() {\n  return '<SemVer \"' + this + '\">';\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(b);\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.inspect = function() {\n  return '<SemVer Comparator \"' + this + '\">';\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if ((range instanceof Range) && range.loose === loose)\n    return range;\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.inspect = function() {\n  return '<SemVer Range \"' + this.range + '\">';\n};\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0- <1.3.0-\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm)\n          M = +M + 1\n        else\n          m = +m + 1\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  return versions.filter(function(version) {\n    return satisfies(version, range, loose);\n  }).sort(function(a, b) {\n    return rcompare(a, b, loose);\n  })[0] || null;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/ConfigChanges/ConfigKeeper.js":"/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n/* jshint sub:true */\n\nvar path = require('path');\nvar ConfigFile = require('./ConfigFile');\n\n/******************************************************************************\n* ConfigKeeper class\n*\n* Used to load and store config files to avoid re-parsing and writing them out\n* multiple times.\n*\n* The config files are referred to by a fake path constructed as\n* project_dir/platform/file\n* where file is the name used for the file in config munges.\n******************************************************************************/\nfunction ConfigKeeper(project_dir, plugins_dir) {\n    this.project_dir = project_dir;\n    this.plugins_dir = plugins_dir;\n    this._cached = {};\n}\n\nConfigKeeper.prototype.get = function ConfigKeeper_get(project_dir, platform, file) {\n    var self = this;\n\n    // This fixes a bug with older plugins - when specifying config xml instead of res/xml/config.xml\n    // https://issues.apache.org/jira/browse/CB-6414\n    if(file == 'config.xml' && platform == 'android'){\n        file = 'res/xml/config.xml';\n    }\n    var fake_path = path.join(project_dir, platform, file);\n\n    if (self._cached[fake_path]) {\n        return self._cached[fake_path];\n    }\n    // File was not cached, need to load.\n    var config_file = new ConfigFile(project_dir, platform, file);\n    self._cached[fake_path] = config_file;\n    return config_file;\n};\n\n\nConfigKeeper.prototype.save_all = function ConfigKeeper_save_all() {\n    var self = this;\n    Object.keys(self._cached).forEach(function (fake_path) {\n        var config_file = self._cached[fake_path];\n        if (config_file.is_changed) config_file.save();\n    });\n};\n\nmodule.exports = ConfigKeeper;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/ConfigChanges/ConfigFile.js":"/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar bplist = require('bplist-parser');\nvar et   = require('elementtree');\nvar glob = require('glob');\nvar plist = require('plist');\n\nvar plist_helpers = require('../util/plist-helpers');\nvar xml_helpers = require('../util/xml-helpers');\n\n/******************************************************************************\n* ConfigFile class\n*\n* Can load and keep various types of config files. Provides some functionality\n* specific to some file types such as grafting XML children. In most cases it\n* should be instantiated by ConfigKeeper.\n*\n* For plugin.xml files use as:\n* plugin_config = self.config_keeper.get(plugin_dir, '', 'plugin.xml');\n*\n* TODO: Consider moving it out to a separate file and maybe partially with\n* overrides in platform handlers.\n******************************************************************************/\nfunction ConfigFile(project_dir, platform, file_tag) {\n    this.project_dir = project_dir;\n    this.platform = platform;\n    this.file_tag = file_tag;\n    this.is_changed = false;\n\n    this.load();\n}\n\n// ConfigFile.load()\nConfigFile.prototype.load = ConfigFile_load;\nfunction ConfigFile_load() {\n    var self = this;\n\n    // config file may be in a place not exactly specified in the target\n    var filepath = self.filepath = resolveConfigFilePath(self.project_dir, self.platform, self.file_tag);\n\n    if ( !filepath || !fs.existsSync(filepath) ) {\n        self.exists = false;\n        return;\n    }\n    self.exists = true;\n    self.mtime = fs.statSync(self.filepath).mtime;\n\n    var ext = path.extname(filepath);\n    // Windows8 uses an appxmanifest, and wp8 will likely use\n    // the same in a future release\n    if (ext == '.xml' || ext == '.appxmanifest') {\n        self.type = 'xml';\n        self.data = xml_helpers.parseElementtreeSync(filepath);\n    } else {\n        // plist file\n        self.type = 'plist';\n        // TODO: isBinaryPlist() reads the file and then parse re-reads it again.\n        //       We always write out text plist, not binary.\n        //       Do we still need to support binary plist?\n        //       If yes, use plist.parseStringSync() and read the file once.\n        self.data = isBinaryPlist(filepath) ?\n                bplist.parseBuffer(fs.readFileSync(filepath)) :\n                plist.parse(fs.readFileSync(filepath, 'utf8'));\n    }\n}\n\nConfigFile.prototype.save = function ConfigFile_save() {\n    var self = this;\n    if (self.type === 'xml') {\n        fs.writeFileSync(self.filepath, self.data.write({indent: 4}), 'utf-8');\n    } else {\n        // plist\n        var regExp = new RegExp('<string>[ \\t\\r\\n]+?</string>', 'g');\n        fs.writeFileSync(self.filepath, plist.build(self.data).replace(regExp, '<string></string>'));\n    }\n    self.is_changed = false;\n};\n\nConfigFile.prototype.graft_child = function ConfigFile_graft_child(selector, xml_child) {\n    var self = this;\n    var filepath = self.filepath;\n    var result;\n    if (self.type === 'xml') {\n        var xml_to_graft = [et.XML(xml_child.xml)];\n        result = xml_helpers.graftXML(self.data, xml_to_graft, selector, xml_child.after);\n        if ( !result) {\n            throw new Error('grafting xml at selector \"' + selector + '\" from \"' + filepath + '\" during config install went bad :(');\n        }\n    } else {\n        // plist file\n        result = plist_helpers.graftPLIST(self.data, xml_child.xml, selector);\n        if ( !result ) {\n            throw new Error('grafting to plist \"' + filepath + '\" during config install went bad :(');\n        }\n    }\n    self.is_changed = true;\n};\n\nConfigFile.prototype.prune_child = function ConfigFile_prune_child(selector, xml_child) {\n    var self = this;\n    var filepath = self.filepath;\n    var result;\n    if (self.type === 'xml') {\n        var xml_to_graft = [et.XML(xml_child.xml)];\n        result = xml_helpers.pruneXML(self.data, xml_to_graft, selector);\n    } else {\n        // plist file\n        result = plist_helpers.prunePLIST(self.data, xml_child.xml, selector);\n    }\n    if (!result) {\n        var err_msg = 'Pruning at selector \"' + selector + '\" from \"' + filepath + '\" went bad.';\n        throw new Error(err_msg);\n    }\n    self.is_changed = true;\n};\n\n// Some config-file target attributes are not qualified with a full leading directory, or contain wildcards.\n// Resolve to a real path in this function.\n// TODO: getIOSProjectname is slow because of glob, try to avoid calling it several times per project.\nfunction resolveConfigFilePath(project_dir, platform, file) {\n    var filepath = path.join(project_dir, file);\n    var matches;\n\n    if (file.indexOf('*') > -1) {\n        // handle wildcards in targets using glob.\n        matches = glob.sync(path.join(project_dir, '**', file));\n        if (matches.length) filepath = matches[0];\n\n        // [CB-5989] multiple Info.plist files may exist. default to $PROJECT_NAME-Info.plist\n        if(matches.length > 1 && file.indexOf('-Info.plist')>-1){\n            var plistName =  getIOSProjectname(project_dir)+'-Info.plist';\n            for (var i=0; i < matches.length; i++) {\n                if(matches[i].indexOf(plistName) > -1){\n                    filepath = matches[i];\n                    break;\n                }\n            }\n        }\n        return filepath;\n    }\n\n    // special-case config.xml target that is just \"config.xml\". This should be resolved to the real location of the file.\n    // TODO: move the logic that contains the locations of config.xml from cordova CLI into plugman.\n    if (file == 'config.xml') {\n        if (platform == 'ubuntu') {\n            filepath = path.join(project_dir, 'config.xml');\n        } else if (platform == 'ios') {\n            var iospath = getIOSProjectname(project_dir);\n            filepath = path.join(project_dir,iospath, 'config.xml');\n        } else if (platform == 'android') {\n            filepath = path.join(project_dir, 'res', 'xml', 'config.xml');\n        } else {\n            matches = glob.sync(path.join(project_dir, '**', 'config.xml'));\n            if (matches.length) filepath = matches[0];\n        }\n        return filepath;\n    }\n\n    // None of the special cases matched, returning project_dir/file.\n    return filepath;\n}\n\n// Find out the real name of an iOS project\n// TODO: glob is slow, need a better way or caching, or avoid using more than once.\nfunction getIOSProjectname(project_dir) {\n    var matches = glob.sync(path.join(project_dir, '*.xcodeproj'));\n    var iospath;\n    if (matches.length === 1) {\n        iospath = path.basename(matches[0],'.xcodeproj');\n    } else {\n        var msg;\n        if (matches.length === 0) {\n            msg = 'Does not appear to be an xcode project, no xcode project file in ' + project_dir;\n        } else {\n            msg = 'There are multiple *.xcodeproj dirs in ' + project_dir;\n        }\n        throw new Error(msg);\n    }\n    return iospath;\n}\n\n// determine if a plist file is binary\nfunction isBinaryPlist(filename) {\n    // I wish there was a synchronous way to read only the first 6 bytes of a\n    // file. This is wasteful :/\n    var buf = '' + fs.readFileSync(filename, 'utf8');\n    // binary plists start with a magic header, \"bplist\"\n    return buf.substring(0, 6) === 'bplist';\n}\n\nmodule.exports = ConfigFile;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/bplist-parser/bplistParser.js":"'use strict';\n\n// adapted from http://code.google.com/p/plist/source/browse/trunk/src/com/dd/plist/BinaryPropertyListParser.java\n\nvar fs = require('fs');\nvar debug = false;\n\nexports.maxObjectSize = 100 * 1000 * 1000; // 100Meg\nexports.maxObjectCount = 32768;\n\n// EPOCH = new SimpleDateFormat(\"yyyy MM dd zzz\").parse(\"2001 01 01 GMT\").getTime();\n// ...but that's annoying in a static initializer because it can throw exceptions, ick.\n// So we just hardcode the correct value.\nvar EPOCH = 978307200000;\n\n// UID object definition\nvar UID = exports.UID = function(id) {\n  this.UID = id;\n}\n\nvar parseFile = exports.parseFile = function (fileNameOrBuffer, callback) {\n  function tryParseBuffer(buffer) {\n    var err = null;\n    var result;\n    try {\n      result = parseBuffer(buffer);\n    } catch (ex) {\n      err = ex;\n    }\n    callback(err, result);\n  }\n\n  if (Buffer.isBuffer(fileNameOrBuffer)) {\n    return tryParseBuffer(fileNameOrBuffer);\n  } else {\n    fs.readFile(fileNameOrBuffer, function (err, data) {\n      if (err) { return callback(err); }\n      tryParseBuffer(data);\n    });\n  }\n};\n\nvar parseBuffer = exports.parseBuffer = function (buffer) {\n  var result = {};\n\n  // check header\n  var header = buffer.slice(0, 'bplist'.length).toString('utf8');\n  if (header !== 'bplist') {\n    throw new Error(\"Invalid binary plist. Expected 'bplist' at offset 0.\");\n  }\n\n  // Handle trailer, last 32 bytes of the file\n  var trailer = buffer.slice(buffer.length - 32, buffer.length);\n  // 6 null bytes (index 0 to 5)\n  var offsetSize = trailer.readUInt8(6);\n  if (debug) {\n    console.log(\"offsetSize: \" + offsetSize);\n  }\n  var objectRefSize = trailer.readUInt8(7);\n  if (debug) {\n    console.log(\"objectRefSize: \" + objectRefSize);\n  }\n  var numObjects = readUInt64BE(trailer, 8);\n  if (debug) {\n    console.log(\"numObjects: \" + numObjects);\n  }\n  var topObject = readUInt64BE(trailer, 16);\n  if (debug) {\n    console.log(\"topObject: \" + topObject);\n  }\n  var offsetTableOffset = readUInt64BE(trailer, 24);\n  if (debug) {\n    console.log(\"offsetTableOffset: \" + offsetTableOffset);\n  }\n\n  if (numObjects > exports.maxObjectCount) {\n    throw new Error(\"maxObjectCount exceeded\");\n  }\n\n  // Handle offset table\n  var offsetTable = [];\n\n  for (var i = 0; i < numObjects; i++) {\n    var offsetBytes = buffer.slice(offsetTableOffset + i * offsetSize, offsetTableOffset + (i + 1) * offsetSize);\n    offsetTable[i] = readUInt(offsetBytes, 0);\n    if (debug) {\n      console.log(\"Offset for Object #\" + i + \" is \" + offsetTable[i] + \" [\" + offsetTable[i].toString(16) + \"]\");\n    }\n  }\n\n  // Parses an object inside the currently parsed binary property list.\n  // For the format specification check\n  // <a href=\"http://www.opensource.apple.com/source/CF/CF-635/CFBinaryPList.c\">\n  // Apple's binary property list parser implementation</a>.\n  function parseObject(tableOffset) {\n    var offset = offsetTable[tableOffset];\n    var type = buffer[offset];\n    var objType = (type & 0xF0) >> 4; //First  4 bits\n    var objInfo = (type & 0x0F);      //Second 4 bits\n    switch (objType) {\n    case 0x0:\n      return parseSimple();\n    case 0x1:\n      return parseInteger();\n    case 0x8:\n      return parseUID();\n    case 0x2:\n      return parseReal();\n    case 0x3:\n      return parseDate();\n    case 0x4:\n      return parseData();\n    case 0x5: // ASCII\n      return parsePlistString();\n    case 0x6: // UTF-16\n      return parsePlistString(true);\n    case 0xA:\n      return parseArray();\n    case 0xD:\n      return parseDictionary();\n    default:\n      throw new Error(\"Unhandled type 0x\" + objType.toString(16));\n    }\n\n    function parseSimple() {\n      //Simple\n      switch (objInfo) {\n      case 0x0: // null\n        return null;\n      case 0x8: // false\n        return false;\n      case 0x9: // true\n        return true;\n      case 0xF: // filler byte\n        return null;\n      default:\n        throw new Error(\"Unhandled simple type 0x\" + objType.toString(16));\n      }\n    }\n\n    function parseInteger() {\n      var length = Math.pow(2, objInfo);\n      if (length < exports.maxObjectSize) {\n        return readUInt(buffer.slice(offset + 1, offset + 1 + length));\n      } else {\n        throw new Error(\"To little heap space available! Wanted to read \" + length + \" bytes, but only \" + exports.maxObjectSize + \" are available.\");\n      }\n    }\n\n    function parseUID() {\n      var length = objInfo + 1;\n      if (length < exports.maxObjectSize) {\n        return new UID(readUInt(buffer.slice(offset + 1, offset + 1 + length)));\n      } else {\n        throw new Error(\"To little heap space available! Wanted to read \" + length + \" bytes, but only \" + exports.maxObjectSize + \" are available.\");\n      }\n    }\n\n    function parseReal() {\n      var length = Math.pow(2, objInfo);\n      if (length < exports.maxObjectSize) {\n        var realBuffer = buffer.slice(offset + 1, offset + 1 + length);\n        if (length === 4) {\n          return realBuffer.readFloatBE(0);\n        }\n        else if (length === 8) {\n          return realBuffer.readDoubleBE(0);\n        }\n      } else {\n        throw new Error(\"To little heap space available! Wanted to read \" + length + \" bytes, but only \" + exports.maxObjectSize + \" are available.\");\n      }\n    }\n\n    function parseDate() {\n      if (objInfo != 0x3) {\n        console.error(\"Unknown date type :\" + objInfo + \". Parsing anyway...\");\n      }\n      var dateBuffer = buffer.slice(offset + 1, offset + 9);\n      return new Date(EPOCH + (1000 * dateBuffer.readDoubleBE(0)));\n    }\n\n    function parseData() {\n      var dataoffset = 1;\n      var length = objInfo;\n      if (objInfo == 0xF) {\n        var int_type = buffer[offset + 1];\n        var intType = (int_type & 0xF0) / 0x10;\n        if (intType != 0x1) {\n          console.error(\"0x4: UNEXPECTED LENGTH-INT TYPE! \" + intType);\n        }\n        var intInfo = int_type & 0x0F;\n        var intLength = Math.pow(2, intInfo);\n        dataoffset = 2 + intLength;\n        if (intLength < 3) {\n          length = readUInt(buffer.slice(offset + 2, offset + 2 + intLength));\n        } else {\n          length = readUInt(buffer.slice(offset + 2, offset + 2 + intLength));\n        }\n      }\n      if (length < exports.maxObjectSize) {\n        return buffer.slice(offset + dataoffset, offset + dataoffset + length);\n      } else {\n        throw new Error(\"To little heap space available! Wanted to read \" + length + \" bytes, but only \" + exports.maxObjectSize + \" are available.\");\n      }\n    }\n\n    function parsePlistString (isUtf16) {\n      isUtf16 = isUtf16 || 0;\n      var enc = \"utf8\";\n      var length = objInfo;\n      var stroffset = 1;\n      if (objInfo == 0xF) {\n        var int_type = buffer[offset + 1];\n        var intType = (int_type & 0xF0) / 0x10;\n        if (intType != 0x1) {\n          console.err(\"UNEXPECTED LENGTH-INT TYPE! \" + intType);\n        }\n        var intInfo = int_type & 0x0F;\n        var intLength = Math.pow(2, intInfo);\n        var stroffset = 2 + intLength;\n        if (intLength < 3) {\n          length = readUInt(buffer.slice(offset + 2, offset + 2 + intLength));\n        } else {\n          length = readUInt(buffer.slice(offset + 2, offset + 2 + intLength));\n        }\n      }\n      // length is String length -> to get byte length multiply by 2, as 1 character takes 2 bytes in UTF-16\n      length *= (isUtf16 + 1);\n      if (length < exports.maxObjectSize) {\n        var plistString = new Buffer(buffer.slice(offset + stroffset, offset + stroffset + length));\n        if (isUtf16) {\n          plistString = swapBytes(plistString);\n          enc = \"ucs2\";\n        }\n        return plistString.toString(enc);\n      } else {\n        throw new Error(\"To little heap space available! Wanted to read \" + length + \" bytes, but only \" + exports.maxObjectSize + \" are available.\");\n      }\n    }\n\n    function parseArray() {\n      var length = objInfo;\n      var arrayoffset = 1;\n      if (objInfo == 0xF) {\n        var int_type = buffer[offset + 1];\n        var intType = (int_type & 0xF0) / 0x10;\n        if (intType != 0x1) {\n          console.error(\"0xa: UNEXPECTED LENGTH-INT TYPE! \" + intType);\n        }\n        var intInfo = int_type & 0x0F;\n        var intLength = Math.pow(2, intInfo);\n        arrayoffset = 2 + intLength;\n        if (intLength < 3) {\n          length = readUInt(buffer.slice(offset + 2, offset + 2 + intLength));\n        } else {\n          length = readUInt(buffer.slice(offset + 2, offset + 2 + intLength));\n        }\n      }\n      if (length * objectRefSize > exports.maxObjectSize) {\n        throw new Error(\"To little heap space available!\");\n      }\n      var array = [];\n      for (var i = 0; i < length; i++) {\n        var objRef = readUInt(buffer.slice(offset + arrayoffset + i * objectRefSize, offset + arrayoffset + (i + 1) * objectRefSize));\n        array[i] = parseObject(objRef);\n      }\n      return array;\n    }\n\n    function parseDictionary() {\n      var length = objInfo;\n      var dictoffset = 1;\n      if (objInfo == 0xF) {\n        var int_type = buffer[offset + 1];\n        var intType = (int_type & 0xF0) / 0x10;\n        if (intType != 0x1) {\n          console.error(\"0xD: UNEXPECTED LENGTH-INT TYPE! \" + intType);\n        }\n        var intInfo = int_type & 0x0F;\n        var intLength = Math.pow(2, intInfo);\n        dictoffset = 2 + intLength;\n        if (intLength < 3) {\n          length = readUInt(buffer.slice(offset + 2, offset + 2 + intLength));\n        } else {\n          length = readUInt(buffer.slice(offset + 2, offset + 2 + intLength));\n        }\n      }\n      if (length * 2 * objectRefSize > exports.maxObjectSize) {\n        throw new Error(\"To little heap space available!\");\n      }\n      if (debug) {\n        console.log(\"Parsing dictionary #\" + tableOffset);\n      }\n      var dict = {};\n      for (var i = 0; i < length; i++) {\n        var keyRef = readUInt(buffer.slice(offset + dictoffset + i * objectRefSize, offset + dictoffset + (i + 1) * objectRefSize));\n        var valRef = readUInt(buffer.slice(offset + dictoffset + (length * objectRefSize) + i * objectRefSize, offset + dictoffset + (length * objectRefSize) + (i + 1) * objectRefSize));\n        var key = parseObject(keyRef);\n        var val = parseObject(valRef);\n        if (debug) {\n          console.log(\"  DICT #\" + tableOffset + \": Mapped \" + key + \" to \" + val);\n        }\n        dict[key] = val;\n      }\n      return dict;\n    }\n  }\n\n  return [ parseObject(topObject) ];\n};\n\nfunction readUInt(buffer, start) {\n  start = start || 0;\n\n  var l = 0;\n  for (var i = start; i < buffer.length; i++) {\n    l <<= 8;\n    l |= buffer[i] & 0xFF;\n  }\n  return l;\n}\n\n// we're just going to toss the high order bits because javascript doesn't have 64-bit ints\nfunction readUInt64BE(buffer, start) {\n  var data = buffer.slice(start, start + 8);\n  return data.readUInt32BE(4, 8);\n}\n\nfunction swapBytes(buffer) {\n  var len = buffer.length;\n  for (var i = 0; i < len; i += 2) {\n    var a = buffer[i];\n    buffer[i] = buffer[i+1];\n    buffer[i+1] = a;\n  }\n  return buffer;\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/glob/glob.js":"// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar fs = require('fs')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nglob.hasMagic = function (pattern, options_) {\n  var options = util._extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  var n = this.minimatch.set.length\n  this._processing = 0\n  this.matches = new Array(n)\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    fs.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (this.matches[index][e])\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = this._makeAbs(e)\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  if (this.mark)\n    e = this._mark(e)\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er)\n      return cb()\n\n    var isSym = lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      this.cache[this._makeAbs(f)] = 'FILE'\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c !== 'DIR')\n    return cb()\n\n  return cb(null, c, stat)\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/glob/node_modules/minimatch/minimatch.js":"module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new Error('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var plType\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        plType = stateChar\n        patternListStack.push({\n          type: plType,\n          start: i - 1,\n          reStart: re.length\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        re += ')'\n        var pl = patternListStack.pop()\n        plType = pl.type\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        switch (plType) {\n          case '!':\n            negativeLists.push(pl)\n            re += ')[^/]*?)'\n            pl.reEnd = re.length\n            break\n          case '?':\n          case '+':\n          case '*':\n            re += plType\n            break\n          case '@': break // the default anyway\n        }\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + 3)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2})*)(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  var regExp = new RegExp('^' + re + '$', flags)\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/glob/node_modules/minimatch/node_modules/brace-expansion/index.js":"var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = /^(.*,)+(.+)?$/.test(m.body);\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/glob/node_modules/minimatch/node_modules/brace-expansion/node_modules/concat-map/index.js":"module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/glob/node_modules/minimatch/node_modules/brace-expansion/node_modules/balanced-match/index.js":"module.exports = balanced;\nfunction balanced(a, b, str) {\n  var bal = 0;\n  var m = {};\n  var ended = false;\n\n  for (var i = 0; i < str.length; i++) {\n    if (a == str.substr(i, a.length)) {\n      if (!('start' in m)) m.start = i;\n      bal++;\n    }\n    else if (b == str.substr(i, b.length) && 'start' in m) {\n      ended = true;\n      bal--;\n      if (!bal) {\n        m.end = i;\n        m.pre = str.substr(0, m.start);\n        m.body = (m.end - m.start > 1)\n          ? str.substring(m.start + a.length, m.end)\n          : '';\n        m.post = str.slice(m.end + b.length);\n        return m;\n      }\n    }\n  }\n\n  // if we opened more than we closed, find the one we closed\n  if (bal && ended) {\n    var start = m.start + a.length;\n    m = balanced(a, b, str.substr(start));\n    if (m) {\n      m.start += start;\n      m.end += start;\n      m.pre = str.slice(0, start) + m.pre;\n    }\n    return m;\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/glob/node_modules/inherits/inherits.js":"module.exports = require('util').inherits\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/glob/node_modules/path-is-absolute/index.js":"'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n};\n\nfunction win32(path) {\n\t// https://github.com/joyent/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = !!device && device.charAt(1) !== ':';\n\n\t// UNC paths are always absolute\n\treturn !!result[2] || isUnc;\n};\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/glob/sync.js":"module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar fs = require('fs')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = fs.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this.matches[index][e] = true\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  var abs = this._makeAbs(e)\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[this._makeAbs(e)]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = fs.lstatSync(abs)\n  } catch (er) {\n    // lstat failed, doesn't exist\n    return null\n  }\n\n  var isSym = lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      this.cache[this._makeAbs(f)] = 'FILE'\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this.matches[index][prefix] = true\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = fs.lstatSync(abs)\n    } catch (er) {\n      return false\n    }\n\n    if (lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c !== 'DIR')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/glob/common.js":"exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern)\n  }\n\n  return {\n    matcher: new Minimatch(pattern),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = options.cwd\n    self.changedCwd = path.resolve(options.cwd) !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  self.nomount = !!options.nomount\n\n  // disable comments and negation unless the user explicitly\n  // passes in false as the option.\n  options.nonegate = options.nonegate === false ? false : true\n  options.nocomment = options.nocomment === false ? false : true\n  deprecationWarning(options)\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\n// TODO(isaacs): remove entirely in v6\n// exported to reset in tests\nexports.deprecationWarned\nfunction deprecationWarning(options) {\n  if (!options.nonegate || !options.nocomment) {\n    if (process.noDeprecation !== true && !exports.deprecationWarned) {\n      var msg = 'glob WARNING: comments and negation will be disabled in v6'\n      if (process.throwDeprecation)\n        throw new Error(msg)\n      else if (process.traceDeprecation)\n        console.trace(msg)\n      else\n        console.error(msg)\n\n      exports.deprecationWarned = true\n    }\n  }\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        return !(/\\/$/.test(e))\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/glob/node_modules/inflight/inflight.js":"var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n    for (var i = 0; i < len; i++) {\n      cbs[i].apply(null, args)\n    }\n    if (cbs.length > len) {\n      // added more in the interim.\n      // de-zalgo, just in case, but don't call again.\n      cbs.splice(0, len)\n      process.nextTick(function () {\n        RES.apply(null, args)\n      })\n    } else {\n      delete reqs[key]\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/glob/node_modules/inflight/node_modules/wrappy/wrappy.js":"// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/glob/node_modules/once/once.js":"var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/glob/node_modules/once/node_modules/wrappy/wrappy.js":"// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/lib/plist.js":"\nvar i;\n\n/**\n * Parser functions.\n */\n\nvar parserFunctions = require('./parse');\nfor (i in parserFunctions) exports[i] = parserFunctions[i];\n\n/**\n * Builder functions.\n */\n\nvar builderFunctions = require('./build');\nfor (i in builderFunctions) exports[i] = builderFunctions[i];\n\n/**\n * Add Node.js-specific functions (they're deprecated…).\n */\n\nvar nodeFunctions = require('./node');\nfor (i in nodeFunctions) exports[i] = nodeFunctions[i];\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/lib/parse.js":"\n/**\n * Module dependencies.\n */\n\nvar deprecate = require('util-deprecate');\nvar DOMParser = require('xmldom').DOMParser;\n\n/**\n * Module exports.\n */\n\nexports.parse = parse;\nexports.parseString = deprecate(parseString, '`parseString()` is deprecated. ' +\n  'It\\'s not actually async. Use `parse()` instead.');\nexports.parseStringSync = deprecate(parseStringSync, '`parseStringSync()` is ' +\n  'deprecated. Use `parse()` instead.');\n\n/**\n * We ignore raw text (usually whitespace), <!-- xml comments -->,\n * and raw CDATA nodes.\n *\n * @param {Element} node\n * @returns {Boolean}\n * @api private\n */\n\nfunction shouldIgnoreNode (node) {\n  return node.nodeType === 3 // text\n    || node.nodeType === 8   // comment\n    || node.nodeType === 4;  // cdata\n}\n\n\n/**\n * Parses a Plist XML string. Returns an Object.\n *\n * @param {String} xml - the XML String to decode\n * @returns {Mixed} the decoded value from the Plist XML\n * @api public\n */\n\nfunction parse (xml) {\n  var doc = new DOMParser().parseFromString(xml);\n  if (doc.documentElement.nodeName !== 'plist') {\n    throw new Error('malformed document. First element should be <plist>');\n  }\n  var plist = parsePlistXML(doc.documentElement);\n\n  // the root <plist> node gets interpreted as an Array,\n  // so pull out the inner data first\n  if (plist.length == 1) plist = plist[0];\n\n  return plist;\n}\n\n/**\n * Parses a Plist XML string. Returns an Object. Takes a `callback` function.\n *\n * @param {String} xml - the XML String to decode\n * @param {Function} callback - callback function\n * @returns {Mixed} the decoded value from the Plist XML\n * @api public\n * @deprecated not actually async. use parse() instead\n */\n\nfunction parseString (xml, callback) {\n  var doc, error, plist;\n  try {\n    doc = new DOMParser().parseFromString(xml);\n    plist = parsePlistXML(doc.documentElement);\n  } catch(e) {\n    error = e;\n  }\n  callback(error, plist);\n}\n\n/**\n * Parses a Plist XML string. Returns an Object.\n *\n * @param {String} xml - the XML String to decode\n * @param {Function} callback - callback function\n * @returns {Mixed} the decoded value from the Plist XML\n * @api public\n * @deprecated use parse() instead\n */\n\nfunction parseStringSync (xml) {\n  var doc = new DOMParser().parseFromString(xml);\n  var plist;\n  if (doc.documentElement.nodeName !== 'plist') {\n    throw new Error('malformed document. First element should be <plist>');\n  }\n  plist = parsePlistXML(doc.documentElement);\n\n  // if the plist is an array with 1 element, pull it out of the array\n  if (plist.length == 1) {\n    plist = plist[0];\n  }\n  return plist;\n}\n\n/**\n * Convert an XML based plist document into a JSON representation.\n *\n * @param {Object} xml_node - current XML node in the plist\n * @returns {Mixed} built up JSON object\n * @api private\n */\n\nfunction parsePlistXML (node) {\n  var i, new_obj, key, val, new_arr, res, d;\n\n  if (!node)\n    return null;\n\n  if (node.nodeName === 'plist') {\n    new_arr = [];\n    for (i=0; i < node.childNodes.length; i++) {\n      // ignore comment nodes (text)\n      if (!shouldIgnoreNode(node.childNodes[i])) {\n        new_arr.push( parsePlistXML(node.childNodes[i]));\n      }\n    }\n    return new_arr;\n\n  } else if (node.nodeName === 'dict') {\n    new_obj = {};\n    key = null;\n    for (i=0; i < node.childNodes.length; i++) {\n      // ignore comment nodes (text)\n      if (!shouldIgnoreNode(node.childNodes[i])) {\n        if (key === null) {\n          key = parsePlistXML(node.childNodes[i]);\n        } else {\n          new_obj[key] = parsePlistXML(node.childNodes[i]);\n          key = null;\n        }\n      }\n    }\n    return new_obj;\n\n  } else if (node.nodeName === 'array') {\n    new_arr = [];\n    for (i=0; i < node.childNodes.length; i++) {\n      // ignore comment nodes (text)\n      if (!shouldIgnoreNode(node.childNodes[i])) {\n        res = parsePlistXML(node.childNodes[i]);\n        if (null != res) new_arr.push(res);\n      }\n    }\n    return new_arr;\n\n  } else if (node.nodeName === '#text') {\n    // TODO: what should we do with text types? (CDATA sections)\n\n  } else if (node.nodeName === 'key') {\n    return node.childNodes[0].nodeValue;\n\n  } else if (node.nodeName === 'string') {\n    res = '';\n    for (d=0; d < node.childNodes.length; d++) {\n      res += node.childNodes[d].nodeValue;\n    }\n    return res;\n\n  } else if (node.nodeName === 'integer') {\n    // parse as base 10 integer\n    return parseInt(node.childNodes[0].nodeValue, 10);\n\n  } else if (node.nodeName === 'real') {\n    res = '';\n    for (d=0; d < node.childNodes.length; d++) {\n      if (node.childNodes[d].nodeType === 3) {\n        res += node.childNodes[d].nodeValue;\n      }\n    }\n    return parseFloat(res);\n\n  } else if (node.nodeName === 'data') {\n    res = '';\n    for (d=0; d < node.childNodes.length; d++) {\n      if (node.childNodes[d].nodeType === 3) {\n        res += node.childNodes[d].nodeValue.replace(/\\s+/g, '');\n      }\n    }\n\n    // decode base64 data to a Buffer instance\n    return new Buffer(res, 'base64');\n\n  } else if (node.nodeName === 'date') {\n    return new Date(node.childNodes[0].nodeValue);\n\n  } else if (node.nodeName === 'true') {\n    return true;\n\n  } else if (node.nodeName === 'false') {\n    return false;\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/util-deprecate/node.js":"\n/**\n * For Node.js, simply re-export the core `util.deprecate` function.\n */\n\nmodule.exports = require('util').deprecate;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmldom/dom-parser.js":"function DOMParser(options){\r\n\tthis.options = options ||{locator:{}};\r\n\t\r\n}\r\nDOMParser.prototype.parseFromString = function(source,mimeType){\t\r\n\tvar options = this.options;\r\n\tvar sax =  new XMLReader();\r\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\r\n\tvar errorHandler = options.errorHandler;\r\n\tvar locator = options.locator;\r\n\tvar defaultNSMap = options.xmlns||{};\r\n\tvar entityMap = {'lt':'<','gt':'>','amp':'&','quot':'\"','apos':\"'\"}\r\n\tif(locator){\r\n\t\tdomBuilder.setDocumentLocator(locator)\r\n\t}\r\n\t\r\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\r\n\tsax.domBuilder = options.domBuilder || domBuilder;\r\n\tif(/\\/x?html?$/.test(mimeType)){\r\n\t\tentityMap.nbsp = '\\xa0';\r\n\t\tentityMap.copy = '\\xa9';\r\n\t\tdefaultNSMap['']= 'http://www.w3.org/1999/xhtml';\r\n\t}\r\n\tif(source){\r\n\t\tsax.parse(source,defaultNSMap,entityMap);\r\n\t}else{\r\n\t\tsax.errorHandler.error(\"invalid document source\");\r\n\t}\r\n\treturn domBuilder.document;\r\n}\r\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\r\n\tif(!errorImpl){\r\n\t\tif(domBuilder instanceof DOMHandler){\r\n\t\t\treturn domBuilder;\r\n\t\t}\r\n\t\terrorImpl = domBuilder ;\r\n\t}\r\n\tvar errorHandler = {}\r\n\tvar isCallback = errorImpl instanceof Function;\r\n\tlocator = locator||{}\r\n\tfunction build(key){\r\n\t\tvar fn = errorImpl[key];\r\n\t\tif(!fn){\r\n\t\t\tif(isCallback){\r\n\t\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\r\n\t\t\t}else{\r\n\t\t\t\tvar i=arguments.length;\r\n\t\t\t\twhile(--i){\r\n\t\t\t\t\tif(fn = errorImpl[arguments[i]]){\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\terrorHandler[key] = fn && function(msg){\r\n\t\t\tfn(msg+_locator(locator));\r\n\t\t}||function(){};\r\n\t}\r\n\tbuild('warning','warn');\r\n\tbuild('error','warn','warning');\r\n\tbuild('fatalError','warn','warning','error');\r\n\treturn errorHandler;\r\n}\r\n/**\r\n * +ContentHandler+ErrorHandler\r\n * +LexicalHandler+EntityResolver2\r\n * -DeclHandler-DTDHandler \r\n * \r\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\r\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\r\n */\r\nfunction DOMHandler() {\r\n    this.cdata = false;\r\n}\r\nfunction position(locator,node){\r\n\tnode.lineNumber = locator.lineNumber;\r\n\tnode.columnNumber = locator.columnNumber;\r\n}\r\n/**\r\n * @see org.xml.sax.ContentHandler#startDocument\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\r\n */ \r\nDOMHandler.prototype = {\r\n\tstartDocument : function() {\r\n    \tthis.document = new DOMImplementation().createDocument(null, null, null);\r\n    \tif (this.locator) {\r\n        \tthis.document.documentURI = this.locator.systemId;\r\n    \t}\r\n\t},\r\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\r\n\t\tvar doc = this.document;\r\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\r\n\t    var len = attrs.length;\r\n\t    appendElement(this, el);\r\n\t    this.currentElement = el;\r\n\t    \r\n\t\tthis.locator && position(this.locator,el)\r\n\t    for (var i = 0 ; i < len; i++) {\r\n\t        var namespaceURI = attrs.getURI(i);\r\n\t        var value = attrs.getValue(i);\r\n\t        var qName = attrs.getQName(i);\r\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\r\n\t\t\tif( attr.getOffset){\r\n\t\t\t\tposition(attr.getOffset(1),attr)\r\n\t\t\t}\r\n\t\t\tattr.value = attr.nodeValue = value;\r\n\t\t\tel.setAttributeNode(attr)\r\n\t    }\r\n\t},\r\n\tendElement:function(namespaceURI, localName, qName) {\r\n\t\tvar current = this.currentElement\r\n\t    var tagName = current.tagName;\r\n\t    this.currentElement = current.parentNode;\r\n\t},\r\n\tstartPrefixMapping:function(prefix, uri) {\r\n\t},\r\n\tendPrefixMapping:function(prefix) {\r\n\t},\r\n\tprocessingInstruction:function(target, data) {\r\n\t    var ins = this.document.createProcessingInstruction(target, data);\r\n\t    this.locator && position(this.locator,ins)\r\n\t    appendElement(this, ins);\r\n\t},\r\n\tignorableWhitespace:function(ch, start, length) {\r\n\t},\r\n\tcharacters:function(chars, start, length) {\r\n\t\tchars = _toString.apply(this,arguments)\r\n\t\t//console.log(chars)\r\n\t\tif(this.currentElement && chars){\r\n\t\t\tif (this.cdata) {\r\n\t\t\t\tvar charNode = this.document.createCDATASection(chars);\r\n\t\t\t\tthis.currentElement.appendChild(charNode);\r\n\t\t\t} else {\r\n\t\t\t\tvar charNode = this.document.createTextNode(chars);\r\n\t\t\t\tthis.currentElement.appendChild(charNode);\r\n\t\t\t}\r\n\t\t\tthis.locator && position(this.locator,charNode)\r\n\t\t}\r\n\t},\r\n\tskippedEntity:function(name) {\r\n\t},\r\n\tendDocument:function() {\r\n\t\tthis.document.normalize();\r\n\t},\r\n\tsetDocumentLocator:function (locator) {\r\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\r\n\t    \tlocator.lineNumber = 0;\r\n\t    }\r\n\t},\r\n\t//LexicalHandler\r\n\tcomment:function(chars, start, length) {\r\n\t\tchars = _toString.apply(this,arguments)\r\n\t    var comm = this.document.createComment(chars);\r\n\t    this.locator && position(this.locator,comm)\r\n\t    appendElement(this, comm);\r\n\t},\r\n\t\r\n\tstartCDATA:function() {\r\n\t    //used in characters() methods\r\n\t    this.cdata = true;\r\n\t},\r\n\tendCDATA:function() {\r\n\t    this.cdata = false;\r\n\t},\r\n\t\r\n\tstartDTD:function(name, publicId, systemId) {\r\n\t\tvar impl = this.document.implementation;\r\n\t    if (impl && impl.createDocumentType) {\r\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\r\n\t        this.locator && position(this.locator,dt)\r\n\t        appendElement(this, dt);\r\n\t    }\r\n\t},\r\n\t/**\r\n\t * @see org.xml.sax.ErrorHandler\r\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\r\n\t */\r\n\twarning:function(error) {\r\n\t\tconsole.warn(error,_locator(this.locator));\r\n\t},\r\n\terror:function(error) {\r\n\t\tconsole.error(error,_locator(this.locator));\r\n\t},\r\n\tfatalError:function(error) {\r\n\t\tconsole.error(error,_locator(this.locator));\r\n\t    throw error;\r\n\t}\r\n}\r\nfunction _locator(l){\r\n\tif(l){\r\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\r\n\t}\r\n}\r\nfunction _toString(chars,start,length){\r\n\tif(typeof chars == 'string'){\r\n\t\treturn chars.substr(start,length)\r\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\r\n\t\tif(chars.length >= start+length || start){\r\n\t\t\treturn new java.lang.String(chars,start,length)+'';\r\n\t\t}\r\n\t\treturn chars;\r\n\t}\r\n}\r\n\r\n/*\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\r\n * used method of org.xml.sax.ext.LexicalHandler:\r\n *  #comment(chars, start, length)\r\n *  #startCDATA()\r\n *  #endCDATA()\r\n *  #startDTD(name, publicId, systemId)\r\n *\r\n *\r\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\r\n *  #endDTD()\r\n *  #startEntity(name)\r\n *  #endEntity(name)\r\n *\r\n *\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\r\n * IGNORED method of org.xml.sax.ext.DeclHandler\r\n * \t#attributeDecl(eName, aName, type, mode, value)\r\n *  #elementDecl(name, model)\r\n *  #externalEntityDecl(name, publicId, systemId)\r\n *  #internalEntityDecl(name, value)\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\r\n * IGNORED method of org.xml.sax.EntityResolver2\r\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\r\n *  #resolveEntity(publicId, systemId)\r\n *  #getExternalSubset(name, baseURI)\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\r\n * IGNORED method of org.xml.sax.DTDHandler\r\n *  #notationDecl(name, publicId, systemId) {};\r\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\r\n */\r\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\r\n\tDOMHandler.prototype[key] = function(){return null}\r\n})\r\n\r\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\r\nfunction appendElement (hander,node) {\r\n    if (!hander.currentElement) {\r\n        hander.document.appendChild(node);\r\n    } else {\r\n        hander.currentElement.appendChild(node);\r\n    }\r\n}//appendChild and setAttributeNS are preformance key\r\n\r\nif(typeof require == 'function'){\r\n\tvar XMLReader = require('./sax').XMLReader;\r\n\tvar DOMImplementation = exports.DOMImplementation = require('./dom').DOMImplementation;\r\n\texports.XMLSerializer = require('./dom').XMLSerializer ;\r\n\texports.DOMParser = DOMParser;\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmldom/sax.js":"//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\r\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\r\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\r\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\r\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\u00B7\\u0300-\\u036F\\\\ux203F-\\u2040]\");\r\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\r\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\r\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\r\n\r\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_V\r\n//S_ATTR_S,\tS_E,\tS_S,\tS_C\r\nvar S_TAG = 0;//tag name offerring\r\nvar S_ATTR = 1;//attr name offerring \r\nvar S_ATTR_S=2;//attr name end and space offer\r\nvar S_EQ = 3;//=space?\r\nvar S_V = 4;//attr value(no quot value only)\r\nvar S_E = 5;//attr value end and no space(quot end)\r\nvar S_S = 6;//(attr value end || tag end ) && (space offer)\r\nvar S_C = 7;//closed el<el />\r\n\r\nfunction XMLReader(){\r\n\t\r\n}\r\n\r\nXMLReader.prototype = {\r\n\tparse:function(source,defaultNSMap,entityMap){\r\n\t\tvar domBuilder = this.domBuilder;\r\n\t\tdomBuilder.startDocument();\r\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\r\n\t\tparse(source,defaultNSMap,entityMap,\r\n\t\t\t\tdomBuilder,this.errorHandler);\r\n\t\tdomBuilder.endDocument();\r\n\t}\r\n}\r\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\r\n  function fixedFromCharCode(code) {\r\n\t\t// String.prototype.fromCharCode does not supports\r\n\t\t// > 2 bytes unicode chars directly\r\n\t\tif (code > 0xffff) {\r\n\t\t\tcode -= 0x10000;\r\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\r\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\r\n\r\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\r\n\t\t} else {\r\n\t\t\treturn String.fromCharCode(code);\r\n\t\t}\r\n\t}\r\n\tfunction entityReplacer(a){\r\n\t\tvar k = a.slice(1,-1);\r\n\t\tif(k in entityMap){\r\n\t\t\treturn entityMap[k]; \r\n\t\t}else if(k.charAt(0) === '#'){\r\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\r\n\t\t}else{\r\n\t\t\terrorHandler.error('entity not found:'+a);\r\n\t\t\treturn a;\r\n\t\t}\r\n\t}\r\n\tfunction appendText(end){//has some bugs\r\n\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\tlocator&&position(start);\r\n\t\tdomBuilder.characters(xt,0,end-start);\r\n\t\tstart = end\r\n\t}\r\n\tfunction position(start,m){\r\n\t\twhile(start>=endPos && (m = linePattern.exec(source))){\r\n\t\t\tstartPos = m.index;\r\n\t\t\tendPos = startPos + m[0].length;\r\n\t\t\tlocator.lineNumber++;\r\n\t\t\t//console.log('line++:',locator,startPos,endPos)\r\n\t\t}\r\n\t\tlocator.columnNumber = start-startPos+1;\r\n\t}\r\n\tvar startPos = 0;\r\n\tvar endPos = 0;\r\n\tvar linePattern = /.+(?:\\r\\n?|\\n)|.*$/g\r\n\tvar locator = domBuilder.locator;\r\n\t\r\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\r\n\tvar closeMap = {};\r\n\tvar start = 0;\r\n\twhile(true){\r\n\t\tvar i = source.indexOf('<',start);\r\n\t\tif(i<0){\r\n\t\t\tif(!source.substr(start).match(/^\\s*$/)){\r\n\t\t\t\tvar doc = domBuilder.document;\r\n    \t\t\tvar text = doc.createTextNode(source.substr(start));\r\n    \t\t\tdoc.appendChild(text);\r\n    \t\t\tdomBuilder.currentElement = text;\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(i>start){\r\n\t\t\tappendText(i);\r\n\t\t}\r\n\t\tswitch(source.charAt(i+1)){\r\n\t\tcase '/':\r\n\t\t\tvar end = source.indexOf('>',i+3);\r\n\t\t\tvar tagName = source.substring(i+2,end);\r\n\t\t\tvar config = parseStack.pop();\r\n\t\t\tvar localNSMap = config.localNSMap;\r\n\t\t\t\r\n\t        if(config.tagName != tagName){\r\n\t            errorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName );\r\n\t        }\r\n\t\t\tdomBuilder.endElement(config.uri,config.localName,tagName);\r\n\t\t\tif(localNSMap){\r\n\t\t\t\tfor(var prefix in localNSMap){\r\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix) ;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tend++;\r\n\t\t\tbreak;\r\n\t\t\t// end elment\r\n\t\tcase '?':// <?...?>\r\n\t\t\tlocator&&position(i);\r\n\t\t\tend = parseInstruction(source,i,domBuilder);\r\n\t\t\tbreak;\r\n\t\tcase '!':// <!doctype,<![CDATA,<!--\r\n\t\t\tlocator&&position(i);\r\n\t\t\tend = parseDCC(source,i,domBuilder,errorHandler);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\ttry{\r\n\t\t\t\tlocator&&position(i);\r\n\t\t\t\t\r\n\t\t\t\tvar el = new ElementAttributes();\r\n\t\t\t\t\r\n\t\t\t\t//elStartEnd\r\n\t\t\t\tvar end = parseElementStartPart(source,i,el,entityReplacer,errorHandler);\r\n\t\t\t\tvar len = el.length;\r\n\t\t\t\t//position fixed\r\n\t\t\t\tif(len && locator){\r\n\t\t\t\t\tvar backup = copyLocator(locator,{});\r\n\t\t\t\t\tfor(var i = 0;i<len;i++){\r\n\t\t\t\t\t\tvar a = el[i];\r\n\t\t\t\t\t\tposition(a.offset);\r\n\t\t\t\t\t\ta.offset = copyLocator(locator,{});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcopyLocator(backup,locator);\r\n\t\t\t\t}\r\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\r\n\t\t\t\t\tel.closed = true;\r\n\t\t\t\t\tif(!entityMap.nbsp){\r\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tappendElement(el,domBuilder,parseStack);\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tif(el.uri === 'http://www.w3.org/1999/xhtml' && !el.closed){\r\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tend++;\r\n\t\t\t\t}\r\n\t\t\t}catch(e){\r\n\t\t\t\terrorHandler.error('element parse error: '+e);\r\n\t\t\t\tend = -1;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tif(end<0){\r\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\r\n\t\t\tappendText(i+1);\r\n\t\t}else{\r\n\t\t\tstart = end;\r\n\t\t}\r\n\t}\r\n}\r\nfunction copyLocator(f,t){\r\n\tt.lineNumber = f.lineNumber;\r\n\tt.columnNumber = f.columnNumber;\r\n\treturn t;\r\n\t\r\n}\r\n\r\n/**\r\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\r\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\r\n */\r\nfunction parseElementStartPart(source,start,el,entityReplacer,errorHandler){\r\n\tvar attrName;\r\n\tvar value;\r\n\tvar p = ++start;\r\n\tvar s = S_TAG;//status\r\n\twhile(true){\r\n\t\tvar c = source.charAt(p);\r\n\t\tswitch(c){\r\n\t\tcase '=':\r\n\t\t\tif(s === S_ATTR){//attrName\r\n\t\t\t\tattrName = source.slice(start,p);\r\n\t\t\t\ts = S_EQ;\r\n\t\t\t}else if(s === S_ATTR_S){\r\n\t\t\t\ts = S_EQ;\r\n\t\t\t}else{\r\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\r\n\t\t\t\tthrow new Error('attribute equal must after attrName');\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase '\\'':\r\n\t\tcase '\"':\r\n\t\t\tif(s === S_EQ){//equal\r\n\t\t\t\tstart = p+1;\r\n\t\t\t\tp = source.indexOf(c,start)\r\n\t\t\t\tif(p>0){\r\n\t\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\t\tel.add(attrName,value,start-1);\r\n\t\t\t\t\ts = S_E;\r\n\t\t\t\t}else{\r\n\t\t\t\t\t//fatalError: no end quot match\r\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\r\n\t\t\t\t}\r\n\t\t\t}else if(s == S_V){\r\n\t\t\t\tvalue = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\t//console.log(attrName,value,start,p)\r\n\t\t\t\tel.add(attrName,value,start);\r\n\t\t\t\t//console.dir(el)\r\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\r\n\t\t\t\tstart = p+1;\r\n\t\t\t\ts = S_E\r\n\t\t\t}else{\r\n\t\t\t\t//fatalError: no equal before\r\n\t\t\t\tthrow new Error('attribute value must after \"=\"');\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase '/':\r\n\t\t\tswitch(s){\r\n\t\t\tcase S_TAG:\r\n\t\t\t\tel.setTagName(source.slice(start,p));\r\n\t\t\tcase S_E:\r\n\t\t\tcase S_S:\r\n\t\t\tcase S_C:\r\n\t\t\t\ts = S_C;\r\n\t\t\t\tel.closed = true;\r\n\t\t\tcase S_V:\r\n\t\t\tcase S_ATTR:\r\n\t\t\tcase S_ATTR_S:\r\n\t\t\t\tbreak;\r\n\t\t\t//case S_EQ:\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\")\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase ''://end document\r\n\t\t\t//throw new Error('unexpected end of input')\r\n\t\t\terrorHandler.error('unexpected end of input');\r\n\t\tcase '>':\r\n\t\t\tswitch(s){\r\n\t\t\tcase S_TAG:\r\n\t\t\t\tel.setTagName(source.slice(start,p));\r\n\t\t\tcase S_E:\r\n\t\t\tcase S_S:\r\n\t\t\tcase S_C:\r\n\t\t\t\tbreak;//normal\r\n\t\t\tcase S_V://Compatible state\r\n\t\t\tcase S_ATTR:\r\n\t\t\t\tvalue = source.slice(start,p);\r\n\t\t\t\tif(value.slice(-1) === '/'){\r\n\t\t\t\t\tel.closed  = true;\r\n\t\t\t\t\tvalue = value.slice(0,-1)\r\n\t\t\t\t}\r\n\t\t\tcase S_ATTR_S:\r\n\t\t\t\tif(s === S_ATTR_S){\r\n\t\t\t\t\tvalue = attrName;\r\n\t\t\t\t}\r\n\t\t\t\tif(s == S_V){\r\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\r\n\t\t\t\t\tel.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)\r\n\t\t\t\t}else{\r\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\r\n\t\t\t\t\tel.add(value,value,start)\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase S_EQ:\r\n\t\t\t\tthrow new Error('attribute value missed!!');\r\n\t\t\t}\r\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\r\n\t\t\treturn p;\r\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\r\n\t\tcase '\\u0080':\r\n\t\t\tc = ' ';\r\n\t\tdefault:\r\n\t\t\tif(c<= ' '){//space\r\n\t\t\t\tswitch(s){\r\n\t\t\t\tcase S_TAG:\r\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\r\n\t\t\t\t\ts = S_S;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_ATTR:\r\n\t\t\t\t\tattrName = source.slice(start,p)\r\n\t\t\t\t\ts = S_ATTR_S;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_V:\r\n\t\t\t\t\tvar value = source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\r\n\t\t\t\t\tel.add(attrName,value,start)\r\n\t\t\t\tcase S_E:\r\n\t\t\t\t\ts = S_S;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t//case S_S:\r\n\t\t\t\t//case S_EQ:\r\n\t\t\t\t//case S_ATTR_S:\r\n\t\t\t\t//\tvoid();break;\r\n\t\t\t\t//case S_C:\r\n\t\t\t\t\t//ignore warning\r\n\t\t\t\t}\r\n\t\t\t}else{//not space\r\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_V\r\n//S_ATTR_S,\tS_E,\tS_S,\tS_C\r\n\t\t\t\tswitch(s){\r\n\t\t\t\t//case S_TAG:void();break;\r\n\t\t\t\t//case S_ATTR:void();break;\r\n\t\t\t\t//case S_V:void();break;\r\n\t\t\t\tcase S_ATTR_S:\r\n\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead!!')\r\n\t\t\t\t\tel.add(attrName,attrName,start);\r\n\t\t\t\t\tstart = p;\r\n\t\t\t\t\ts = S_ATTR;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_E:\r\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\r\n\t\t\t\tcase S_S:\r\n\t\t\t\t\ts = S_ATTR;\r\n\t\t\t\t\tstart = p;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_EQ:\r\n\t\t\t\t\ts = S_V;\r\n\t\t\t\t\tstart = p;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase S_C:\r\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tp++;\r\n\t}\r\n}\r\n/**\r\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\r\n */\r\nfunction appendElement(el,domBuilder,parseStack){\r\n\tvar tagName = el.tagName;\r\n\tvar localNSMap = null;\r\n\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\r\n\tvar i = el.length;\r\n\twhile(i--){\r\n\t\tvar a = el[i];\r\n\t\tvar qName = a.qName;\r\n\t\tvar value = a.value;\r\n\t\tvar nsp = qName.indexOf(':');\r\n\t\tif(nsp>0){\r\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\r\n\t\t\tvar localName = qName.slice(nsp+1);\r\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\r\n\t\t}else{\r\n\t\t\tlocalName = qName;\r\n\t\t\tprefix = null\r\n\t\t\tnsPrefix = qName === 'xmlns' && ''\r\n\t\t}\r\n\t\t//can not set prefix,because prefix !== ''\r\n\t\ta.localName = localName ;\r\n\t\t//prefix == null for no ns prefix attribute \r\n\t\tif(nsPrefix !== false){//hack!!\r\n\t\t\tif(localNSMap == null){\r\n\t\t\t\tlocalNSMap = {}\r\n\t\t\t\t//console.log(currentNSMap,0)\r\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\r\n\t\t\t\t//console.log(currentNSMap,1)\r\n\t\t\t}\r\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\r\n\t\t\ta.uri = 'http://www.w3.org/2000/xmlns/'\r\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value) \r\n\t\t}\r\n\t}\r\n\tvar i = el.length;\r\n\twhile(i--){\r\n\t\ta = el[i];\r\n\t\tvar prefix = a.prefix;\r\n\t\tif(prefix){//no prefix attribute has no namespace\r\n\t\t\tif(prefix === 'xml'){\r\n\t\t\t\ta.uri = 'http://www.w3.org/XML/1998/namespace';\r\n\t\t\t}if(prefix !== 'xmlns'){\r\n\t\t\t\ta.uri = currentNSMap[prefix]\r\n\t\t\t\t\r\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvar nsp = tagName.indexOf(':');\r\n\tif(nsp>0){\r\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\r\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\r\n\t}else{\r\n\t\tprefix = null;//important!!\r\n\t\tlocalName = el.localName = tagName;\r\n\t}\r\n\t//no prefix element has default namespace\r\n\tvar ns = el.uri = currentNSMap[prefix || ''];\r\n\tdomBuilder.startElement(ns,localName,tagName,el);\r\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\r\n\t//localNSMap = null\r\n\tif(el.closed){\r\n\t\tdomBuilder.endElement(ns,localName,tagName);\r\n\t\tif(localNSMap){\r\n\t\t\tfor(prefix in localNSMap){\r\n\t\t\t\tdomBuilder.endPrefixMapping(prefix) \r\n\t\t\t}\r\n\t\t}\r\n\t}else{\r\n\t\tel.currentNSMap = currentNSMap;\r\n\t\tel.localNSMap = localNSMap;\r\n\t\tparseStack.push(el);\r\n\t}\r\n}\r\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\r\n\tif(/^(?:script|textarea)$/i.test(tagName)){\r\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\r\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\r\n\t\tif(/[&<]/.test(text)){\r\n\t\t\tif(/^script$/i.test(tagName)){\r\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\r\n\t\t\t\t\t//lexHandler.startCDATA();\r\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\r\n\t\t\t\t\t//lexHandler.endCDATA();\r\n\t\t\t\t\treturn elEndStart;\r\n\t\t\t\t//}\r\n\t\t\t}//}else{//text area\r\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\r\n\t\t\t\tdomBuilder.characters(text,0,text.length);\r\n\t\t\t\treturn elEndStart;\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\treturn elStartEnd+1;\r\n}\r\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\r\n\t//if(tagName in closeMap){\r\n\tvar pos = closeMap[tagName];\r\n\tif(pos == null){\r\n\t\t//console.log(tagName)\r\n\t\tpos = closeMap[tagName] = source.lastIndexOf('</'+tagName+'>')\r\n\t}\r\n\treturn pos<elStartEnd;\r\n\t//} \r\n}\r\nfunction _copy(source,target){\r\n\tfor(var n in source){target[n] = source[n]}\r\n}\r\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\r\n\tvar next= source.charAt(start+2)\r\n\tswitch(next){\r\n\tcase '-':\r\n\t\tif(source.charAt(start + 3) === '-'){\r\n\t\t\tvar end = source.indexOf('-->',start+4);\r\n\t\t\t//append comment source.substring(4,end)//<!--\r\n\t\t\tif(end>start){\r\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\r\n\t\t\t\treturn end+3;\r\n\t\t\t}else{\r\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\t//error\r\n\t\t\treturn -1;\r\n\t\t}\r\n\tdefault:\r\n\t\tif(source.substr(start+3,6) == 'CDATA['){\r\n\t\t\tvar end = source.indexOf(']]>',start+9);\r\n\t\t\tdomBuilder.startCDATA();\r\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\r\n\t\t\tdomBuilder.endCDATA() \r\n\t\t\treturn end+3;\r\n\t\t}\r\n\t\t//<!DOCTYPE\r\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) \r\n\t\tvar matchs = split(source,start);\r\n\t\tvar len = matchs.length;\r\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\r\n\t\t\tvar name = matchs[1][0];\r\n\t\t\tvar pubid = len>3 && /^public$/i.test(matchs[2][0]) && matchs[3][0]\r\n\t\t\tvar sysid = len>4 && matchs[4][0];\r\n\t\t\tvar lastMatch = matchs[len-1]\r\n\t\t\tdomBuilder.startDTD(name,pubid && pubid.replace(/^(['\"])(.*?)\\1$/,'$2'),\r\n\t\t\t\t\tsysid && sysid.replace(/^(['\"])(.*?)\\1$/,'$2'));\r\n\t\t\tdomBuilder.endDTD();\r\n\t\t\t\r\n\t\t\treturn lastMatch.index+lastMatch[0].length\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\n\r\n\r\nfunction parseInstruction(source,start,domBuilder){\r\n\tvar end = source.indexOf('?>',start);\r\n\tif(end){\r\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\r\n\t\tif(match){\r\n\t\t\tvar len = match[0].length;\r\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\r\n\t\t\treturn end+2;\r\n\t\t}else{//error\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\n/**\r\n * @param source\r\n */\r\nfunction ElementAttributes(source){\r\n\t\r\n}\r\nElementAttributes.prototype = {\r\n\tsetTagName:function(tagName){\r\n\t\tif(!tagNamePattern.test(tagName)){\r\n\t\t\tthrow new Error('invalid tagName:'+tagName)\r\n\t\t}\r\n\t\tthis.tagName = tagName\r\n\t},\r\n\tadd:function(qName,value,offset){\r\n\t\tif(!tagNamePattern.test(qName)){\r\n\t\t\tthrow new Error('invalid attribute:'+qName)\r\n\t\t}\r\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\r\n\t},\r\n\tlength:0,\r\n\tgetLocalName:function(i){return this[i].localName},\r\n\tgetOffset:function(i){return this[i].offset},\r\n\tgetQName:function(i){return this[i].qName},\r\n\tgetURI:function(i){return this[i].uri},\r\n\tgetValue:function(i){return this[i].value}\r\n//\t,getIndex:function(uri, localName)){\r\n//\t\tif(localName){\r\n//\t\t\t\r\n//\t\t}else{\r\n//\t\t\tvar qName = uri\r\n//\t\t}\r\n//\t},\r\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\r\n//\tgetType:function(uri,localName){}\r\n//\tgetType:function(i){},\r\n}\r\n\r\n\r\n\r\n\r\nfunction _set_proto_(thiz,parent){\r\n\tthiz.__proto__ = parent;\r\n\treturn thiz;\r\n}\r\nif(!(_set_proto_({},_set_proto_.prototype) instanceof _set_proto_)){\r\n\t_set_proto_ = function(thiz,parent){\r\n\t\tfunction p(){};\r\n\t\tp.prototype = parent;\r\n\t\tp = new p();\r\n\t\tfor(parent in thiz){\r\n\t\t\tp[parent] = thiz[parent];\r\n\t\t}\r\n\t\treturn p;\r\n\t}\r\n}\r\n\r\nfunction split(source,start){\r\n\tvar match;\r\n\tvar buf = [];\r\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\r\n\treg.lastIndex = start;\r\n\treg.exec(source);//skip <\r\n\twhile(match = reg.exec(source)){\r\n\t\tbuf.push(match);\r\n\t\tif(match[1])return buf;\r\n\t}\r\n}\r\n\r\nif(typeof require == 'function'){\r\n\texports.XMLReader = XMLReader;\r\n}\r\n\r\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmldom/dom.js":"/*\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n */\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tdest[p] = src[p];\n\t}\n}\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(Object.create){\n\t\tvar ppt = Object.create(Super.prototype)\n\t\tpt.__proto__ = ppt;\n\t}\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknow Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\nvar htmlns = 'http://www.w3.org/1999/xhtml' ;\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0, \n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long \n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index. \n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t}\n};\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n/**\n * \n * Objects implementing the NamedNodeMap interface are used to represent collections of nodes that can be accessed by name. Note that NamedNodeMap does not inherit from NodeList; NamedNodeMaps are not maintained in any particular order. Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a NamedNodeMap, and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities \n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow DOMException(NOT_FOUND_ERR,new Error())\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t\t\n\t\t\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\t\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n/**\n * @see http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490\n */\nfunction DOMImplementation(/* Object */ features) {\n\tthis._features = {};\n\tif (features) {\n\t\tfor (var feature in features) {\n\t\t\t this._features = features[feature];\n\t\t}\n\t}\n};\n\nDOMImplementation.prototype = {\n\thasFeature: function(/* string */ feature, /* string */ version) {\n\t\tvar versions = this._features[feature.toLowerCase()];\n\t\tif (versions && (!version || version in versions)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateDocument:function(namespaceURI,  qualifiedName, doctype){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR,WRONG_DOCUMENT_ERR\n\t\tvar doc = new Document();\n\t\tdoc.doctype = doctype;\n\t\tif(doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tif(qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI,qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateDocumentType:function(qualifiedName, publicId, systemId){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId;\n\t\tnode.systemId = systemId;\n\t\t// Introduced in DOM Level 2:\n\t\t//readonly attribute DOMString        internalSubset;\n\t\t\n\t\t//TODO:..\n\t\t//  readonly attribute NamedNodeMap     entities;\n\t\t//  readonly attribute NamedNodeMap     notations;\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises \n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises \n\t\tthis.insertBefore(newChild,oldChild);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n    \t\t\t\tif(map[n] == namespaceURI){\n    \t\t\t\t\treturn n;\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == 2?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(prefix in map){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == 2?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n}\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns == 'http://www.w3.org/2000/xmlns/'){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns == 'http://www.w3.org/2000/xmlns/'){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\nfunction _onUpdateChild(doc,el,newChild){\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif(newChild){\n\t\t\tcs[cs.length++] = newChild;\n\t\t}else{\n\t\t\t//console.log(1)\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile(child){\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild =child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t}\n\t}\n}\n\n/**\n * attributes;\n * children;\n * \n * writeable properties:\n * nodeValue,Attr:value,CharacterData:data\n * prefix\n */\nfunction _removeChild(parentNode,child){\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif(previous){\n\t\tprevious.nextSibling = next;\n\t}else{\n\t\tparentNode.firstChild = next\n\t}\n\tif(next){\n\t\tnext.previousSibling = previous;\n\t}else{\n\t\tparentNode.lastChild = previous;\n\t}\n\t_onUpdateChild(parentNode.ownerDocument,parentNode);\n\treturn child;\n}\n/**\n * preformance key(refChild == null)\n */\nfunction _insertBefore(parentNode,newChild,nextChild){\n\tvar cp = newChild.parentNode;\n\tif(cp){\n\t\tcp.removeChild(newChild);//remove and update\n\t}\n\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = newChild.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn newChild;\n\t\t}\n\t\tvar newLast = newChild.lastChild;\n\t}else{\n\t\tnewFirst = newLast = newChild;\n\t}\n\tvar pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = nextChild;\n\t\n\t\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparentNode.firstChild = newFirst;\n\t}\n\tif(nextChild == null){\n\t\tparentNode.lastChild = newLast;\n\t}else{\n\t\tnextChild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parentNode;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);\n\t//console.log(parentNode.lastChild.nextSibling == null)\n\tif (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnewChild.firstChild = newChild.lastChild = null;\n\t}\n\treturn newChild;\n}\nfunction _appendSingleChild(parentNode,newChild){\n\tvar cp = newChild.parentNode;\n\tif(cp){\n\t\tvar pre = parentNode.lastChild;\n\t\tcp.removeChild(newChild);//remove and update\n\t\tvar pre = parentNode.lastChild;\n\t}\n\tvar pre = parentNode.lastChild;\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = pre;\n\tnewChild.nextSibling = null;\n\tif(pre){\n\t\tpre.nextSibling = newChild;\n\t}else{\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);\n\treturn newChild;\n\t//console.log(\"__aa\",parentNode.lastChild.nextSibling == null)\n}\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\t\n\tinsertBefore :  function(newChild, refChild){//raises \n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\tif(this.documentElement == null && newChild.nodeType == 1){\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t\t\n\t\treturn _insertBefore(this,newChild,refChild),(newChild.ownerDocument = this),newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == 1){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\t\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\t\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\t\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\t\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && node.namespaceURI === namespaceURI && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\t\n\t},\n\tappendChild:function(newChild){\n\t\t//if(!(newChild instanceof CharacterData)){\n\t\t\tthrow new Error(ExceptionMessage[3])\n\t\t//}\n\t\treturn Node.prototype.appendChild.apply(this,arguments)\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node){\n\tvar buf = [];\n\tserializeToString(node,buf);\n\treturn buf.join('');\n}\nNode.prototype.toString =function(){\n\treturn XMLSerializer.prototype.serializeToString(this);\n}\nfunction serializeToString(node,buf){\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\t\tvar isHTML = htmlns === node.namespaceURI\n\t\tbuf.push('<',nodeName);\n\t\tfor(var i=0;i<len;i++){\n\t\t\tserializeToString(attrs.item(i),buf,isHTML);\n\t\t}\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\tif(child){\n\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child,buf);\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',nodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child,buf);\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn buf.push(' ',node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');\n\tcase TEXT_NODE:\n\t\treturn buf.push(node.data.replace(/[<&]/g,_xmlEncoder));\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC \"',pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push( '\" \"',sysid);\n\t\t\t}\n\t\t\tbuf.push('\">');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM \"',sysid,'\">');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor(var n in node){\n\t\tvar v = node[n];\n\t\tif(typeof v != 'object' ){\n\t\t\tif(v != node2[n]){\n\t\t\t\tnode2[n] = v;\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase 1:\n\t\t\t\tcase 11:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t//TODO:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = value;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase 1:\n\t\t\tcase 11:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\nif(typeof require == 'function'){\n\texports.DOMImplementation = DOMImplementation;\n\texports.XMLSerializer = XMLSerializer;\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/lib/build.js":"\n/**\n * Module dependencies.\n */\n\nvar base64 = require('base64-js');\nvar xmlbuilder = require('xmlbuilder');\n\n/**\n * Module exports.\n */\n\nexports.build = build;\n\n/**\n * Accepts a `Date` instance and returns an ISO date string.\n *\n * @param {Date} d - Date instance to serialize\n * @returns {String} ISO date string representation of `d`\n * @api private\n */\n\nfunction ISODateString(d){\n  function pad(n){\n    return n < 10 ? '0' + n : n;\n  }\n  return d.getUTCFullYear()+'-'\n    + pad(d.getUTCMonth()+1)+'-'\n    + pad(d.getUTCDate())+'T'\n    + pad(d.getUTCHours())+':'\n    + pad(d.getUTCMinutes())+':'\n    + pad(d.getUTCSeconds())+'Z';\n}\n\n/**\n * Returns the internal \"type\" of `obj` via the\n * `Object.prototype.toString()` trick.\n *\n * @param {Mixed} obj - any value\n * @returns {String} the internal \"type\" name\n * @api private\n */\n\nvar toString = Object.prototype.toString;\nfunction type (obj) {\n  var m = toString.call(obj).match(/\\[object (.*)\\]/);\n  return m ? m[1] : m;\n}\n\n/**\n * Generate an XML plist string from the input object `obj`.\n *\n * @param {Object} obj - the object to convert\n * @param {Object} [opts] - optional options object\n * @returns {String} converted plist XML string\n * @api public\n */\n\nfunction build (obj, opts) {\n  var XMLHDR = {\n    version: '1.0',\n    encoding: 'UTF-8'\n  };\n\n  var XMLDTD = {\n    pubid: '-//Apple//DTD PLIST 1.0//EN',\n    sysid: 'http://www.apple.com/DTDs/PropertyList-1.0.dtd'\n  };\n\n  var doc = xmlbuilder.create('plist');\n\n  doc.dec(XMLHDR.version, XMLHDR.encoding, XMLHDR.standalone);\n  doc.dtd(XMLDTD.pubid, XMLDTD.sysid);\n  doc.att('version', '1.0');\n\n  walk_obj(obj, doc);\n\n  if (!opts) opts = {};\n  // default `pretty` to `true`\n  opts.pretty = opts.pretty !== false;\n  return doc.end(opts);\n}\n\n/**\n * depth first, recursive traversal of a javascript object. when complete,\n * next_child contains a reference to the build XML object.\n *\n * @api private\n */\n\nfunction walk_obj(next, next_child) {\n  var tag_type, i, prop;\n  var name = type(next);\n\n  if (Array.isArray(next)) {\n    next_child = next_child.ele('array');\n    for (i = 0; i < next.length; i++) {\n      walk_obj(next[i], next_child);\n    }\n\n  } else if (Buffer.isBuffer(next)) {\n    next_child.ele('data').raw(next.toString('base64'));\n\n  } else if ('Object' == name) {\n    next_child = next_child.ele('dict');\n    for (prop in next) {\n      if (next.hasOwnProperty(prop)) {\n        next_child.ele('key').txt(prop);\n        walk_obj(next[prop], next_child);\n      }\n    }\n\n  } else if ('Number' == name) {\n    // detect if this is an integer or real\n    // TODO: add an ability to force one way or another via a \"cast\"\n    tag_type = (next % 1 === 0) ? 'integer' : 'real';\n    next_child.ele(tag_type).txt(next.toString());\n\n  } else if ('Date' == name) {\n    next_child.ele('date').txt(ISODateString(new Date(next)));\n\n  } else if ('Boolean' == name) {\n    next_child.ele(next ? 'true' : 'false');\n\n  } else if ('String' == name) {\n    next_child.ele('string').txt(next);\n\n  } else if ('ArrayBuffer' == name) {\n    next_child.ele('data').raw(base64.fromByteArray(next));\n\n  } else if (next.buffer && 'ArrayBuffer' == type(next.buffer)) {\n    // a typed array\n    next_child.ele('data').raw(base64.fromByteArray(new Uint8Array(next.buffer), next_child));\n\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/base64-js/lib/b64.js":"var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar ZERO   = '0'.charCodeAt(0)\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\tmodule.exports.toByteArray = b64ToByteArray\n\tmodule.exports.fromByteArray = uint8ToBase64\n}())\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/lib/index.js":"// Generated by CoffeeScript 1.6.3\n(function() {\n  var XMLBuilder, _;\n\n  _ = require('lodash-node');\n\n  XMLBuilder = require('./XMLBuilder');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    options = _.extend({}, xmldec, doctype, options);\n    return new XMLBuilder(name, options).root();\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/index.js":"/**\n * @license\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar arrays = require('./arrays'),\n    chaining = require('./chaining'),\n    collections = require('./collections'),\n    functions = require('./functions'),\n    objects = require('./objects'),\n    utilities = require('./utilities'),\n    forEach = require('./collections/forEach'),\n    forOwn = require('./objects/forOwn'),\n    isArray = require('./objects/isArray'),\n    lodashWrapper = require('./internals/lodashWrapper'),\n    mixin = require('./utilities/mixin'),\n    support = require('./support'),\n    templateSettings = require('./utilities/templateSettings');\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps the given value to enable intuitive\n * method chaining.\n *\n * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n * and `unshift`\n *\n * Chaining is supported in custom builds as long as the `value` method is\n * implicitly or explicitly included in the build.\n *\n * The chainable wrapper functions are:\n * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,\n * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,\n * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,\n * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,\n * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,\n * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,\n * and `zip`\n *\n * The non-chainable wrapper functions are:\n * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,\n * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,\n * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,\n * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,\n * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,\n * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,\n * `template`, `unescape`, `uniqueId`, and `value`\n *\n * The wrapper functions `first` and `last` return wrapped values when `n` is\n * provided, otherwise they return unwrapped values.\n *\n * Explicit chaining can be enabled by using the `_.chain` method.\n *\n * @name _\n * @constructor\n * @category Chaining\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns a `lodash` instance.\n * @example\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // returns an unwrapped value\n * wrapped.reduce(function(sum, num) {\n *   return sum + num;\n * });\n * // => 6\n *\n * // returns a wrapped value\n * var squares = wrapped.map(function(num) {\n *   return num * num;\n * });\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor\n  return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))\n   ? value\n   : new lodashWrapper(value);\n}\n// ensure `new lodashWrapper` is an instance of `lodash`\nlodashWrapper.prototype = lodash.prototype;\n\n// wrap `_.mixin` so it works when provided only one argument\nmixin = (function(fn) {\n  var functions = objects.functions;\n  return function(object, source, options) {\n    if (!source || (!options && !functions(source).length)) {\n      if (options == null) {\n        options = source;\n      }\n      source = object;\n      object = lodash;\n    }\n    return fn(object, source, options);\n  };\n}(mixin));\n\n// add functions that return wrapped values when chaining\nlodash.after = functions.after;\nlodash.assign = objects.assign;\nlodash.at = collections.at;\nlodash.bind = functions.bind;\nlodash.bindAll = functions.bindAll;\nlodash.bindKey = functions.bindKey;\nlodash.chain = chaining.chain;\nlodash.compact = arrays.compact;\nlodash.compose = functions.compose;\nlodash.constant = utilities.constant;\nlodash.countBy = collections.countBy;\nlodash.create = objects.create;\nlodash.createCallback = functions.createCallback;\nlodash.curry = functions.curry;\nlodash.debounce = functions.debounce;\nlodash.defaults = objects.defaults;\nlodash.defer = functions.defer;\nlodash.delay = functions.delay;\nlodash.difference = arrays.difference;\nlodash.filter = collections.filter;\nlodash.flatten = arrays.flatten;\nlodash.forEach = forEach;\nlodash.forEachRight = collections.forEachRight;\nlodash.forIn = objects.forIn;\nlodash.forInRight = objects.forInRight;\nlodash.forOwn = forOwn;\nlodash.forOwnRight = objects.forOwnRight;\nlodash.functions = objects.functions;\nlodash.groupBy = collections.groupBy;\nlodash.indexBy = collections.indexBy;\nlodash.initial = arrays.initial;\nlodash.intersection = arrays.intersection;\nlodash.invert = objects.invert;\nlodash.invoke = collections.invoke;\nlodash.keys = objects.keys;\nlodash.map = collections.map;\nlodash.mapValues = objects.mapValues;\nlodash.max = collections.max;\nlodash.memoize = functions.memoize;\nlodash.merge = objects.merge;\nlodash.min = collections.min;\nlodash.omit = objects.omit;\nlodash.once = functions.once;\nlodash.pairs = objects.pairs;\nlodash.partial = functions.partial;\nlodash.partialRight = functions.partialRight;\nlodash.pick = objects.pick;\nlodash.pluck = collections.pluck;\nlodash.property = utilities.property;\nlodash.pull = arrays.pull;\nlodash.range = arrays.range;\nlodash.reject = collections.reject;\nlodash.remove = arrays.remove;\nlodash.rest = arrays.rest;\nlodash.shuffle = collections.shuffle;\nlodash.sortBy = collections.sortBy;\nlodash.tap = chaining.tap;\nlodash.throttle = functions.throttle;\nlodash.times = utilities.times;\nlodash.toArray = collections.toArray;\nlodash.transform = objects.transform;\nlodash.union = arrays.union;\nlodash.uniq = arrays.uniq;\nlodash.values = objects.values;\nlodash.where = collections.where;\nlodash.without = arrays.without;\nlodash.wrap = functions.wrap;\nlodash.xor = arrays.xor;\nlodash.zip = arrays.zip;\nlodash.zipObject = arrays.zipObject;\n\n// add aliases\nlodash.collect = collections.map;\nlodash.drop = arrays.rest;\nlodash.each = forEach;\nlodash.eachRight = collections.forEachRight;\nlodash.extend = objects.assign;\nlodash.methods = objects.functions;\nlodash.object = arrays.zipObject;\nlodash.select = collections.filter;\nlodash.tail = arrays.rest;\nlodash.unique = arrays.uniq;\nlodash.unzip = arrays.zip;\n\n// add functions to `lodash.prototype`\nmixin(lodash);\n\n// add functions that return unwrapped values when chaining\nlodash.clone = objects.clone;\nlodash.cloneDeep = objects.cloneDeep;\nlodash.contains = collections.contains;\nlodash.escape = utilities.escape;\nlodash.every = collections.every;\nlodash.find = collections.find;\nlodash.findIndex = arrays.findIndex;\nlodash.findKey = objects.findKey;\nlodash.findLast = collections.findLast;\nlodash.findLastIndex = arrays.findLastIndex;\nlodash.findLastKey = objects.findLastKey;\nlodash.has = objects.has;\nlodash.identity = utilities.identity;\nlodash.indexOf = arrays.indexOf;\nlodash.isArguments = objects.isArguments;\nlodash.isArray = isArray;\nlodash.isBoolean = objects.isBoolean;\nlodash.isDate = objects.isDate;\nlodash.isElement = objects.isElement;\nlodash.isEmpty = objects.isEmpty;\nlodash.isEqual = objects.isEqual;\nlodash.isFinite = objects.isFinite;\nlodash.isFunction = objects.isFunction;\nlodash.isNaN = objects.isNaN;\nlodash.isNull = objects.isNull;\nlodash.isNumber = objects.isNumber;\nlodash.isObject = objects.isObject;\nlodash.isPlainObject = objects.isPlainObject;\nlodash.isRegExp = objects.isRegExp;\nlodash.isString = objects.isString;\nlodash.isUndefined = objects.isUndefined;\nlodash.lastIndexOf = arrays.lastIndexOf;\nlodash.mixin = mixin;\nlodash.noConflict = utilities.noConflict;\nlodash.noop = utilities.noop;\nlodash.now = utilities.now;\nlodash.parseInt = utilities.parseInt;\nlodash.random = utilities.random;\nlodash.reduce = collections.reduce;\nlodash.reduceRight = collections.reduceRight;\nlodash.result = utilities.result;\nlodash.size = collections.size;\nlodash.some = collections.some;\nlodash.sortedIndex = arrays.sortedIndex;\nlodash.template = utilities.template;\nlodash.unescape = utilities.unescape;\nlodash.uniqueId = utilities.uniqueId;\n\n// add aliases\nlodash.all = collections.every;\nlodash.any = collections.some;\nlodash.detect = collections.find;\nlodash.findWhere = collections.find;\nlodash.foldl = collections.reduce;\nlodash.foldr = collections.reduceRight;\nlodash.include = collections.contains;\nlodash.inject = collections.reduce;\n\nmixin(function() {\n  var source = {}\n  forOwn(lodash, function(func, methodName) {\n    if (!lodash.prototype[methodName]) {\n      source[methodName] = func;\n    }\n  });\n  return source;\n}(), false);\n\n// add functions capable of returning wrapped and unwrapped values when chaining\nlodash.first = arrays.first;\nlodash.last = arrays.last;\nlodash.sample = collections.sample;\n\n// add aliases\nlodash.take = arrays.first;\nlodash.head = arrays.first;\n\nforOwn(lodash, function(func, methodName) {\n  var callbackable = methodName !== 'sample';\n  if (!lodash.prototype[methodName]) {\n    lodash.prototype[methodName]= function(n, guard) {\n      var chainAll = this.__chain__,\n          result = func(this.__wrapped__, n, guard);\n\n      return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))\n        ? result\n        : new lodashWrapper(result, chainAll);\n    };\n  }\n});\n\n/**\n * The semantic version number.\n *\n * @static\n * @memberOf _\n * @type string\n */\nlodash.VERSION = '2.4.1';\n\n// add \"Chaining\" functions to the wrapper\nlodash.prototype.chain = chaining.wrapperChain;\nlodash.prototype.toString = chaining.wrapperToString;\nlodash.prototype.value = chaining.wrapperValueOf;\nlodash.prototype.valueOf = chaining.wrapperValueOf;\n\n// add `Array` functions that return unwrapped values\nforEach(['join', 'pop', 'shift'], function(methodName) {\n  var func = arrayRef[methodName];\n  lodash.prototype[methodName] = function() {\n    var chainAll = this.__chain__,\n        result = func.apply(this.__wrapped__, arguments);\n\n    return chainAll\n      ? new lodashWrapper(result, chainAll)\n      : result;\n  };\n});\n\n// add `Array` functions that return the existing wrapped value\nforEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {\n  var func = arrayRef[methodName];\n  lodash.prototype[methodName] = function() {\n    func.apply(this.__wrapped__, arguments);\n    return this;\n  };\n});\n\n// add `Array` functions that return new wrapped values\nforEach(['concat', 'slice', 'splice'], function(methodName) {\n  var func = arrayRef[methodName];\n  lodash.prototype[methodName] = function() {\n    return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);\n  };\n});\n\nlodash.support = support;\n(lodash.templateSettings = utilities.templateSettings).imports._ = lodash;\nmodule.exports = lodash;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\nmodule.exports = {\n  'compact': require('./arrays/compact'),\n  'difference': require('./arrays/difference'),\n  'drop': require('./arrays/rest'),\n  'findIndex': require('./arrays/findIndex'),\n  'findLastIndex': require('./arrays/findLastIndex'),\n  'first': require('./arrays/first'),\n  'flatten': require('./arrays/flatten'),\n  'head': require('./arrays/first'),\n  'indexOf': require('./arrays/indexOf'),\n  'initial': require('./arrays/initial'),\n  'intersection': require('./arrays/intersection'),\n  'last': require('./arrays/last'),\n  'lastIndexOf': require('./arrays/lastIndexOf'),\n  'object': require('./arrays/zipObject'),\n  'pull': require('./arrays/pull'),\n  'range': require('./arrays/range'),\n  'remove': require('./arrays/remove'),\n  'rest': require('./arrays/rest'),\n  'sortedIndex': require('./arrays/sortedIndex'),\n  'tail': require('./arrays/rest'),\n  'take': require('./arrays/first'),\n  'union': require('./arrays/union'),\n  'uniq': require('./arrays/uniq'),\n  'unique': require('./arrays/uniq'),\n  'unzip': require('./arrays/zip'),\n  'without': require('./arrays/without'),\n  'xor': require('./arrays/xor'),\n  'zip': require('./arrays/zip'),\n  'zipObject': require('./arrays/zipObject')\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/compact.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to compact.\n * @returns {Array} Returns a new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = compact;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/difference.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseDifference = require('../internals/baseDifference'),\n    baseFlatten = require('../internals/baseFlatten');\n\n/**\n * Creates an array excluding all values of the provided arrays using strict\n * equality for comparisons, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to process.\n * @param {...Array} [values] The arrays of values to exclude.\n * @returns {Array} Returns a new array of filtered values.\n * @example\n *\n * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n * // => [1, 3, 4]\n */\nfunction difference(array) {\n  return baseDifference(array, baseFlatten(arguments, true, true, 1));\n}\n\nmodule.exports = difference;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/baseDifference.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseIndexOf = require('./baseIndexOf'),\n    cacheIndexOf = require('./cacheIndexOf'),\n    createCache = require('./createCache'),\n    largeArraySize = require('./largeArraySize'),\n    releaseObject = require('./releaseObject');\n\n/**\n * The base implementation of `_.difference` that accepts a single array\n * of values to exclude.\n *\n * @private\n * @param {Array} array The array to process.\n * @param {Array} [values] The array of values to exclude.\n * @returns {Array} Returns a new array of filtered values.\n */\nfunction baseDifference(array, values) {\n  var index = -1,\n      indexOf = baseIndexOf,\n      length = array ? array.length : 0,\n      isLarge = length >= largeArraySize,\n      result = [];\n\n  if (isLarge) {\n    var cache = createCache(values);\n    if (cache) {\n      indexOf = cacheIndexOf;\n      values = cache;\n    } else {\n      isLarge = false;\n    }\n  }\n  while (++index < length) {\n    var value = array[index];\n    if (indexOf(values, value) < 0) {\n      result.push(value);\n    }\n  }\n  if (isLarge) {\n    releaseObject(values);\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/baseIndexOf.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * The base implementation of `_.indexOf` without support for binary searches\n * or `fromIndex` constraints.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value or `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  var index = (fromIndex || 0) - 1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOf;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/cacheIndexOf.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseIndexOf = require('./baseIndexOf'),\n    keyPrefix = require('./keyPrefix');\n\n/**\n * An implementation of `_.contains` for cache objects that mimics the return\n * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.\n *\n * @private\n * @param {Object} cache The cache object to inspect.\n * @param {*} value The value to search for.\n * @returns {number} Returns `0` if `value` is found, else `-1`.\n */\nfunction cacheIndexOf(cache, value) {\n  var type = typeof value;\n  cache = cache.cache;\n\n  if (type == 'boolean' || value == null) {\n    return cache[value] ? 0 : -1;\n  }\n  if (type != 'number' && type != 'string') {\n    type = 'object';\n  }\n  var key = type == 'number' ? value : keyPrefix + value;\n  cache = (cache = cache[type]) && cache[key];\n\n  return type == 'object'\n    ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)\n    : (cache ? 0 : -1);\n}\n\nmodule.exports = cacheIndexOf;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/keyPrefix.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */\nvar keyPrefix = +new Date + '';\n\nmodule.exports = keyPrefix;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/createCache.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar cachePush = require('./cachePush'),\n    getObject = require('./getObject'),\n    releaseObject = require('./releaseObject');\n\n/**\n * Creates a cache object to optimize linear searches of large arrays.\n *\n * @private\n * @param {Array} [array=[]] The array to search.\n * @returns {null|Object} Returns the cache object or `null` if caching should not be used.\n */\nfunction createCache(array) {\n  var index = -1,\n      length = array.length,\n      first = array[0],\n      mid = array[(length / 2) | 0],\n      last = array[length - 1];\n\n  if (first && typeof first == 'object' &&\n      mid && typeof mid == 'object' && last && typeof last == 'object') {\n    return false;\n  }\n  var cache = getObject();\n  cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;\n\n  var result = getObject();\n  result.array = array;\n  result.cache = cache;\n  result.push = cachePush;\n\n  while (++index < length) {\n    result.push(array[index]);\n  }\n  return result;\n}\n\nmodule.exports = createCache;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/cachePush.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keyPrefix = require('./keyPrefix');\n\n/**\n * Adds a given value to the corresponding cache object.\n *\n * @private\n * @param {*} value The value to add to the cache.\n */\nfunction cachePush(value) {\n  var cache = this.cache,\n      type = typeof value;\n\n  if (type == 'boolean' || value == null) {\n    cache[value] = true;\n  } else {\n    if (type != 'number' && type != 'string') {\n      type = 'object';\n    }\n    var key = type == 'number' ? value : keyPrefix + value,\n        typeCache = cache[type] || (cache[type] = {});\n\n    if (type == 'object') {\n      (typeCache[key] || (typeCache[key] = [])).push(value);\n    } else {\n      typeCache[key] = true;\n    }\n  }\n}\n\nmodule.exports = cachePush;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/getObject.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar objectPool = require('./objectPool');\n\n/**\n * Gets an object from the object pool or creates a new one if the pool is empty.\n *\n * @private\n * @returns {Object} The object from the pool.\n */\nfunction getObject() {\n  return objectPool.pop() || {\n    'array': null,\n    'cache': null,\n    'criteria': null,\n    'false': false,\n    'index': 0,\n    'null': false,\n    'number': null,\n    'object': null,\n    'push': null,\n    'string': null,\n    'true': false,\n    'undefined': false,\n    'value': null\n  };\n}\n\nmodule.exports = getObject;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/objectPool.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to pool arrays and objects used internally */\nvar objectPool = [];\n\nmodule.exports = objectPool;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/releaseObject.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar maxPoolSize = require('./maxPoolSize'),\n    objectPool = require('./objectPool');\n\n/**\n * Releases the given object back to the object pool.\n *\n * @private\n * @param {Object} [object] The object to release.\n */\nfunction releaseObject(object) {\n  var cache = object.cache;\n  if (cache) {\n    releaseObject(cache);\n  }\n  object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;\n  if (objectPool.length < maxPoolSize) {\n    objectPool.push(object);\n  }\n}\n\nmodule.exports = releaseObject;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/maxPoolSize.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used as the max size of the `arrayPool` and `objectPool` */\nvar maxPoolSize = 40;\n\nmodule.exports = maxPoolSize;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/largeArraySize.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used as the size when optimizations are enabled for large arrays */\nvar largeArraySize = 75;\n\nmodule.exports = largeArraySize;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/baseFlatten.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isArguments = require('../objects/isArguments'),\n    isArray = require('../objects/isArray');\n\n/**\n * The base implementation of `_.flatten` without support for callback\n * shorthands or `thisArg` binding.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.\n * @param {number} [fromIndex=0] The index to start from.\n * @returns {Array} Returns a new flattened array.\n */\nfunction baseFlatten(array, isShallow, isStrict, fromIndex) {\n  var index = (fromIndex || 0) - 1,\n      length = array ? array.length : 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (value && typeof value == 'object' && typeof value.length == 'number'\n        && (isArray(value) || isArguments(value))) {\n      // recursively flatten arrays (susceptible to call stack limits)\n      if (!isShallow) {\n        value = baseFlatten(value, isShallow, isStrict);\n      }\n      var valIndex = -1,\n          valLength = value.length,\n          resIndex = result.length;\n\n      result.length += valLength;\n      while (++valIndex < valLength) {\n        result[resIndex++] = value[valIndex];\n      }\n    } else if (!isStrict) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isArguments.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** `Object#toString` result shortcuts */\nvar argsClass = '[object Arguments]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n * @example\n *\n * (function() { return _.isArguments(arguments); })(1, 2, 3);\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return value && typeof value == 'object' && typeof value.length == 'number' &&\n    toString.call(value) == argsClass || false;\n}\n\nmodule.exports = isArguments;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isArray.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('../internals/isNative');\n\n/** `Object#toString` result shortcuts */\nvar arrayClass = '[object Array]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray;\n\n/**\n * Checks if `value` is an array.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n * @example\n *\n * (function() { return _.isArray(arguments); })();\n * // => false\n *\n * _.isArray([1, 2, 3]);\n * // => true\n */\nvar isArray = nativeIsArray || function(value) {\n  return value && typeof value == 'object' && typeof value.length == 'number' &&\n    toString.call(value) == arrayClass || false;\n};\n\nmodule.exports = isArray;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/isNative.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/** Used to detect if a method is native */\nvar reNative = RegExp('^' +\n  String(toString)\n    .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n    .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n */\nfunction isNative(value) {\n  return typeof value == 'function' && reNative.test(value);\n}\n\nmodule.exports = isNative;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/rest.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    slice = require('../internals/slice');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max;\n\n/**\n * The opposite of `_.initial` this method gets all but the first element or\n * first `n` elements of an array. If a callback function is provided elements\n * at the beginning of the array are excluded from the result as long as the\n * callback returns truey. The callback is bound to `thisArg` and invoked\n * with three arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias drop, tail\n * @category Arrays\n * @param {Array} array The array to query.\n * @param {Function|Object|number|string} [callback=1] The function called\n *  per element or the number of elements to exclude. If a property name or\n *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n *  style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a slice of `array`.\n * @example\n *\n * _.rest([1, 2, 3]);\n * // => [2, 3]\n *\n * _.rest([1, 2, 3], 2);\n * // => [3]\n *\n * _.rest([1, 2, 3], function(num) {\n *   return num < 3;\n * });\n * // => [3]\n *\n * var characters = [\n *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },\n *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.pluck(_.rest(characters, 'blocked'), 'name');\n * // => ['fred', 'pebbles']\n *\n * // using \"_.where\" callback shorthand\n * _.rest(characters, { 'employer': 'slate' });\n * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n */\nfunction rest(array, callback, thisArg) {\n  if (typeof callback != 'number' && callback != null) {\n    var n = 0,\n        index = -1,\n        length = array ? array.length : 0;\n\n    callback = createCallback(callback, thisArg, 3);\n    while (++index < length && callback(array[index], index, array)) {\n      n++;\n    }\n  } else {\n    n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);\n  }\n  return slice(array, n);\n}\n\nmodule.exports = rest;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/createCallback.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    baseIsEqual = require('../internals/baseIsEqual'),\n    isObject = require('../objects/isObject'),\n    keys = require('../objects/keys'),\n    property = require('../utilities/property');\n\n/**\n * Produces a callback bound to an optional `thisArg`. If `func` is a property\n * name the created callback will return the property value for a given element.\n * If `func` is an object the created callback will return `true` for elements\n * that contain the equivalent object properties, otherwise it will return `false`.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {*} [func=identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of the created callback.\n * @param {number} [argCount] The number of arguments the callback accepts.\n * @returns {Function} Returns a callback function.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * // wrap to create custom callback shorthands\n * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n *   return !match ? func(callback, thisArg) : function(object) {\n *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n *   };\n * });\n *\n * _.filter(characters, 'age__gt38');\n * // => [{ 'name': 'fred', 'age': 40 }]\n */\nfunction createCallback(func, thisArg, argCount) {\n  var type = typeof func;\n  if (func == null || type == 'function') {\n    return baseCreateCallback(func, thisArg, argCount);\n  }\n  // handle \"_.pluck\" style callback shorthands\n  if (type != 'object') {\n    return property(func);\n  }\n  var props = keys(func),\n      key = props[0],\n      a = func[key];\n\n  // handle \"_.where\" style callback shorthands\n  if (props.length == 1 && a === a && !isObject(a)) {\n    // fast path the common case of providing an object with a single\n    // property containing a primitive value\n    return function(object) {\n      var b = object[key];\n      return a === b && (a !== 0 || (1 / a == 1 / b));\n    };\n  }\n  return function(object) {\n    var length = props.length,\n        result = false;\n\n    while (length--) {\n      if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n        break;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = createCallback;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/baseCreateCallback.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar bind = require('../functions/bind'),\n    identity = require('../utilities/identity'),\n    setBindData = require('./setBindData'),\n    support = require('../support');\n\n/** Used to detected named functions */\nvar reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n/** Used to detect functions containing a `this` reference */\nvar reThis = /\\bthis\\b/;\n\n/** Native method shortcuts */\nvar fnToString = Function.prototype.toString;\n\n/**\n * The base implementation of `_.createCallback` without support for creating\n * \"_.pluck\" or \"_.where\" style callbacks.\n *\n * @private\n * @param {*} [func=identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of the created callback.\n * @param {number} [argCount] The number of arguments the callback accepts.\n * @returns {Function} Returns a callback function.\n */\nfunction baseCreateCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  // exit early for no `thisArg` or already bound by `Function#bind`\n  if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n    return func;\n  }\n  var bindData = func.__bindData__;\n  if (typeof bindData == 'undefined') {\n    if (support.funcNames) {\n      bindData = !func.name;\n    }\n    bindData = bindData || !support.funcDecomp;\n    if (!bindData) {\n      var source = fnToString.call(func);\n      if (!support.funcNames) {\n        bindData = !reFuncName.test(source);\n      }\n      if (!bindData) {\n        // checks if `func` references the `this` keyword and stores the result\n        bindData = reThis.test(source);\n        setBindData(func, bindData);\n      }\n    }\n  }\n  // exit early if there are no `this` references or `func` is bound\n  if (bindData === false || (bindData !== true && bindData[1] & 1)) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 2: return function(a, b) {\n      return func.call(thisArg, a, b);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n  }\n  return bind(func, thisArg);\n}\n\nmodule.exports = baseCreateCallback;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/bind.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createWrapper = require('../internals/createWrapper'),\n    slice = require('../internals/slice');\n\n/**\n * Creates a function that, when called, invokes `func` with the `this`\n * binding of `thisArg` and prepends any additional `bind` arguments to those\n * provided to the bound function.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to bind.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {...*} [arg] Arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * var func = function(greeting) {\n *   return greeting + ' ' + this.name;\n * };\n *\n * func = _.bind(func, { 'name': 'fred' }, 'hi');\n * func();\n * // => 'hi fred'\n */\nfunction bind(func, thisArg) {\n  return arguments.length > 2\n    ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)\n    : createWrapper(func, 1, null, null, thisArg);\n}\n\nmodule.exports = bind;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/createWrapper.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseBind = require('./baseBind'),\n    baseCreateWrapper = require('./baseCreateWrapper'),\n    isFunction = require('../objects/isFunction'),\n    slice = require('./slice');\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Native method shortcuts */\nvar push = arrayRef.push,\n    unshift = arrayRef.unshift;\n\n/**\n * Creates a function that, when called, either curries or invokes `func`\n * with an optional `this` binding and partially applied arguments.\n *\n * @private\n * @param {Function|string} func The function or method name to reference.\n * @param {number} bitmask The bitmask of method flags to compose.\n *  The bitmask may be composed of the following flags:\n *  1 - `_.bind`\n *  2 - `_.bindKey`\n *  4 - `_.curry`\n *  8 - `_.curry` (bound)\n *  16 - `_.partial`\n *  32 - `_.partialRight`\n * @param {Array} [partialArgs] An array of arguments to prepend to those\n *  provided to the new function.\n * @param {Array} [partialRightArgs] An array of arguments to append to those\n *  provided to the new function.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new function.\n */\nfunction createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n  var isBind = bitmask & 1,\n      isBindKey = bitmask & 2,\n      isCurry = bitmask & 4,\n      isCurryBound = bitmask & 8,\n      isPartial = bitmask & 16,\n      isPartialRight = bitmask & 32;\n\n  if (!isBindKey && !isFunction(func)) {\n    throw new TypeError;\n  }\n  if (isPartial && !partialArgs.length) {\n    bitmask &= ~16;\n    isPartial = partialArgs = false;\n  }\n  if (isPartialRight && !partialRightArgs.length) {\n    bitmask &= ~32;\n    isPartialRight = partialRightArgs = false;\n  }\n  var bindData = func && func.__bindData__;\n  if (bindData && bindData !== true) {\n    // clone `bindData`\n    bindData = slice(bindData);\n    if (bindData[2]) {\n      bindData[2] = slice(bindData[2]);\n    }\n    if (bindData[3]) {\n      bindData[3] = slice(bindData[3]);\n    }\n    // set `thisBinding` is not previously bound\n    if (isBind && !(bindData[1] & 1)) {\n      bindData[4] = thisArg;\n    }\n    // set if previously bound but not currently (subsequent curried functions)\n    if (!isBind && bindData[1] & 1) {\n      bitmask |= 8;\n    }\n    // set curried arity if not yet set\n    if (isCurry && !(bindData[1] & 4)) {\n      bindData[5] = arity;\n    }\n    // append partial left arguments\n    if (isPartial) {\n      push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n    }\n    // append partial right arguments\n    if (isPartialRight) {\n      unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n    }\n    // merge flags\n    bindData[1] |= bitmask;\n    return createWrapper.apply(null, bindData);\n  }\n  // fast path for `_.bind`\n  var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;\n  return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n}\n\nmodule.exports = createWrapper;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/baseBind.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreate = require('./baseCreate'),\n    isObject = require('../objects/isObject'),\n    setBindData = require('./setBindData'),\n    slice = require('./slice');\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Native method shortcuts */\nvar push = arrayRef.push;\n\n/**\n * The base implementation of `_.bind` that creates the bound function and\n * sets its meta data.\n *\n * @private\n * @param {Array} bindData The bind data array.\n * @returns {Function} Returns the new bound function.\n */\nfunction baseBind(bindData) {\n  var func = bindData[0],\n      partialArgs = bindData[2],\n      thisArg = bindData[4];\n\n  function bound() {\n    // `Function#bind` spec\n    // http://es5.github.io/#x15.3.4.5\n    if (partialArgs) {\n      // avoid `arguments` object deoptimizations by using `slice` instead\n      // of `Array.prototype.slice.call` and not assigning `arguments` to a\n      // variable as a ternary expression\n      var args = slice(partialArgs);\n      push.apply(args, arguments);\n    }\n    // mimic the constructor's `return` behavior\n    // http://es5.github.io/#x13.2.2\n    if (this instanceof bound) {\n      // ensure `new bound` is an instance of `func`\n      var thisBinding = baseCreate(func.prototype),\n          result = func.apply(thisBinding, args || arguments);\n      return isObject(result) ? result : thisBinding;\n    }\n    return func.apply(thisArg, args || arguments);\n  }\n  setBindData(bound, bindData);\n  return bound;\n}\n\nmodule.exports = baseBind;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/baseCreate.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('./isNative'),\n    isObject = require('../objects/isObject'),\n    noop = require('../utilities/noop');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(prototype, properties) {\n  return isObject(prototype) ? nativeCreate(prototype) : {};\n}\n// fallback for browsers without `Object.create`\nif (!nativeCreate) {\n  baseCreate = (function() {\n    function Object() {}\n    return function(prototype) {\n      if (isObject(prototype)) {\n        Object.prototype = prototype;\n        var result = new Object;\n        Object.prototype = null;\n      }\n      return result || global.Object();\n    };\n  }());\n}\n\nmodule.exports = baseCreate;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isObject.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar objectTypes = require('../internals/objectTypes');\n\n/**\n * Checks if `value` is the language type of Object.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // check if the value is the ECMAScript language type of Object\n  // http://es5.github.io/#x8\n  // and avoid a V8 bug\n  // http://code.google.com/p/v8/issues/detail?id=2291\n  return !!(value && objectTypes[typeof value]);\n}\n\nmodule.exports = isObject;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/objectTypes.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to determine if values are of the language type Object */\nvar objectTypes = {\n  'boolean': false,\n  'function': true,\n  'object': true,\n  'number': false,\n  'string': false,\n  'undefined': false\n};\n\nmodule.exports = objectTypes;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/noop.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * A no-operation function.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @example\n *\n * var object = { 'name': 'fred' };\n * _.noop(object) === undefined;\n * // => true\n */\nfunction noop() {\n  // no operation performed\n}\n\nmodule.exports = noop;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/setBindData.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('./isNative'),\n    noop = require('../utilities/noop');\n\n/** Used as the property descriptor for `__bindData__` */\nvar descriptor = {\n  'configurable': false,\n  'enumerable': false,\n  'value': null,\n  'writable': false\n};\n\n/** Used to set meta data on functions */\nvar defineProperty = (function() {\n  // IE 8 only accepts DOM elements\n  try {\n    var o = {},\n        func = isNative(func = Object.defineProperty) && func,\n        result = func(o, o, o) && func;\n  } catch(e) { }\n  return result;\n}());\n\n/**\n * Sets `this` binding data on a given function.\n *\n * @private\n * @param {Function} func The function to set data on.\n * @param {Array} value The data array to set.\n */\nvar setBindData = !defineProperty ? noop : function(func, value) {\n  descriptor.value = value;\n  defineProperty(func, '__bindData__', descriptor);\n};\n\nmodule.exports = setBindData;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/slice.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Slices the `collection` from the `start` index up to, but not including,\n * the `end` index.\n *\n * Note: This function is used instead of `Array#slice` to support node lists\n * in IE < 9 and to ensure dense arrays are returned.\n *\n * @private\n * @param {Array|Object|string} collection The collection to slice.\n * @param {number} start The start index.\n * @param {number} end The end index.\n * @returns {Array} Returns the new array.\n */\nfunction slice(array, start, end) {\n  start || (start = 0);\n  if (typeof end == 'undefined') {\n    end = array ? array.length : 0;\n  }\n  var index = -1,\n      length = end - start || 0,\n      result = Array(length < 0 ? 0 : length);\n\n  while (++index < length) {\n    result[index] = array[start + index];\n  }\n  return result;\n}\n\nmodule.exports = slice;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/baseCreateWrapper.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreate = require('./baseCreate'),\n    isObject = require('../objects/isObject'),\n    setBindData = require('./setBindData'),\n    slice = require('./slice');\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Native method shortcuts */\nvar push = arrayRef.push;\n\n/**\n * The base implementation of `createWrapper` that creates the wrapper and\n * sets its meta data.\n *\n * @private\n * @param {Array} bindData The bind data array.\n * @returns {Function} Returns the new function.\n */\nfunction baseCreateWrapper(bindData) {\n  var func = bindData[0],\n      bitmask = bindData[1],\n      partialArgs = bindData[2],\n      partialRightArgs = bindData[3],\n      thisArg = bindData[4],\n      arity = bindData[5];\n\n  var isBind = bitmask & 1,\n      isBindKey = bitmask & 2,\n      isCurry = bitmask & 4,\n      isCurryBound = bitmask & 8,\n      key = func;\n\n  function bound() {\n    var thisBinding = isBind ? thisArg : this;\n    if (partialArgs) {\n      var args = slice(partialArgs);\n      push.apply(args, arguments);\n    }\n    if (partialRightArgs || isCurry) {\n      args || (args = slice(arguments));\n      if (partialRightArgs) {\n        push.apply(args, partialRightArgs);\n      }\n      if (isCurry && args.length < arity) {\n        bitmask |= 16 & ~32;\n        return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);\n      }\n    }\n    args || (args = arguments);\n    if (isBindKey) {\n      func = thisBinding[key];\n    }\n    if (this instanceof bound) {\n      thisBinding = baseCreate(func.prototype);\n      var result = func.apply(thisBinding, args);\n      return isObject(result) ? result : thisBinding;\n    }\n    return func.apply(thisBinding, args);\n  }\n  setBindData(bound, bindData);\n  return bound;\n}\n\nmodule.exports = baseCreateWrapper;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isFunction.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Checks if `value` is a function.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n */\nfunction isFunction(value) {\n  return typeof value == 'function';\n}\n\nmodule.exports = isFunction;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/identity.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'name': 'fred' };\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/support.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('./internals/isNative');\n\n/** Used to detect functions containing a `this` reference */\nvar reThis = /\\bthis\\b/;\n\n/**\n * An object used to flag environments features.\n *\n * @static\n * @memberOf _\n * @type Object\n */\nvar support = {};\n\n/**\n * Detect if functions can be decompiled by `Function#toString`\n * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n *\n * @memberOf _.support\n * @type boolean\n */\nsupport.funcDecomp = !isNative(global.WinRTError) && reThis.test(function() { return this; });\n\n/**\n * Detect if `Function#name` is supported (all but IE).\n *\n * @memberOf _.support\n * @type boolean\n */\nsupport.funcNames = typeof Function.name == 'string';\n\nmodule.exports = support;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/baseIsEqual.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forIn = require('../objects/forIn'),\n    getArray = require('./getArray'),\n    isFunction = require('../objects/isFunction'),\n    objectTypes = require('./objectTypes'),\n    releaseArray = require('./releaseArray');\n\n/** `Object#toString` result shortcuts */\nvar argsClass = '[object Arguments]',\n    arrayClass = '[object Array]',\n    boolClass = '[object Boolean]',\n    dateClass = '[object Date]',\n    numberClass = '[object Number]',\n    objectClass = '[object Object]',\n    regexpClass = '[object RegExp]',\n    stringClass = '[object String]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n * that allows partial \"_.where\" style comparisons.\n *\n * @private\n * @param {*} a The value to compare.\n * @param {*} b The other value to compare.\n * @param {Function} [callback] The function to customize comparing values.\n * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(a, b, callback, isWhere, stackA, stackB) {\n  // used to indicate that when comparing objects, `a` has at least the properties of `b`\n  if (callback) {\n    var result = callback(a, b);\n    if (typeof result != 'undefined') {\n      return !!result;\n    }\n  }\n  // exit early for identical values\n  if (a === b) {\n    // treat `+0` vs. `-0` as not equal\n    return a !== 0 || (1 / a == 1 / b);\n  }\n  var type = typeof a,\n      otherType = typeof b;\n\n  // exit early for unlike primitive values\n  if (a === a &&\n      !(a && objectTypes[type]) &&\n      !(b && objectTypes[otherType])) {\n    return false;\n  }\n  // exit early for `null` and `undefined` avoiding ES3's Function#call behavior\n  // http://es5.github.io/#x15.3.4.4\n  if (a == null || b == null) {\n    return a === b;\n  }\n  // compare [[Class]] names\n  var className = toString.call(a),\n      otherClass = toString.call(b);\n\n  if (className == argsClass) {\n    className = objectClass;\n  }\n  if (otherClass == argsClass) {\n    otherClass = objectClass;\n  }\n  if (className != otherClass) {\n    return false;\n  }\n  switch (className) {\n    case boolClass:\n    case dateClass:\n      // coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal\n      return +a == +b;\n\n    case numberClass:\n      // treat `NaN` vs. `NaN` as equal\n      return (a != +a)\n        ? b != +b\n        // but treat `+0` vs. `-0` as not equal\n        : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n    case regexpClass:\n    case stringClass:\n      // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)\n      // treat string primitives and their corresponding object instances as equal\n      return a == String(b);\n  }\n  var isArr = className == arrayClass;\n  if (!isArr) {\n    // unwrap any `lodash` wrapped values\n    var aWrapped = hasOwnProperty.call(a, '__wrapped__'),\n        bWrapped = hasOwnProperty.call(b, '__wrapped__');\n\n    if (aWrapped || bWrapped) {\n      return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);\n    }\n    // exit for functions and DOM nodes\n    if (className != objectClass) {\n      return false;\n    }\n    // in older versions of Opera, `arguments` objects have `Array` constructors\n    var ctorA = a.constructor,\n        ctorB = b.constructor;\n\n    // non `Object` object instances with different constructors are not equal\n    if (ctorA != ctorB &&\n          !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&\n          ('constructor' in a && 'constructor' in b)\n        ) {\n      return false;\n    }\n  }\n  // assume cyclic structures are equal\n  // the algorithm for detecting cyclic structures is adapted from ES 5.1\n  // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)\n  var initedStack = !stackA;\n  stackA || (stackA = getArray());\n  stackB || (stackB = getArray());\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == a) {\n      return stackB[length] == b;\n    }\n  }\n  var size = 0;\n  result = true;\n\n  // add `a` and `b` to the stack of traversed objects\n  stackA.push(a);\n  stackB.push(b);\n\n  // recursively compare objects and arrays (susceptible to call stack limits)\n  if (isArr) {\n    // compare lengths to determine if a deep comparison is necessary\n    length = a.length;\n    size = b.length;\n    result = size == length;\n\n    if (result || isWhere) {\n      // deep compare the contents, ignoring non-numeric properties\n      while (size--) {\n        var index = length,\n            value = b[size];\n\n        if (isWhere) {\n          while (index--) {\n            if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {\n              break;\n            }\n          }\n        } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n          break;\n        }\n      }\n    }\n  }\n  else {\n    // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n    // which, in this case, is more costly\n    forIn(b, function(value, key, b) {\n      if (hasOwnProperty.call(b, key)) {\n        // count the number of properties.\n        size++;\n        // deep compare each property value.\n        return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));\n      }\n    });\n\n    if (result && !isWhere) {\n      // ensure both objects have the same number of properties\n      forIn(a, function(value, key, a) {\n        if (hasOwnProperty.call(a, key)) {\n          // `size` will be `-1` if `a` has more properties than `b`\n          return (result = --size > -1);\n        }\n      });\n    }\n  }\n  stackA.pop();\n  stackB.pop();\n\n  if (initedStack) {\n    releaseArray(stackA);\n    releaseArray(stackB);\n  }\n  return result;\n}\n\nmodule.exports = baseIsEqual;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/forIn.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    objectTypes = require('../internals/objectTypes');\n\n/**\n * Iterates over own and inherited enumerable properties of an object,\n * executing the callback for each property. The callback is bound to `thisArg`\n * and invoked with three arguments; (value, key, object). Callbacks may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Objects\n * @param {Object} object The object to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function Shape() {\n *   this.x = 0;\n *   this.y = 0;\n * }\n *\n * Shape.prototype.move = function(x, y) {\n *   this.x += x;\n *   this.y += y;\n * };\n *\n * _.forIn(new Shape, function(value, key) {\n *   console.log(key);\n * });\n * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n */\nvar forIn = function(collection, callback, thisArg) {\n  var index, iterable = collection, result = iterable;\n  if (!iterable) return result;\n  if (!objectTypes[typeof iterable]) return result;\n  callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n    for (index in iterable) {\n      if (callback(iterable[index], index, collection) === false) return result;\n    }\n  return result\n};\n\nmodule.exports = forIn;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/getArray.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar arrayPool = require('./arrayPool');\n\n/**\n * Gets an array from the array pool or creates a new one if the pool is empty.\n *\n * @private\n * @returns {Array} The array from the pool.\n */\nfunction getArray() {\n  return arrayPool.pop() || [];\n}\n\nmodule.exports = getArray;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/arrayPool.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to pool arrays and objects used internally */\nvar arrayPool = [];\n\nmodule.exports = arrayPool;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/releaseArray.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar arrayPool = require('./arrayPool'),\n    maxPoolSize = require('./maxPoolSize');\n\n/**\n * Releases the given array back to the array pool.\n *\n * @private\n * @param {Array} [array] The array to release.\n */\nfunction releaseArray(array) {\n  array.length = 0;\n  if (arrayPool.length < maxPoolSize) {\n    arrayPool.push(array);\n  }\n}\n\nmodule.exports = releaseArray;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/keys.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('../internals/isNative'),\n    isObject = require('./isObject'),\n    shimKeys = require('../internals/shimKeys');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\n\n/**\n * Creates an array composed of the own enumerable property names of an object.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns an array of property names.\n * @example\n *\n * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  if (!isObject(object)) {\n    return [];\n  }\n  return nativeKeys(object);\n};\n\nmodule.exports = keys;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/shimKeys.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar objectTypes = require('./objectTypes');\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `Object.keys` which produces an array of the\n * given object's own enumerable property names.\n *\n * @private\n * @type Function\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns an array of property names.\n */\nvar shimKeys = function(object) {\n  var index, iterable = object, result = [];\n  if (!iterable) return result;\n  if (!(objectTypes[typeof object])) return result;\n    for (index in iterable) {\n      if (hasOwnProperty.call(iterable, index)) {\n        result.push(index);\n      }\n    }\n  return result\n};\n\nmodule.exports = shimKeys;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/property.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Creates a \"_.pluck\" style function, which returns the `key` value of a\n * given object.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {string} key The name of the property to retrieve.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var characters = [\n *   { 'name': 'fred',   'age': 40 },\n *   { 'name': 'barney', 'age': 36 }\n * ];\n *\n * var getName = _.property('name');\n *\n * _.map(characters, getName);\n * // => ['barney', 'fred']\n *\n * _.sortBy(characters, getName);\n * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]\n */\nfunction property(key) {\n  return function(object) {\n    return object[key];\n  };\n}\n\nmodule.exports = property;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/findIndex.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback');\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element that passes the callback check, instead of the element itself.\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to search.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney',  'age': 36, 'blocked': false },\n *   { 'name': 'fred',    'age': 40, 'blocked': true },\n *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n * ];\n *\n * _.findIndex(characters, function(chr) {\n *   return chr.age < 20;\n * });\n * // => 2\n *\n * // using \"_.where\" callback shorthand\n * _.findIndex(characters, { 'age': 36 });\n * // => 0\n *\n * // using \"_.pluck\" callback shorthand\n * _.findIndex(characters, 'blocked');\n * // => 1\n */\nfunction findIndex(array, callback, thisArg) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  callback = createCallback(callback, thisArg, 3);\n  while (++index < length) {\n    if (callback(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = findIndex;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/findLastIndex.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback');\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of a `collection` from right to left.\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to search.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney',  'age': 36, 'blocked': true },\n *   { 'name': 'fred',    'age': 40, 'blocked': false },\n *   { 'name': 'pebbles', 'age': 1,  'blocked': true }\n * ];\n *\n * _.findLastIndex(characters, function(chr) {\n *   return chr.age > 30;\n * });\n * // => 1\n *\n * // using \"_.where\" callback shorthand\n * _.findLastIndex(characters, { 'age': 36 });\n * // => 0\n *\n * // using \"_.pluck\" callback shorthand\n * _.findLastIndex(characters, 'blocked');\n * // => 2\n */\nfunction findLastIndex(array, callback, thisArg) {\n  var length = array ? array.length : 0;\n  callback = createCallback(callback, thisArg, 3);\n  while (length--) {\n    if (callback(array[length], length, array)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = findLastIndex;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/first.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    slice = require('../internals/slice');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the first element or first `n` elements of an array. If a callback\n * is provided elements at the beginning of the array are returned as long\n * as the callback returns truey. The callback is bound to `thisArg` and\n * invoked with three arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias head, take\n * @category Arrays\n * @param {Array} array The array to query.\n * @param {Function|Object|number|string} [callback] The function called\n *  per element or the number of elements to return. If a property name or\n *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n *  style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the first element(s) of `array`.\n * @example\n *\n * _.first([1, 2, 3]);\n * // => 1\n *\n * _.first([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.first([1, 2, 3], function(num) {\n *   return num < 3;\n * });\n * // => [1, 2]\n *\n * var characters = [\n *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },\n *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },\n *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.first(characters, 'blocked');\n * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]\n *\n * // using \"_.where\" callback shorthand\n * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');\n * // => ['barney', 'fred']\n */\nfunction first(array, callback, thisArg) {\n  var n = 0,\n      length = array ? array.length : 0;\n\n  if (typeof callback != 'number' && callback != null) {\n    var index = -1;\n    callback = createCallback(callback, thisArg, 3);\n    while (++index < length && callback(array[index], index, array)) {\n      n++;\n    }\n  } else {\n    n = callback;\n    if (n == null || thisArg) {\n      return array ? array[0] : undefined;\n    }\n  }\n  return slice(array, 0, nativeMin(nativeMax(0, n), length));\n}\n\nmodule.exports = first;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/flatten.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseFlatten = require('../internals/baseFlatten'),\n    map = require('../collections/map');\n\n/**\n * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n * is truey, the array will only be flattened a single level. If a callback\n * is provided each element of the array is passed through the callback before\n * flattening. The callback is bound to `thisArg` and invoked with three\n * arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to flatten.\n * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new flattened array.\n * @example\n *\n * _.flatten([1, [2], [3, [[4]]]]);\n * // => [1, 2, 3, 4];\n *\n * _.flatten([1, [2], [3, [[4]]]], true);\n * // => [1, 2, 3, [[4]]];\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },\n *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.flatten(characters, 'pets');\n * // => ['hoppy', 'baby puss', 'dino']\n */\nfunction flatten(array, isShallow, callback, thisArg) {\n  // juggle arguments\n  if (typeof isShallow != 'boolean' && isShallow != null) {\n    thisArg = callback;\n    callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;\n    isShallow = false;\n  }\n  if (callback != null) {\n    array = map(array, callback, thisArg);\n  }\n  return baseFlatten(array, isShallow);\n}\n\nmodule.exports = flatten;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/map.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn');\n\n/**\n * Creates an array of values by running each element in the collection\n * through the callback. The callback is bound to `thisArg` and invoked with\n * three arguments; (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias collect\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new array of the results of each `callback` execution.\n * @example\n *\n * _.map([1, 2, 3], function(num) { return num * 3; });\n * // => [3, 6, 9]\n *\n * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n * // => [3, 6, 9] (property order is not guaranteed across environments)\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.map(characters, 'name');\n * // => ['barney', 'fred']\n */\nfunction map(collection, callback, thisArg) {\n  var index = -1,\n      length = collection ? collection.length : 0;\n\n  callback = createCallback(callback, thisArg, 3);\n  if (typeof length == 'number') {\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = callback(collection[index], index, collection);\n    }\n  } else {\n    result = [];\n    forOwn(collection, function(value, key, collection) {\n      result[++index] = callback(value, key, collection);\n    });\n  }\n  return result;\n}\n\nmodule.exports = map;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/forOwn.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    keys = require('./keys'),\n    objectTypes = require('../internals/objectTypes');\n\n/**\n * Iterates over own enumerable properties of an object, executing the callback\n * for each property. The callback is bound to `thisArg` and invoked with three\n * arguments; (value, key, object). Callbacks may exit iteration early by\n * explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Objects\n * @param {Object} object The object to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n *   console.log(key);\n * });\n * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n */\nvar forOwn = function(collection, callback, thisArg) {\n  var index, iterable = collection, result = iterable;\n  if (!iterable) return result;\n  if (!objectTypes[typeof iterable]) return result;\n  callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n    var ownIndex = -1,\n        ownProps = objectTypes[typeof iterable] && keys(iterable),\n        length = ownProps ? ownProps.length : 0;\n\n    while (++ownIndex < length) {\n      index = ownProps[ownIndex];\n      if (callback(iterable[index], index, collection) === false) return result;\n    }\n  return result\n};\n\nmodule.exports = forOwn;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/indexOf.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseIndexOf = require('../internals/baseIndexOf'),\n    sortedIndex = require('./sortedIndex');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found using\n * strict equality for comparisons, i.e. `===`. If the array is already sorted\n * providing `true` for `fromIndex` will run a faster binary search.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n *  to perform a binary search on a sorted array.\n * @returns {number} Returns the index of the matched value or `-1`.\n * @example\n *\n * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n * // => 1\n *\n * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n * // => 4\n *\n * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n * // => 2\n */\nfunction indexOf(array, value, fromIndex) {\n  if (typeof fromIndex == 'number') {\n    var length = array ? array.length : 0;\n    fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);\n  } else if (fromIndex) {\n    var index = sortedIndex(array, value);\n    return array[index] === value ? index : -1;\n  }\n  return baseIndexOf(array, value, fromIndex);\n}\n\nmodule.exports = indexOf;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/sortedIndex.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    identity = require('../utilities/identity');\n\n/**\n * Uses a binary search to determine the smallest index at which a value\n * should be inserted into a given sorted array in order to maintain the sort\n * order of the array. If a callback is provided it will be executed for\n * `value` and each element of `array` to compute their sort ranking. The\n * callback is bound to `thisArg` and invoked with one argument; (value).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * _.sortedIndex([20, 30, 50], 40);\n * // => 2\n *\n * // using \"_.pluck\" callback shorthand\n * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n * // => 2\n *\n * var dict = {\n *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n * };\n *\n * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n *   return dict.wordToNumber[word];\n * });\n * // => 2\n *\n * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n *   return this.wordToNumber[word];\n * }, dict);\n * // => 2\n */\nfunction sortedIndex(array, value, callback, thisArg) {\n  var low = 0,\n      high = array ? array.length : low;\n\n  // explicitly reference `identity` for better inlining in Firefox\n  callback = callback ? createCallback(callback, thisArg, 1) : identity;\n  value = callback(value);\n\n  while (low < high) {\n    var mid = (low + high) >>> 1;\n    (callback(array[mid]) < value)\n      ? low = mid + 1\n      : high = mid;\n  }\n  return low;\n}\n\nmodule.exports = sortedIndex;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/initial.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    slice = require('../internals/slice');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets all but the last element or last `n` elements of an array. If a\n * callback is provided elements at the end of the array are excluded from\n * the result as long as the callback returns truey. The callback is bound\n * to `thisArg` and invoked with three arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to query.\n * @param {Function|Object|number|string} [callback=1] The function called\n *  per element or the number of elements to exclude. If a property name or\n *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n *  style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a slice of `array`.\n * @example\n *\n * _.initial([1, 2, 3]);\n * // => [1, 2]\n *\n * _.initial([1, 2, 3], 2);\n * // => [1]\n *\n * _.initial([1, 2, 3], function(num) {\n *   return num > 1;\n * });\n * // => [1]\n *\n * var characters = [\n *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.initial(characters, 'blocked');\n * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]\n *\n * // using \"_.where\" callback shorthand\n * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');\n * // => ['barney', 'fred']\n */\nfunction initial(array, callback, thisArg) {\n  var n = 0,\n      length = array ? array.length : 0;\n\n  if (typeof callback != 'number' && callback != null) {\n    var index = length;\n    callback = createCallback(callback, thisArg, 3);\n    while (index-- && callback(array[index], index, array)) {\n      n++;\n    }\n  } else {\n    n = (callback == null || thisArg) ? 1 : callback || n;\n  }\n  return slice(array, 0, nativeMin(nativeMax(0, length - n), length));\n}\n\nmodule.exports = initial;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/intersection.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseIndexOf = require('../internals/baseIndexOf'),\n    cacheIndexOf = require('../internals/cacheIndexOf'),\n    createCache = require('../internals/createCache'),\n    getArray = require('../internals/getArray'),\n    isArguments = require('../objects/isArguments'),\n    isArray = require('../objects/isArray'),\n    largeArraySize = require('../internals/largeArraySize'),\n    releaseArray = require('../internals/releaseArray'),\n    releaseObject = require('../internals/releaseObject');\n\n/**\n * Creates an array of unique values present in all provided arrays using\n * strict equality for comparisons, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {...Array} [array] The arrays to inspect.\n * @returns {Array} Returns an array of shared values.\n * @example\n *\n * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n * // => [1, 2]\n */\nfunction intersection() {\n  var args = [],\n      argsIndex = -1,\n      argsLength = arguments.length,\n      caches = getArray(),\n      indexOf = baseIndexOf,\n      trustIndexOf = indexOf === baseIndexOf,\n      seen = getArray();\n\n  while (++argsIndex < argsLength) {\n    var value = arguments[argsIndex];\n    if (isArray(value) || isArguments(value)) {\n      args.push(value);\n      caches.push(trustIndexOf && value.length >= largeArraySize &&\n        createCache(argsIndex ? args[argsIndex] : seen));\n    }\n  }\n  var array = args[0],\n      index = -1,\n      length = array ? array.length : 0,\n      result = [];\n\n  outer:\n  while (++index < length) {\n    var cache = caches[0];\n    value = array[index];\n\n    if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {\n      argsIndex = argsLength;\n      (cache || seen).push(value);\n      while (--argsIndex) {\n        cache = caches[argsIndex];\n        if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n  }\n  while (argsLength--) {\n    cache = caches[argsLength];\n    if (cache) {\n      releaseObject(cache);\n    }\n  }\n  releaseArray(caches);\n  releaseArray(seen);\n  return result;\n}\n\nmodule.exports = intersection;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/last.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    slice = require('../internals/slice');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max;\n\n/**\n * Gets the last element or last `n` elements of an array. If a callback is\n * provided elements at the end of the array are returned as long as the\n * callback returns truey. The callback is bound to `thisArg` and invoked\n * with three arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to query.\n * @param {Function|Object|number|string} [callback] The function called\n *  per element or the number of elements to return. If a property name or\n *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n *  style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the last element(s) of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n *\n * _.last([1, 2, 3], 2);\n * // => [2, 3]\n *\n * _.last([1, 2, 3], function(num) {\n *   return num > 1;\n * });\n * // => [2, 3]\n *\n * var characters = [\n *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.pluck(_.last(characters, 'blocked'), 'name');\n * // => ['fred', 'pebbles']\n *\n * // using \"_.where\" callback shorthand\n * _.last(characters, { 'employer': 'na' });\n * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n */\nfunction last(array, callback, thisArg) {\n  var n = 0,\n      length = array ? array.length : 0;\n\n  if (typeof callback != 'number' && callback != null) {\n    var index = length;\n    callback = createCallback(callback, thisArg, 3);\n    while (index-- && callback(array[index], index, array)) {\n      n++;\n    }\n  } else {\n    n = callback;\n    if (n == null || thisArg) {\n      return array ? array[length - 1] : undefined;\n    }\n  }\n  return slice(array, nativeMax(0, length - n));\n}\n\nmodule.exports = last;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/lastIndexOf.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the index at which the last occurrence of `value` is found using strict\n * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n * as the offset from the end of the collection.\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the matched value or `-1`.\n * @example\n *\n * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n * // => 4\n *\n * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n * // => 1\n */\nfunction lastIndexOf(array, value, fromIndex) {\n  var index = array ? array.length : 0;\n  if (typeof fromIndex == 'number') {\n    index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n  }\n  while (index--) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = lastIndexOf;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/zipObject.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isArray = require('../objects/isArray');\n\n/**\n * Creates an object composed from arrays of `keys` and `values`. Provide\n * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`\n * or two arrays, one of `keys` and one of corresponding `values`.\n *\n * @static\n * @memberOf _\n * @alias object\n * @category Arrays\n * @param {Array} keys The array of keys.\n * @param {Array} [values=[]] The array of values.\n * @returns {Object} Returns an object composed of the given keys and\n *  corresponding values.\n * @example\n *\n * _.zipObject(['fred', 'barney'], [30, 40]);\n * // => { 'fred': 30, 'barney': 40 }\n */\nfunction zipObject(keys, values) {\n  var index = -1,\n      length = keys ? keys.length : 0,\n      result = {};\n\n  if (!values && length && !isArray(keys[0])) {\n    values = [];\n  }\n  while (++index < length) {\n    var key = keys[index];\n    if (values) {\n      result[key] = values[index];\n    } else if (key) {\n      result[key[0]] = key[1];\n    }\n  }\n  return result;\n}\n\nmodule.exports = zipObject;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/pull.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Native method shortcuts */\nvar splice = arrayRef.splice;\n\n/**\n * Removes all provided values from the given array using strict equality for\n * comparisons, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to modify.\n * @param {...*} [value] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3, 1, 2, 3];\n * _.pull(array, 2, 3);\n * console.log(array);\n * // => [1, 1]\n */\nfunction pull(array) {\n  var args = arguments,\n      argsIndex = 0,\n      argsLength = args.length,\n      length = array ? array.length : 0;\n\n  while (++argsIndex < argsLength) {\n    var index = -1,\n        value = args[argsIndex];\n    while (++index < length) {\n      if (array[index] === value) {\n        splice.call(array, index--, 1);\n        length--;\n      }\n    }\n  }\n  return array;\n}\n\nmodule.exports = pull;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/range.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Native method shortcuts */\nvar ceil = Math.ceil;\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max;\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to but not including `end`. If `start` is less than `stop` a\n * zero-length range is created unless a negative `step` is specified.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns a new range array.\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nfunction range(start, end, step) {\n  start = +start || 0;\n  step = typeof step == 'number' ? step : (+step || 1);\n\n  if (end == null) {\n    end = start;\n    start = 0;\n  }\n  // use `Array(length)` so engines like Chakra and V8 avoid slower modes\n  // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n  var index = -1,\n      length = nativeMax(0, ceil((end - start) / (step || 1))),\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = range;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/remove.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback');\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Native method shortcuts */\nvar splice = arrayRef.splice;\n\n/**\n * Removes all elements from an array that the callback returns truey for\n * and returns an array of removed elements. The callback is bound to `thisArg`\n * and invoked with three arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to modify.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new array of removed elements.\n * @example\n *\n * var array = [1, 2, 3, 4, 5, 6];\n * var evens = _.remove(array, function(num) { return num % 2 == 0; });\n *\n * console.log(array);\n * // => [1, 3, 5]\n *\n * console.log(evens);\n * // => [2, 4, 6]\n */\nfunction remove(array, callback, thisArg) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = [];\n\n  callback = createCallback(callback, thisArg, 3);\n  while (++index < length) {\n    var value = array[index];\n    if (callback(value, index, array)) {\n      result.push(value);\n      splice.call(array, index--, 1);\n      length--;\n    }\n  }\n  return result;\n}\n\nmodule.exports = remove;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/union.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseFlatten = require('../internals/baseFlatten'),\n    baseUniq = require('../internals/baseUniq');\n\n/**\n * Creates an array of unique values, in order, of the provided arrays using\n * strict equality for comparisons, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {...Array} [array] The arrays to inspect.\n * @returns {Array} Returns an array of combined values.\n * @example\n *\n * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);\n * // => [1, 2, 3, 5, 4]\n */\nfunction union() {\n  return baseUniq(baseFlatten(arguments, true, true));\n}\n\nmodule.exports = union;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/baseUniq.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseIndexOf = require('./baseIndexOf'),\n    cacheIndexOf = require('./cacheIndexOf'),\n    createCache = require('./createCache'),\n    getArray = require('./getArray'),\n    largeArraySize = require('./largeArraySize'),\n    releaseArray = require('./releaseArray'),\n    releaseObject = require('./releaseObject');\n\n/**\n * The base implementation of `_.uniq` without support for callback shorthands\n * or `thisArg` binding.\n *\n * @private\n * @param {Array} array The array to process.\n * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n * @param {Function} [callback] The function called per iteration.\n * @returns {Array} Returns a duplicate-value-free array.\n */\nfunction baseUniq(array, isSorted, callback) {\n  var index = -1,\n      indexOf = baseIndexOf,\n      length = array ? array.length : 0,\n      result = [];\n\n  var isLarge = !isSorted && length >= largeArraySize,\n      seen = (callback || isLarge) ? getArray() : result;\n\n  if (isLarge) {\n    var cache = createCache(seen);\n    indexOf = cacheIndexOf;\n    seen = cache;\n  }\n  while (++index < length) {\n    var value = array[index],\n        computed = callback ? callback(value, index, array) : value;\n\n    if (isSorted\n          ? !index || seen[seen.length - 1] !== computed\n          : indexOf(seen, computed) < 0\n        ) {\n      if (callback || isLarge) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  if (isLarge) {\n    releaseArray(seen.array);\n    releaseObject(seen);\n  } else if (callback) {\n    releaseArray(seen);\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/uniq.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseUniq = require('../internals/baseUniq'),\n    createCallback = require('../functions/createCallback');\n\n/**\n * Creates a duplicate-value-free version of an array using strict equality\n * for comparisons, i.e. `===`. If the array is sorted, providing\n * `true` for `isSorted` will use a faster algorithm. If a callback is provided\n * each element of `array` is passed through the callback before uniqueness\n * is computed. The callback is bound to `thisArg` and invoked with three\n * arguments; (value, index, array).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias unique\n * @category Arrays\n * @param {Array} array The array to process.\n * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a duplicate-value-free array.\n * @example\n *\n * _.uniq([1, 2, 1, 3, 1]);\n * // => [1, 2, 3]\n *\n * _.uniq([1, 1, 2, 2, 3], true);\n * // => [1, 2, 3]\n *\n * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });\n * // => ['A', 'b', 'C']\n *\n * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);\n * // => [1, 2.5, 3]\n *\n * // using \"_.pluck\" callback shorthand\n * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniq(array, isSorted, callback, thisArg) {\n  // juggle arguments\n  if (typeof isSorted != 'boolean' && isSorted != null) {\n    thisArg = callback;\n    callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;\n    isSorted = false;\n  }\n  if (callback != null) {\n    callback = createCallback(callback, thisArg, 3);\n  }\n  return baseUniq(array, isSorted, callback);\n}\n\nmodule.exports = uniq;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/zip.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar max = require('../collections/max'),\n    pluck = require('../collections/pluck');\n\n/**\n * Creates an array of grouped elements, the first of which contains the first\n * elements of the given arrays, the second of which contains the second\n * elements of the given arrays, and so on.\n *\n * @static\n * @memberOf _\n * @alias unzip\n * @category Arrays\n * @param {...Array} [array] Arrays to process.\n * @returns {Array} Returns a new array of grouped elements.\n * @example\n *\n * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n * // => [['fred', 30, true], ['barney', 40, false]]\n */\nfunction zip() {\n  var array = arguments.length > 1 ? arguments : arguments[0],\n      index = -1,\n      length = array ? max(pluck(array, 'length')) : 0,\n      result = Array(length < 0 ? 0 : length);\n\n  while (++index < length) {\n    result[index] = pluck(array, index);\n  }\n  return result;\n}\n\nmodule.exports = zip;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/max.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar charAtCallback = require('../internals/charAtCallback'),\n    createCallback = require('../functions/createCallback'),\n    forEach = require('./forEach'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray'),\n    isString = require('../objects/isString');\n\n/**\n * Retrieves the maximum value of a collection. If the collection is empty or\n * falsey `-Infinity` is returned. If a callback is provided it will be executed\n * for each value in the collection to generate the criterion by which the value\n * is ranked. The callback is bound to `thisArg` and invoked with three\n * arguments; (value, index, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * _.max(characters, function(chr) { return chr.age; });\n * // => { 'name': 'fred', 'age': 40 };\n *\n * // using \"_.pluck\" callback shorthand\n * _.max(characters, 'age');\n * // => { 'name': 'fred', 'age': 40 };\n */\nfunction max(collection, callback, thisArg) {\n  var computed = -Infinity,\n      result = computed;\n\n  // allows working with functions like `_.map` without using\n  // their `index` argument as a callback\n  if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n    callback = null;\n  }\n  if (callback == null && isArray(collection)) {\n    var index = -1,\n        length = collection.length;\n\n    while (++index < length) {\n      var value = collection[index];\n      if (value > result) {\n        result = value;\n      }\n    }\n  } else {\n    callback = (callback == null && isString(collection))\n      ? charAtCallback\n      : createCallback(callback, thisArg, 3);\n\n    forEach(collection, function(value, index, collection) {\n      var current = callback(value, index, collection);\n      if (current > computed) {\n        computed = current;\n        result = value;\n      }\n    });\n  }\n  return result;\n}\n\nmodule.exports = max;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/charAtCallback.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Used by `_.max` and `_.min` as the default callback when a given\n * collection is a string value.\n *\n * @private\n * @param {string} value The character to inspect.\n * @returns {number} Returns the code unit of given character.\n */\nfunction charAtCallback(value) {\n  return value.charCodeAt(0);\n}\n\nmodule.exports = charAtCallback;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/forEach.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    forOwn = require('../objects/forOwn');\n\n/**\n * Iterates over elements of a collection, executing the callback for each\n * element. The callback is bound to `thisArg` and invoked with three arguments;\n * (value, index|key, collection). Callbacks may exit iteration early by\n * explicitly returning `false`.\n *\n * Note: As with other \"Collections\" methods, objects with a `length` property\n * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n * may be used for object iteration.\n *\n * @static\n * @memberOf _\n * @alias each\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array|Object|string} Returns `collection`.\n * @example\n *\n * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');\n * // => logs each number and returns '1,2,3'\n *\n * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });\n * // => logs each number and returns the object (property order is not guaranteed across environments)\n */\nfunction forEach(collection, callback, thisArg) {\n  var index = -1,\n      length = collection ? collection.length : 0;\n\n  callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n  if (typeof length == 'number') {\n    while (++index < length) {\n      if (callback(collection[index], index, collection) === false) {\n        break;\n      }\n    }\n  } else {\n    forOwn(collection, callback);\n  }\n  return collection;\n}\n\nmodule.exports = forEach;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isString.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** `Object#toString` result shortcuts */\nvar stringClass = '[object String]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is a string.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n * @example\n *\n * _.isString('fred');\n * // => true\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    value && typeof value == 'object' && toString.call(value) == stringClass || false;\n}\n\nmodule.exports = isString;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/pluck.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar map = require('./map');\n\n/**\n * Retrieves the value of a specified property from all elements in the collection.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {string} property The name of the property to pluck.\n * @returns {Array} Returns a new array of property values.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * _.pluck(characters, 'name');\n * // => ['barney', 'fred']\n */\nvar pluck = map;\n\nmodule.exports = pluck;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/without.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseDifference = require('../internals/baseDifference'),\n    slice = require('../internals/slice');\n\n/**\n * Creates an array excluding all provided values using strict equality for\n * comparisons, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {Array} array The array to filter.\n * @param {...*} [value] The values to exclude.\n * @returns {Array} Returns a new array of filtered values.\n * @example\n *\n * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n * // => [2, 3, 4]\n */\nfunction without(array) {\n  return baseDifference(array, slice(arguments, 1));\n}\n\nmodule.exports = without;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/arrays/xor.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseDifference = require('../internals/baseDifference'),\n    baseUniq = require('../internals/baseUniq'),\n    isArguments = require('../objects/isArguments'),\n    isArray = require('../objects/isArray');\n\n/**\n * Creates an array that is the symmetric difference of the provided arrays.\n * See http://en.wikipedia.org/wiki/Symmetric_difference.\n *\n * @static\n * @memberOf _\n * @category Arrays\n * @param {...Array} [array] The arrays to inspect.\n * @returns {Array} Returns an array of values.\n * @example\n *\n * _.xor([1, 2, 3], [5, 2, 1, 4]);\n * // => [3, 5, 4]\n *\n * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);\n * // => [1, 4, 5]\n */\nfunction xor() {\n  var index = -1,\n      length = arguments.length;\n\n  while (++index < length) {\n    var array = arguments[index];\n    if (isArray(array) || isArguments(array)) {\n      var result = result\n        ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))\n        : array;\n    }\n  }\n  return result || [];\n}\n\nmodule.exports = xor;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/chaining.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\nmodule.exports = {\n  'chain': require('./chaining/chain'),\n  'tap': require('./chaining/tap'),\n  'value': require('./chaining/wrapperValueOf'),\n  'wrapperChain': require('./chaining/wrapperChain'),\n  'wrapperToString': require('./chaining/wrapperToString'),\n  'wrapperValueOf': require('./chaining/wrapperValueOf')\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/chaining/chain.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar lodashWrapper = require('../internals/lodashWrapper');\n\n/**\n * Creates a `lodash` object that wraps the given value with explicit\n * method chaining enabled.\n *\n * @static\n * @memberOf _\n * @category Chaining\n * @param {*} value The value to wrap.\n * @returns {Object} Returns the wrapper object.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney',  'age': 36 },\n *   { 'name': 'fred',    'age': 40 },\n *   { 'name': 'pebbles', 'age': 1 }\n * ];\n *\n * var youngest = _.chain(characters)\n *     .sortBy('age')\n *     .map(function(chr) { return chr.name + ' is ' + chr.age; })\n *     .first()\n *     .value();\n * // => 'pebbles is 1'\n */\nfunction chain(value) {\n  value = new lodashWrapper(value);\n  value.__chain__ = true;\n  return value;\n}\n\nmodule.exports = chain;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/lodashWrapper.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * A fast path for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap in a `lodash` instance.\n * @param {boolean} chainAll A flag to enable chaining for all methods\n * @returns {Object} Returns a `lodash` instance.\n */\nfunction lodashWrapper(value, chainAll) {\n  this.__chain__ = !!chainAll;\n  this.__wrapped__ = value;\n}\n\nmodule.exports = lodashWrapper;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/chaining/tap.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Invokes `interceptor` with the `value` as the first argument and then\n * returns `value`. The purpose of this method is to \"tap into\" a method\n * chain in order to perform operations on intermediate results within\n * the chain.\n *\n * @static\n * @memberOf _\n * @category Chaining\n * @param {*} value The value to provide to `interceptor`.\n * @param {Function} interceptor The function to invoke.\n * @returns {*} Returns `value`.\n * @example\n *\n * _([1, 2, 3, 4])\n *  .tap(function(array) { array.pop(); })\n *  .reverse()\n *  .value();\n * // => [3, 2, 1]\n */\nfunction tap(value, interceptor) {\n  interceptor(value);\n  return value;\n}\n\nmodule.exports = tap;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/chaining/wrapperValueOf.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forEach = require('../collections/forEach'),\n    support = require('../support');\n\n/**\n * Extracts the wrapped value.\n *\n * @name valueOf\n * @memberOf _\n * @alias value\n * @category Chaining\n * @returns {*} Returns the wrapped value.\n * @example\n *\n * _([1, 2, 3]).valueOf();\n * // => [1, 2, 3]\n */\nfunction wrapperValueOf() {\n  return this.__wrapped__;\n}\n\nmodule.exports = wrapperValueOf;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/chaining/wrapperChain.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Enables explicit method chaining on the wrapper object.\n *\n * @name chain\n * @memberOf _\n * @category Chaining\n * @returns {*} Returns the wrapper object.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * // without explicit chaining\n * _(characters).first();\n * // => { 'name': 'barney', 'age': 36 }\n *\n * // with explicit chaining\n * _(characters).chain()\n *   .first()\n *   .pick('age')\n *   .value();\n * // => { 'age': 36 }\n */\nfunction wrapperChain() {\n  this.__chain__ = true;\n  return this;\n}\n\nmodule.exports = wrapperChain;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/chaining/wrapperToString.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Produces the `toString` result of the wrapped value.\n *\n * @name toString\n * @memberOf _\n * @category Chaining\n * @returns {string} Returns the string result.\n * @example\n *\n * _([1, 2, 3]).toString();\n * // => '1,2,3'\n */\nfunction wrapperToString() {\n  return String(this.__wrapped__);\n}\n\nmodule.exports = wrapperToString;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\nmodule.exports = {\n  'all': require('./collections/every'),\n  'any': require('./collections/some'),\n  'at': require('./collections/at'),\n  'collect': require('./collections/map'),\n  'contains': require('./collections/contains'),\n  'countBy': require('./collections/countBy'),\n  'detect': require('./collections/find'),\n  'each': require('./collections/forEach'),\n  'eachRight': require('./collections/forEachRight'),\n  'every': require('./collections/every'),\n  'filter': require('./collections/filter'),\n  'find': require('./collections/find'),\n  'findLast': require('./collections/findLast'),\n  'findWhere': require('./collections/find'),\n  'foldl': require('./collections/reduce'),\n  'foldr': require('./collections/reduceRight'),\n  'forEach': require('./collections/forEach'),\n  'forEachRight': require('./collections/forEachRight'),\n  'groupBy': require('./collections/groupBy'),\n  'include': require('./collections/contains'),\n  'indexBy': require('./collections/indexBy'),\n  'inject': require('./collections/reduce'),\n  'invoke': require('./collections/invoke'),\n  'map': require('./collections/map'),\n  'max': require('./collections/max'),\n  'min': require('./collections/min'),\n  'pluck': require('./collections/pluck'),\n  'reduce': require('./collections/reduce'),\n  'reduceRight': require('./collections/reduceRight'),\n  'reject': require('./collections/reject'),\n  'sample': require('./collections/sample'),\n  'select': require('./collections/filter'),\n  'shuffle': require('./collections/shuffle'),\n  'size': require('./collections/size'),\n  'some': require('./collections/some'),\n  'sortBy': require('./collections/sortBy'),\n  'toArray': require('./collections/toArray'),\n  'where': require('./collections/where')\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/every.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn');\n\n/**\n * Checks if the given callback returns truey value for **all** elements of\n * a collection. The callback is bound to `thisArg` and invoked with three\n * arguments; (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias all\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {boolean} Returns `true` if all elements passed the callback check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes']);\n * // => false\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.every(characters, 'age');\n * // => true\n *\n * // using \"_.where\" callback shorthand\n * _.every(characters, { 'age': 36 });\n * // => false\n */\nfunction every(collection, callback, thisArg) {\n  var result = true;\n  callback = createCallback(callback, thisArg, 3);\n\n  var index = -1,\n      length = collection ? collection.length : 0;\n\n  if (typeof length == 'number') {\n    while (++index < length) {\n      if (!(result = !!callback(collection[index], index, collection))) {\n        break;\n      }\n    }\n  } else {\n    forOwn(collection, function(value, index, collection) {\n      return (result = !!callback(value, index, collection));\n    });\n  }\n  return result;\n}\n\nmodule.exports = every;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/some.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray');\n\n/**\n * Checks if the callback returns a truey value for **any** element of a\n * collection. The function returns as soon as it finds a passing value and\n * does not iterate over the entire collection. The callback is bound to\n * `thisArg` and invoked with three arguments; (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias any\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {boolean} Returns `true` if any element passed the callback check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36, 'blocked': false },\n *   { 'name': 'fred',   'age': 40, 'blocked': true }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.some(characters, 'blocked');\n * // => true\n *\n * // using \"_.where\" callback shorthand\n * _.some(characters, { 'age': 1 });\n * // => false\n */\nfunction some(collection, callback, thisArg) {\n  var result;\n  callback = createCallback(callback, thisArg, 3);\n\n  var index = -1,\n      length = collection ? collection.length : 0;\n\n  if (typeof length == 'number') {\n    while (++index < length) {\n      if ((result = callback(collection[index], index, collection))) {\n        break;\n      }\n    }\n  } else {\n    forOwn(collection, function(value, index, collection) {\n      return !(result = callback(value, index, collection));\n    });\n  }\n  return !!result;\n}\n\nmodule.exports = some;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/at.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseFlatten = require('../internals/baseFlatten'),\n    isString = require('../objects/isString');\n\n/**\n * Creates an array of elements from the specified indexes, or keys, of the\n * `collection`. Indexes may be specified as individual arguments or as arrays\n * of indexes.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`\n *   to retrieve, specified as individual indexes or arrays of indexes.\n * @returns {Array} Returns a new array of elements corresponding to the\n *  provided indexes.\n * @example\n *\n * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n * // => ['a', 'c', 'e']\n *\n * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n * // => ['fred', 'pebbles']\n */\nfunction at(collection) {\n  var args = arguments,\n      index = -1,\n      props = baseFlatten(args, true, false, 1),\n      length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,\n      result = Array(length);\n\n  while(++index < length) {\n    result[index] = collection[props[index]];\n  }\n  return result;\n}\n\nmodule.exports = at;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/contains.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseIndexOf = require('../internals/baseIndexOf'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray'),\n    isString = require('../objects/isString');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max;\n\n/**\n * Checks if a given value is present in a collection using strict equality\n * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n * offset from the end of the collection.\n *\n * @static\n * @memberOf _\n * @alias include\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {*} target The value to check for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n * @example\n *\n * _.contains([1, 2, 3], 1);\n * // => true\n *\n * _.contains([1, 2, 3], 1, 2);\n * // => false\n *\n * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');\n * // => true\n *\n * _.contains('pebbles', 'eb');\n * // => true\n */\nfunction contains(collection, target, fromIndex) {\n  var index = -1,\n      indexOf = baseIndexOf,\n      length = collection ? collection.length : 0,\n      result = false;\n\n  fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n  if (isArray(collection)) {\n    result = indexOf(collection, target, fromIndex) > -1;\n  } else if (typeof length == 'number') {\n    result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;\n  } else {\n    forOwn(collection, function(value) {\n      if (++index >= fromIndex) {\n        return !(result = value === target);\n      }\n    });\n  }\n  return result;\n}\n\nmodule.exports = contains;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/countBy.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createAggregator = require('../internals/createAggregator');\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` through the callback. The corresponding value\n * of each key is the number of times the key was returned by the callback.\n * The callback is bound to `thisArg` and invoked with three arguments;\n * (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n * // => { '4': 1, '6': 2 }\n *\n * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n * // => { '4': 1, '6': 2 }\n *\n * _.countBy(['one', 'two', 'three'], 'length');\n * // => { '3': 2, '5': 1 }\n */\nvar countBy = createAggregator(function(result, value, key) {\n  (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n});\n\nmodule.exports = countBy;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/createAggregator.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray');\n\n/**\n * Creates a function that aggregates a collection, creating an object composed\n * of keys generated from the results of running each element of the collection\n * through a callback. The given `setter` function sets the keys and values\n * of the composed object.\n *\n * @private\n * @param {Function} setter The setter function.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter) {\n  return function(collection, callback, thisArg) {\n    var result = {};\n    callback = createCallback(callback, thisArg, 3);\n\n    var index = -1,\n        length = collection ? collection.length : 0;\n\n    if (typeof length == 'number') {\n      while (++index < length) {\n        var value = collection[index];\n        setter(result, value, callback(value, index, collection), collection);\n      }\n    } else {\n      forOwn(collection, function(value, key, collection) {\n        setter(result, value, callback(value, key, collection), collection);\n      });\n    }\n    return result;\n  };\n}\n\nmodule.exports = createAggregator;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/find.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn');\n\n/**\n * Iterates over elements of a collection, returning the first element that\n * the callback returns truey for. The callback is bound to `thisArg` and\n * invoked with three arguments; (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias detect, findWhere\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the found element, else `undefined`.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney',  'age': 36, 'blocked': false },\n *   { 'name': 'fred',    'age': 40, 'blocked': true },\n *   { 'name': 'pebbles', 'age': 1,  'blocked': false }\n * ];\n *\n * _.find(characters, function(chr) {\n *   return chr.age < 40;\n * });\n * // => { 'name': 'barney', 'age': 36, 'blocked': false }\n *\n * // using \"_.where\" callback shorthand\n * _.find(characters, { 'age': 1 });\n * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }\n *\n * // using \"_.pluck\" callback shorthand\n * _.find(characters, 'blocked');\n * // => { 'name': 'fred', 'age': 40, 'blocked': true }\n */\nfunction find(collection, callback, thisArg) {\n  callback = createCallback(callback, thisArg, 3);\n\n  var index = -1,\n      length = collection ? collection.length : 0;\n\n  if (typeof length == 'number') {\n    while (++index < length) {\n      var value = collection[index];\n      if (callback(value, index, collection)) {\n        return value;\n      }\n    }\n  } else {\n    var result;\n    forOwn(collection, function(value, index, collection) {\n      if (callback(value, index, collection)) {\n        result = value;\n        return false;\n      }\n    });\n    return result;\n  }\n}\n\nmodule.exports = find;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/forEachRight.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray'),\n    isString = require('../objects/isString'),\n    keys = require('../objects/keys');\n\n/**\n * This method is like `_.forEach` except that it iterates over elements\n * of a `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @alias eachRight\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array|Object|string} Returns `collection`.\n * @example\n *\n * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');\n * // => logs each number from right to left and returns '3,2,1'\n */\nfunction forEachRight(collection, callback, thisArg) {\n  var length = collection ? collection.length : 0;\n  callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n  if (typeof length == 'number') {\n    while (length--) {\n      if (callback(collection[length], length, collection) === false) {\n        break;\n      }\n    }\n  } else {\n    var props = keys(collection);\n    length = props.length;\n    forOwn(collection, function(value, key, collection) {\n      key = props ? props[--length] : --length;\n      return callback(collection[key], key, collection);\n    });\n  }\n  return collection;\n}\n\nmodule.exports = forEachRight;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/filter.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn');\n\n/**\n * Iterates over elements of a collection, returning an array of all elements\n * the callback returns truey for. The callback is bound to `thisArg` and\n * invoked with three arguments; (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @alias select\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new array of elements that passed the callback check.\n * @example\n *\n * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n * // => [2, 4, 6]\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36, 'blocked': false },\n *   { 'name': 'fred',   'age': 40, 'blocked': true }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.filter(characters, 'blocked');\n * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n *\n * // using \"_.where\" callback shorthand\n * _.filter(characters, { 'age': 36 });\n * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n */\nfunction filter(collection, callback, thisArg) {\n  var result = [];\n  callback = createCallback(callback, thisArg, 3);\n\n  var index = -1,\n      length = collection ? collection.length : 0;\n\n  if (typeof length == 'number') {\n    while (++index < length) {\n      var value = collection[index];\n      if (callback(value, index, collection)) {\n        result.push(value);\n      }\n    }\n  } else {\n    forOwn(collection, function(value, index, collection) {\n      if (callback(value, index, collection)) {\n        result.push(value);\n      }\n    });\n  }\n  return result;\n}\n\nmodule.exports = filter;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/findLast.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forEachRight = require('./forEachRight');\n\n/**\n * This method is like `_.find` except that it iterates over elements\n * of a `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the found element, else `undefined`.\n * @example\n *\n * _.findLast([1, 2, 3, 4], function(num) {\n *   return num % 2 == 1;\n * });\n * // => 3\n */\nfunction findLast(collection, callback, thisArg) {\n  var result;\n  callback = createCallback(callback, thisArg, 3);\n  forEachRight(collection, function(value, index, collection) {\n    if (callback(value, index, collection)) {\n      result = value;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = findLast;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/reduce.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('../objects/forOwn');\n\n/**\n * Reduces a collection to a value which is the accumulated result of running\n * each element in the collection through the callback, where each successive\n * callback execution consumes the return value of the previous execution. If\n * `accumulator` is not provided the first element of the collection will be\n * used as the initial `accumulator` value. The callback is bound to `thisArg`\n * and invoked with four arguments; (accumulator, value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @alias foldl, inject\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [accumulator] Initial value of the accumulator.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * var sum = _.reduce([1, 2, 3], function(sum, num) {\n *   return sum + num;\n * });\n * // => 6\n *\n * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n *   result[key] = num * 3;\n *   return result;\n * }, {});\n * // => { 'a': 3, 'b': 6, 'c': 9 }\n */\nfunction reduce(collection, callback, accumulator, thisArg) {\n  if (!collection) return accumulator;\n  var noaccum = arguments.length < 3;\n  callback = createCallback(callback, thisArg, 4);\n\n  var index = -1,\n      length = collection.length;\n\n  if (typeof length == 'number') {\n    if (noaccum) {\n      accumulator = collection[++index];\n    }\n    while (++index < length) {\n      accumulator = callback(accumulator, collection[index], index, collection);\n    }\n  } else {\n    forOwn(collection, function(value, index, collection) {\n      accumulator = noaccum\n        ? (noaccum = false, value)\n        : callback(accumulator, value, index, collection)\n    });\n  }\n  return accumulator;\n}\n\nmodule.exports = reduce;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/reduceRight.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forEachRight = require('./forEachRight');\n\n/**\n * This method is like `_.reduce` except that it iterates over elements\n * of a `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @alias foldr\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [accumulator] Initial value of the accumulator.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * var list = [[0, 1], [2, 3], [4, 5]];\n * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n * // => [4, 5, 2, 3, 0, 1]\n */\nfunction reduceRight(collection, callback, accumulator, thisArg) {\n  var noaccum = arguments.length < 3;\n  callback = createCallback(callback, thisArg, 4);\n  forEachRight(collection, function(value, index, collection) {\n    accumulator = noaccum\n      ? (noaccum = false, value)\n      : callback(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = reduceRight;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/groupBy.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createAggregator = require('../internals/createAggregator');\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of a collection through the callback. The corresponding value\n * of each key is an array of the elements responsible for generating the key.\n * The callback is bound to `thisArg` and invoked with three arguments;\n * (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n * // => { '4': [4.2], '6': [6.1, 6.4] }\n *\n * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n * // => { '4': [4.2], '6': [6.1, 6.4] }\n *\n * // using \"_.pluck\" callback shorthand\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n});\n\nmodule.exports = groupBy;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/indexBy.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createAggregator = require('../internals/createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of the collection through the given callback. The corresponding\n * value of each key is the last element responsible for generating the key.\n * The callback is bound to `thisArg` and invoked with three arguments;\n * (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var keys = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.indexBy(keys, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n *\n * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n */\nvar indexBy = createAggregator(function(result, value, key) {\n  result[key] = value;\n});\n\nmodule.exports = indexBy;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/invoke.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forEach = require('./forEach'),\n    slice = require('../internals/slice');\n\n/**\n * Invokes the method named by `methodName` on each element in the `collection`\n * returning an array of the results of each invoked method. Additional arguments\n * will be provided to each invoked method. If `methodName` is a function it\n * will be invoked for, and `this` bound to, each element in the `collection`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|string} methodName The name of the method to invoke or\n *  the function invoked per iteration.\n * @param {...*} [arg] Arguments to invoke the method with.\n * @returns {Array} Returns a new array of the results of each invoked method.\n * @example\n *\n * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n * // => [[1, 5, 7], [1, 2, 3]]\n *\n * _.invoke([123, 456], String.prototype.split, '');\n * // => [['1', '2', '3'], ['4', '5', '6']]\n */\nfunction invoke(collection, methodName) {\n  var args = slice(arguments, 2),\n      index = -1,\n      isFunc = typeof methodName == 'function',\n      length = collection ? collection.length : 0,\n      result = Array(typeof length == 'number' ? length : 0);\n\n  forEach(collection, function(value) {\n    result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n  });\n  return result;\n}\n\nmodule.exports = invoke;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/min.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar charAtCallback = require('../internals/charAtCallback'),\n    createCallback = require('../functions/createCallback'),\n    forEach = require('./forEach'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray'),\n    isString = require('../objects/isString');\n\n/**\n * Retrieves the minimum value of a collection. If the collection is empty or\n * falsey `Infinity` is returned. If a callback is provided it will be executed\n * for each value in the collection to generate the criterion by which the value\n * is ranked. The callback is bound to `thisArg` and invoked with three\n * arguments; (value, index, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * _.min(characters, function(chr) { return chr.age; });\n * // => { 'name': 'barney', 'age': 36 };\n *\n * // using \"_.pluck\" callback shorthand\n * _.min(characters, 'age');\n * // => { 'name': 'barney', 'age': 36 };\n */\nfunction min(collection, callback, thisArg) {\n  var computed = Infinity,\n      result = computed;\n\n  // allows working with functions like `_.map` without using\n  // their `index` argument as a callback\n  if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {\n    callback = null;\n  }\n  if (callback == null && isArray(collection)) {\n    var index = -1,\n        length = collection.length;\n\n    while (++index < length) {\n      var value = collection[index];\n      if (value < result) {\n        result = value;\n      }\n    }\n  } else {\n    callback = (callback == null && isString(collection))\n      ? charAtCallback\n      : createCallback(callback, thisArg, 3);\n\n    forEach(collection, function(value, index, collection) {\n      var current = callback(value, index, collection);\n      if (current < computed) {\n        computed = current;\n        result = value;\n      }\n    });\n  }\n  return result;\n}\n\nmodule.exports = min;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/reject.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    filter = require('./filter');\n\n/**\n * The opposite of `_.filter` this method returns the elements of a\n * collection that the callback does **not** return truey for.\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new array of elements that failed the callback check.\n * @example\n *\n * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n * // => [1, 3, 5]\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36, 'blocked': false },\n *   { 'name': 'fred',   'age': 40, 'blocked': true }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.reject(characters, 'blocked');\n * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]\n *\n * // using \"_.where\" callback shorthand\n * _.reject(characters, { 'age': 36 });\n * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]\n */\nfunction reject(collection, callback, thisArg) {\n  callback = createCallback(callback, thisArg, 3);\n  return filter(collection, function(value, index, collection) {\n    return !callback(value, index, collection);\n  });\n}\n\nmodule.exports = reject;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/sample.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseRandom = require('../internals/baseRandom'),\n    isString = require('../objects/isString'),\n    shuffle = require('./shuffle'),\n    values = require('../objects/values');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Retrieves a random element or `n` random elements from a collection.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to sample.\n * @param {number} [n] The number of elements to sample.\n * @param- {Object} [guard] Allows working with functions like `_.map`\n *  without using their `index` arguments as `n`.\n * @returns {Array} Returns the random sample(s) of `collection`.\n * @example\n *\n * _.sample([1, 2, 3, 4]);\n * // => 2\n *\n * _.sample([1, 2, 3, 4], 2);\n * // => [3, 1]\n */\nfunction sample(collection, n, guard) {\n  if (collection && typeof collection.length != 'number') {\n    collection = values(collection);\n  }\n  if (n == null || guard) {\n    return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;\n  }\n  var result = shuffle(collection);\n  result.length = nativeMin(nativeMax(0, n), result.length);\n  return result;\n}\n\nmodule.exports = sample;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/baseRandom.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Native method shortcuts */\nvar floor = Math.floor;\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without argument juggling or support\n * for returning floating-point numbers.\n *\n * @private\n * @param {number} min The minimum possible value.\n * @param {number} max The maximum possible value.\n * @returns {number} Returns a random number.\n */\nfunction baseRandom(min, max) {\n  return min + floor(nativeRandom() * (max - min + 1));\n}\n\nmodule.exports = baseRandom;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/shuffle.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseRandom = require('../internals/baseRandom'),\n    forEach = require('./forEach');\n\n/**\n * Creates an array of shuffled values, using a version of the Fisher-Yates\n * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to shuffle.\n * @returns {Array} Returns a new shuffled collection.\n * @example\n *\n * _.shuffle([1, 2, 3, 4, 5, 6]);\n * // => [4, 1, 6, 3, 5, 2]\n */\nfunction shuffle(collection) {\n  var index = -1,\n      length = collection ? collection.length : 0,\n      result = Array(typeof length == 'number' ? length : 0);\n\n  forEach(collection, function(value) {\n    var rand = baseRandom(0, ++index);\n    result[index] = result[rand];\n    result[rand] = value;\n  });\n  return result;\n}\n\nmodule.exports = shuffle;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/values.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keys = require('./keys');\n\n/**\n * Creates an array composed of the own enumerable property values of `object`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns an array of property values.\n * @example\n *\n * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n * // => [1, 2, 3] (property order is not guaranteed across environments)\n */\nfunction values(object) {\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = object[props[index]];\n  }\n  return result;\n}\n\nmodule.exports = values;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/size.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keys = require('../objects/keys');\n\n/**\n * Gets the size of the `collection` by returning `collection.length` for arrays\n * and array-like objects or the number of own enumerable properties for objects.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns `collection.length` or number of own enumerable properties.\n * @example\n *\n * _.size([1, 2]);\n * // => 2\n *\n * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n * // => 3\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  var length = collection ? collection.length : 0;\n  return typeof length == 'number' ? length : keys(collection).length;\n}\n\nmodule.exports = size;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/sortBy.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar compareAscending = require('../internals/compareAscending'),\n    createCallback = require('../functions/createCallback'),\n    forEach = require('./forEach'),\n    getArray = require('../internals/getArray'),\n    getObject = require('../internals/getObject'),\n    isArray = require('../objects/isArray'),\n    map = require('./map'),\n    releaseArray = require('../internals/releaseArray'),\n    releaseObject = require('../internals/releaseObject');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection through the callback. This method\n * performs a stable sort, that is, it will preserve the original sort order\n * of equal elements. The callback is bound to `thisArg` and invoked with\n * three arguments; (value, index|key, collection).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an array of property names is provided for `callback` the collection\n * will be sorted by each property value.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Array|Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new array of sorted elements.\n * @example\n *\n * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n * // => [3, 1, 2]\n *\n * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n * // => [3, 1, 2]\n *\n * var characters = [\n *   { 'name': 'barney',  'age': 36 },\n *   { 'name': 'fred',    'age': 40 },\n *   { 'name': 'barney',  'age': 26 },\n *   { 'name': 'fred',    'age': 30 }\n * ];\n *\n * // using \"_.pluck\" callback shorthand\n * _.map(_.sortBy(characters, 'age'), _.values);\n * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]\n *\n * // sorting by multiple properties\n * _.map(_.sortBy(characters, ['name', 'age']), _.values);\n * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n */\nfunction sortBy(collection, callback, thisArg) {\n  var index = -1,\n      isArr = isArray(callback),\n      length = collection ? collection.length : 0,\n      result = Array(typeof length == 'number' ? length : 0);\n\n  if (!isArr) {\n    callback = createCallback(callback, thisArg, 3);\n  }\n  forEach(collection, function(value, key, collection) {\n    var object = result[++index] = getObject();\n    if (isArr) {\n      object.criteria = map(callback, function(key) { return value[key]; });\n    } else {\n      (object.criteria = getArray())[0] = callback(value, key, collection);\n    }\n    object.index = index;\n    object.value = value;\n  });\n\n  length = result.length;\n  result.sort(compareAscending);\n  while (length--) {\n    var object = result[length];\n    result[length] = object.value;\n    if (!isArr) {\n      releaseArray(object.criteria);\n    }\n    releaseObject(object);\n  }\n  return result;\n}\n\nmodule.exports = sortBy;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/compareAscending.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Used by `sortBy` to compare transformed `collection` elements, stable sorting\n * them in ascending order.\n *\n * @private\n * @param {Object} a The object to compare to `b`.\n * @param {Object} b The object to compare to `a`.\n * @returns {number} Returns the sort order indicator of `1` or `-1`.\n */\nfunction compareAscending(a, b) {\n  var ac = a.criteria,\n      bc = b.criteria,\n      index = -1,\n      length = ac.length;\n\n  while (++index < length) {\n    var value = ac[index],\n        other = bc[index];\n\n    if (value !== other) {\n      if (value > other || typeof value == 'undefined') {\n        return 1;\n      }\n      if (value < other || typeof other == 'undefined') {\n        return -1;\n      }\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to return the same value for\n  // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See http://code.google.com/p/v8/issues/detail?id=90\n  return a.index - b.index;\n}\n\nmodule.exports = compareAscending;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/toArray.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isString = require('../objects/isString'),\n    slice = require('../internals/slice'),\n    values = require('../objects/values');\n\n/**\n * Converts the `collection` to an array.\n *\n * @static\n * @memberOf _\n * @category Collections\n * @param {Array|Object|string} collection The collection to convert.\n * @returns {Array} Returns the new converted array.\n * @example\n *\n * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n * // => [2, 3, 4]\n */\nfunction toArray(collection) {\n  if (collection && typeof collection.length == 'number') {\n    return slice(collection);\n  }\n  return values(collection);\n}\n\nmodule.exports = toArray;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/collections/where.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar filter = require('./filter');\n\n/**\n * Performs a deep comparison of each element in a `collection` to the given\n * `properties` object, returning an array of all elements that have equivalent\n * property values.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Collections\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Object} props The object of property values to filter by.\n * @returns {Array} Returns a new array of elements that have the given properties.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },\n *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n * ];\n *\n * _.where(characters, { 'age': 36 });\n * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]\n *\n * _.where(characters, { 'pets': ['dino'] });\n * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]\n */\nvar where = filter;\n\nmodule.exports = where;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\nmodule.exports = {\n  'after': require('./functions/after'),\n  'bind': require('./functions/bind'),\n  'bindAll': require('./functions/bindAll'),\n  'bindKey': require('./functions/bindKey'),\n  'compose': require('./functions/compose'),\n  'createCallback': require('./functions/createCallback'),\n  'curry': require('./functions/curry'),\n  'debounce': require('./functions/debounce'),\n  'defer': require('./functions/defer'),\n  'delay': require('./functions/delay'),\n  'memoize': require('./functions/memoize'),\n  'once': require('./functions/once'),\n  'partial': require('./functions/partial'),\n  'partialRight': require('./functions/partialRight'),\n  'throttle': require('./functions/throttle'),\n  'wrap': require('./functions/wrap')\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/after.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction');\n\n/**\n * Creates a function that executes `func`, with  the `this` binding and\n * arguments of the created function, only after being called `n` times.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {number} n The number of times the function must be called before\n *  `func` is executed.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var saves = ['profile', 'settings'];\n *\n * var done = _.after(saves.length, function() {\n *   console.log('Done saving!');\n * });\n *\n * _.forEach(saves, function(type) {\n *   asyncSave({ 'type': type, 'complete': done });\n * });\n * // => logs 'Done saving!', after all saves have completed\n */\nfunction after(n, func) {\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  return function() {\n    if (--n < 1) {\n      return func.apply(this, arguments);\n    }\n  };\n}\n\nmodule.exports = after;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/bindAll.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseFlatten = require('../internals/baseFlatten'),\n    createWrapper = require('../internals/createWrapper'),\n    functions = require('../objects/functions');\n\n/**\n * Binds methods of an object to the object itself, overwriting the existing\n * method. Method names may be specified as individual arguments or as arrays\n * of method names. If no method names are provided all the function properties\n * of `object` will be bound.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Object} object The object to bind and assign the bound methods to.\n * @param {...string} [methodName] The object method names to\n *  bind, specified as individual method names or arrays of method names.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var view = {\n *   'label': 'docs',\n *   'onClick': function() { console.log('clicked ' + this.label); }\n * };\n *\n * _.bindAll(view);\n * jQuery('#docs').on('click', view.onClick);\n * // => logs 'clicked docs', when the button is clicked\n */\nfunction bindAll(object) {\n  var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),\n      index = -1,\n      length = funcs.length;\n\n  while (++index < length) {\n    var key = funcs[index];\n    object[key] = createWrapper(object[key], 1, null, null, object);\n  }\n  return object;\n}\n\nmodule.exports = bindAll;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/functions.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forIn = require('./forIn'),\n    isFunction = require('./isFunction');\n\n/**\n * Creates a sorted array of property names of all enumerable properties,\n * own and inherited, of `object` that have function values.\n *\n * @static\n * @memberOf _\n * @alias methods\n * @category Objects\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns an array of property names that have function values.\n * @example\n *\n * _.functions(_);\n * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n */\nfunction functions(object) {\n  var result = [];\n  forIn(object, function(value, key) {\n    if (isFunction(value)) {\n      result.push(key);\n    }\n  });\n  return result.sort();\n}\n\nmodule.exports = functions;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/bindKey.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createWrapper = require('../internals/createWrapper'),\n    slice = require('../internals/slice');\n\n/**\n * Creates a function that, when called, invokes the method at `object[key]`\n * and prepends any additional `bindKey` arguments to those provided to the bound\n * function. This method differs from `_.bind` by allowing bound functions to\n * reference methods that will be redefined or don't yet exist.\n * See http://michaux.ca/articles/lazy-function-definition-pattern.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Object} object The object the method belongs to.\n * @param {string} key The key of the method.\n * @param {...*} [arg] Arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * var object = {\n *   'name': 'fred',\n *   'greet': function(greeting) {\n *     return greeting + ' ' + this.name;\n *   }\n * };\n *\n * var func = _.bindKey(object, 'greet', 'hi');\n * func();\n * // => 'hi fred'\n *\n * object.greet = function(greeting) {\n *   return greeting + 'ya ' + this.name + '!';\n * };\n *\n * func();\n * // => 'hiya fred!'\n */\nfunction bindKey(object, key) {\n  return arguments.length > 2\n    ? createWrapper(key, 19, slice(arguments, 2), null, object)\n    : createWrapper(key, 3, null, null, object);\n}\n\nmodule.exports = bindKey;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/compose.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction');\n\n/**\n * Creates a function that is the composition of the provided functions,\n * where each function consumes the return value of the function that follows.\n * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n * Each function is executed with the `this` binding of the composed function.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {...Function} [func] Functions to compose.\n * @returns {Function} Returns the new composed function.\n * @example\n *\n * var realNameMap = {\n *   'pebbles': 'penelope'\n * };\n *\n * var format = function(name) {\n *   name = realNameMap[name.toLowerCase()] || name;\n *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n * };\n *\n * var greet = function(formatted) {\n *   return 'Hiya ' + formatted + '!';\n * };\n *\n * var welcome = _.compose(greet, format);\n * welcome('pebbles');\n * // => 'Hiya Penelope!'\n */\nfunction compose() {\n  var funcs = arguments,\n      length = funcs.length;\n\n  while (length--) {\n    if (!isFunction(funcs[length])) {\n      throw new TypeError;\n    }\n  }\n  return function() {\n    var args = arguments,\n        length = funcs.length;\n\n    while (length--) {\n      args = [funcs[length].apply(this, args)];\n    }\n    return args[0];\n  };\n}\n\nmodule.exports = compose;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/curry.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createWrapper = require('../internals/createWrapper');\n\n/**\n * Creates a function which accepts one or more arguments of `func` that when\n * invoked either executes `func` returning its result, if all `func` arguments\n * have been provided, or returns a function that accepts one or more of the\n * remaining `func` arguments, and so on. The arity of `func` can be specified\n * if `func.length` is not sufficient.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to curry.\n * @param {number} [arity=func.length] The arity of `func`.\n * @returns {Function} Returns the new curried function.\n * @example\n *\n * var curried = _.curry(function(a, b, c) {\n *   console.log(a + b + c);\n * });\n *\n * curried(1)(2)(3);\n * // => 6\n *\n * curried(1, 2)(3);\n * // => 6\n *\n * curried(1, 2, 3);\n * // => 6\n */\nfunction curry(func, arity) {\n  arity = typeof arity == 'number' ? arity : (+arity || func.length);\n  return createWrapper(func, 4, null, null, null, arity);\n}\n\nmodule.exports = curry;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/debounce.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction'),\n    isObject = require('../objects/isObject'),\n    now = require('../utilities/now');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that will delay the execution of `func` until after\n * `wait` milliseconds have elapsed since the last time it was invoked.\n * Provide an options object to indicate that `func` should be invoked on\n * the leading and/or trailing edge of the `wait` timeout. Subsequent calls\n * to the debounced function will return the result of the last `func` call.\n *\n * Note: If `leading` and `trailing` options are `true` `func` will be called\n * on the trailing edge of the timeout only if the the debounced function is\n * invoked more than once during the `wait` timeout.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to debounce.\n * @param {number} wait The number of milliseconds to delay.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.\n * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.\n * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // avoid costly calculations while the window size is in flux\n * var lazyLayout = _.debounce(calculateLayout, 150);\n * jQuery(window).on('resize', lazyLayout);\n *\n * // execute `sendMail` when the click event is fired, debouncing subsequent calls\n * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * });\n *\n * // ensure `batchLog` is executed once after 1 second of debounced calls\n * var source = new EventSource('/stream');\n * source.addEventListener('message', _.debounce(batchLog, 250, {\n *   'maxWait': 1000\n * }, false);\n */\nfunction debounce(func, wait, options) {\n  var args,\n      maxTimeoutId,\n      result,\n      stamp,\n      thisArg,\n      timeoutId,\n      trailingCall,\n      lastCalled = 0,\n      maxWait = false,\n      trailing = true;\n\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  wait = nativeMax(0, wait) || 0;\n  if (options === true) {\n    var leading = true;\n    trailing = false;\n  } else if (isObject(options)) {\n    leading = options.leading;\n    maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);\n    trailing = 'trailing' in options ? options.trailing : trailing;\n  }\n  var delayed = function() {\n    var remaining = wait - (now() - stamp);\n    if (remaining <= 0) {\n      if (maxTimeoutId) {\n        clearTimeout(maxTimeoutId);\n      }\n      var isCalled = trailingCall;\n      maxTimeoutId = timeoutId = trailingCall = undefined;\n      if (isCalled) {\n        lastCalled = now();\n        result = func.apply(thisArg, args);\n        if (!timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n      }\n    } else {\n      timeoutId = setTimeout(delayed, remaining);\n    }\n  };\n\n  var maxDelayed = function() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    maxTimeoutId = timeoutId = trailingCall = undefined;\n    if (trailing || (maxWait !== wait)) {\n      lastCalled = now();\n      result = func.apply(thisArg, args);\n      if (!timeoutId && !maxTimeoutId) {\n        args = thisArg = null;\n      }\n    }\n  };\n\n  return function() {\n    args = arguments;\n    stamp = now();\n    thisArg = this;\n    trailingCall = trailing && (timeoutId || !leading);\n\n    if (maxWait === false) {\n      var leadingCall = leading && !timeoutId;\n    } else {\n      if (!maxTimeoutId && !leading) {\n        lastCalled = stamp;\n      }\n      var remaining = maxWait - (stamp - lastCalled),\n          isCalled = remaining <= 0;\n\n      if (isCalled) {\n        if (maxTimeoutId) {\n          maxTimeoutId = clearTimeout(maxTimeoutId);\n        }\n        lastCalled = stamp;\n        result = func.apply(thisArg, args);\n      }\n      else if (!maxTimeoutId) {\n        maxTimeoutId = setTimeout(maxDelayed, remaining);\n      }\n    }\n    if (isCalled && timeoutId) {\n      timeoutId = clearTimeout(timeoutId);\n    }\n    else if (!timeoutId && wait !== maxWait) {\n      timeoutId = setTimeout(delayed, wait);\n    }\n    if (leadingCall) {\n      isCalled = true;\n      result = func.apply(thisArg, args);\n    }\n    if (isCalled && !timeoutId && !maxTimeoutId) {\n      args = thisArg = null;\n    }\n    return result;\n  };\n}\n\nmodule.exports = debounce;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/now.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('../internals/isNative');\n\n/**\n * Gets the number of milliseconds that have elapsed since the Unix epoch\n * (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @example\n *\n * var stamp = _.now();\n * _.defer(function() { console.log(_.now() - stamp); });\n * // => logs the number of milliseconds it took for the deferred function to be called\n */\nvar now = isNative(now = Date.now) && now || function() {\n  return new Date().getTime();\n};\n\nmodule.exports = now;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/defer.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction'),\n    slice = require('../internals/slice');\n\n/**\n * Defers executing the `func` function until the current call stack has cleared.\n * Additional arguments will be provided to `func` when it is invoked.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to defer.\n * @param {...*} [arg] Arguments to invoke the function with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.defer(function(text) { console.log(text); }, 'deferred');\n * // logs 'deferred' after one or more milliseconds\n */\nfunction defer(func) {\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  var args = slice(arguments, 1);\n  return setTimeout(function() { func.apply(undefined, args); }, 1);\n}\n\nmodule.exports = defer;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/delay.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction'),\n    slice = require('../internals/slice');\n\n/**\n * Executes the `func` function after `wait` milliseconds. Additional arguments\n * will be provided to `func` when it is invoked.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay execution.\n * @param {...*} [arg] Arguments to invoke the function with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.delay(function(text) { console.log(text); }, 1000, 'later');\n * // => logs 'later' after one second\n */\nfunction delay(func, wait) {\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  var args = slice(arguments, 2);\n  return setTimeout(function() { func.apply(undefined, args); }, wait);\n}\n\nmodule.exports = delay;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/memoize.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction'),\n    keyPrefix = require('../internals/keyPrefix');\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided it will be used to determine the cache key for storing the result\n * based on the arguments provided to the memoized function. By default, the\n * first argument provided to the memoized function is used as the cache key.\n * The `func` is executed with the `this` binding of the memoized function.\n * The result cache is exposed as the `cache` property on the memoized function.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] A function used to resolve the cache key.\n * @returns {Function} Returns the new memoizing function.\n * @example\n *\n * var fibonacci = _.memoize(function(n) {\n *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n * });\n *\n * fibonacci(9)\n * // => 34\n *\n * var data = {\n *   'fred': { 'name': 'fred', 'age': 40 },\n *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n * };\n *\n * // modifying the result cache\n * var get = _.memoize(function(name) { return data[name]; }, _.identity);\n * get('pebbles');\n * // => { 'name': 'pebbles', 'age': 1 }\n *\n * get.cache.pebbles.name = 'penelope';\n * get('pebbles');\n * // => { 'name': 'penelope', 'age': 1 }\n */\nfunction memoize(func, resolver) {\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  var memoized = function() {\n    var cache = memoized.cache,\n        key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];\n\n    return hasOwnProperty.call(cache, key)\n      ? cache[key]\n      : (cache[key] = func.apply(this, arguments));\n  }\n  memoized.cache = {};\n  return memoized;\n}\n\nmodule.exports = memoize;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/once.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction');\n\n/**\n * Creates a function that is restricted to execute `func` once. Repeat calls to\n * the function will return the value of the first call. The `func` is executed\n * with the `this` binding of the created function.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // `initialize` executes `createApplication` once\n */\nfunction once(func) {\n  var ran,\n      result;\n\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  return function() {\n    if (ran) {\n      return result;\n    }\n    ran = true;\n    result = func.apply(this, arguments);\n\n    // clear the `func` variable so the function may be garbage collected\n    func = null;\n    return result;\n  };\n}\n\nmodule.exports = once;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/partial.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createWrapper = require('../internals/createWrapper'),\n    slice = require('../internals/slice');\n\n/**\n * Creates a function that, when called, invokes `func` with any additional\n * `partial` arguments prepended to those provided to the new function. This\n * method is similar to `_.bind` except it does **not** alter the `this` binding.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [arg] Arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * var greet = function(greeting, name) { return greeting + ' ' + name; };\n * var hi = _.partial(greet, 'hi');\n * hi('fred');\n * // => 'hi fred'\n */\nfunction partial(func) {\n  return createWrapper(func, 16, slice(arguments, 1));\n}\n\nmodule.exports = partial;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/partialRight.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createWrapper = require('../internals/createWrapper'),\n    slice = require('../internals/slice');\n\n/**\n * This method is like `_.partial` except that `partial` arguments are\n * appended to those provided to the new function.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [arg] Arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n *\n * var options = {\n *   'variable': 'data',\n *   'imports': { 'jq': $ }\n * };\n *\n * defaultsDeep(options, _.templateSettings);\n *\n * options.variable\n * // => 'data'\n *\n * options.imports\n * // => { '_': _, 'jq': $ }\n */\nfunction partialRight(func) {\n  return createWrapper(func, 32, null, slice(arguments, 1));\n}\n\nmodule.exports = partialRight;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/throttle.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar debounce = require('./debounce'),\n    isFunction = require('../objects/isFunction'),\n    isObject = require('../objects/isObject');\n\n/** Used as an internal `_.debounce` options object */\nvar debounceOptions = {\n  'leading': false,\n  'maxWait': 0,\n  'trailing': false\n};\n\n/**\n * Creates a function that, when executed, will only call the `func` function\n * at most once per every `wait` milliseconds. Provide an options object to\n * indicate that `func` should be invoked on the leading and/or trailing edge\n * of the `wait` timeout. Subsequent calls to the throttled function will\n * return the result of the last `func` call.\n *\n * Note: If `leading` and `trailing` options are `true` `func` will be called\n * on the trailing edge of the timeout only if the the throttled function is\n * invoked more than once during the `wait` timeout.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {Function} func The function to throttle.\n * @param {number} wait The number of milliseconds to throttle executions to.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // avoid excessively updating the position while scrolling\n * var throttled = _.throttle(updatePosition, 100);\n * jQuery(window).on('scroll', throttled);\n *\n * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes\n * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n *   'trailing': false\n * }));\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (!isFunction(func)) {\n    throw new TypeError;\n  }\n  if (options === false) {\n    leading = false;\n  } else if (isObject(options)) {\n    leading = 'leading' in options ? options.leading : leading;\n    trailing = 'trailing' in options ? options.trailing : trailing;\n  }\n  debounceOptions.leading = leading;\n  debounceOptions.maxWait = wait;\n  debounceOptions.trailing = trailing;\n\n  return debounce(func, wait, debounceOptions);\n}\n\nmodule.exports = throttle;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/functions/wrap.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createWrapper = require('../internals/createWrapper');\n\n/**\n * Creates a function that provides `value` to the wrapper function as its\n * first argument. Additional arguments provided to the function are appended\n * to those provided to the wrapper function. The wrapper is executed with\n * the `this` binding of the created function.\n *\n * @static\n * @memberOf _\n * @category Functions\n * @param {*} value The value to wrap.\n * @param {Function} wrapper The wrapper function.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var p = _.wrap(_.escape, function(func, text) {\n *   return '<p>' + func(text) + '</p>';\n * });\n *\n * p('Fred, Wilma, & Pebbles');\n * // => '<p>Fred, Wilma, &amp; Pebbles</p>'\n */\nfunction wrap(value, wrapper) {\n  return createWrapper(wrapper, 16, [value]);\n}\n\nmodule.exports = wrap;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\nmodule.exports = {\n  'assign': require('./objects/assign'),\n  'clone': require('./objects/clone'),\n  'cloneDeep': require('./objects/cloneDeep'),\n  'create': require('./objects/create'),\n  'defaults': require('./objects/defaults'),\n  'extend': require('./objects/assign'),\n  'findKey': require('./objects/findKey'),\n  'findLastKey': require('./objects/findLastKey'),\n  'forIn': require('./objects/forIn'),\n  'forInRight': require('./objects/forInRight'),\n  'forOwn': require('./objects/forOwn'),\n  'forOwnRight': require('./objects/forOwnRight'),\n  'functions': require('./objects/functions'),\n  'has': require('./objects/has'),\n  'invert': require('./objects/invert'),\n  'isArguments': require('./objects/isArguments'),\n  'isArray': require('./objects/isArray'),\n  'isBoolean': require('./objects/isBoolean'),\n  'isDate': require('./objects/isDate'),\n  'isElement': require('./objects/isElement'),\n  'isEmpty': require('./objects/isEmpty'),\n  'isEqual': require('./objects/isEqual'),\n  'isFinite': require('./objects/isFinite'),\n  'isFunction': require('./objects/isFunction'),\n  'isNaN': require('./objects/isNaN'),\n  'isNull': require('./objects/isNull'),\n  'isNumber': require('./objects/isNumber'),\n  'isObject': require('./objects/isObject'),\n  'isPlainObject': require('./objects/isPlainObject'),\n  'isRegExp': require('./objects/isRegExp'),\n  'isString': require('./objects/isString'),\n  'isUndefined': require('./objects/isUndefined'),\n  'keys': require('./objects/keys'),\n  'mapValues': require('./objects/mapValues'),\n  'merge': require('./objects/merge'),\n  'methods': require('./objects/functions'),\n  'omit': require('./objects/omit'),\n  'pairs': require('./objects/pairs'),\n  'pick': require('./objects/pick'),\n  'transform': require('./objects/transform'),\n  'values': require('./objects/values')\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/assign.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    keys = require('./keys'),\n    objectTypes = require('../internals/objectTypes');\n\n/**\n * Assigns own enumerable properties of source object(s) to the destination\n * object. Subsequent sources will overwrite property assignments of previous\n * sources. If a callback is provided it will be executed to produce the\n * assigned values. The callback is bound to `thisArg` and invoked with two\n * arguments; (objectValue, sourceValue).\n *\n * @static\n * @memberOf _\n * @type Function\n * @alias extend\n * @category Objects\n * @param {Object} object The destination object.\n * @param {...Object} [source] The source objects.\n * @param {Function} [callback] The function to customize assigning values.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns the destination object.\n * @example\n *\n * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n * // => { 'name': 'fred', 'employer': 'slate' }\n *\n * var defaults = _.partialRight(_.assign, function(a, b) {\n *   return typeof a == 'undefined' ? b : a;\n * });\n *\n * var object = { 'name': 'barney' };\n * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n * // => { 'name': 'barney', 'employer': 'slate' }\n */\nvar assign = function(object, source, guard) {\n  var index, iterable = object, result = iterable;\n  if (!iterable) return result;\n  var args = arguments,\n      argsIndex = 0,\n      argsLength = typeof guard == 'number' ? 2 : args.length;\n  if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n    var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n  } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n    callback = args[--argsLength];\n  }\n  while (++argsIndex < argsLength) {\n    iterable = args[argsIndex];\n    if (iterable && objectTypes[typeof iterable]) {\n    var ownIndex = -1,\n        ownProps = objectTypes[typeof iterable] && keys(iterable),\n        length = ownProps ? ownProps.length : 0;\n\n    while (++ownIndex < length) {\n      index = ownProps[ownIndex];\n      result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];\n    }\n    }\n  }\n  return result\n};\n\nmodule.exports = assign;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/clone.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseClone = require('../internals/baseClone'),\n    baseCreateCallback = require('../internals/baseCreateCallback');\n\n/**\n * Creates a clone of `value`. If `isDeep` is `true` nested objects will also\n * be cloned, otherwise they will be assigned by reference. If a callback\n * is provided it will be executed to produce the cloned values. If the\n * callback returns `undefined` cloning will be handled by the method instead.\n * The callback is bound to `thisArg` and invoked with one argument; (value).\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep=false] Specify a deep clone.\n * @param {Function} [callback] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the cloned value.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * var shallow = _.clone(characters);\n * shallow[0] === characters[0];\n * // => true\n *\n * var deep = _.clone(characters, true);\n * deep[0] === characters[0];\n * // => false\n *\n * _.mixin({\n *   'clone': _.partialRight(_.clone, function(value) {\n *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n *   })\n * });\n *\n * var clone = _.clone(document.body);\n * clone.childNodes.length;\n * // => 0\n */\nfunction clone(value, isDeep, callback, thisArg) {\n  // allows working with \"Collections\" methods without using their `index`\n  // and `collection` arguments for `isDeep` and `callback`\n  if (typeof isDeep != 'boolean' && isDeep != null) {\n    thisArg = callback;\n    callback = isDeep;\n    isDeep = false;\n  }\n  return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n}\n\nmodule.exports = clone;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/baseClone.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar assign = require('../objects/assign'),\n    forEach = require('../collections/forEach'),\n    forOwn = require('../objects/forOwn'),\n    getArray = require('./getArray'),\n    isArray = require('../objects/isArray'),\n    isObject = require('../objects/isObject'),\n    releaseArray = require('./releaseArray'),\n    slice = require('./slice');\n\n/** Used to match regexp flags from their coerced string values */\nvar reFlags = /\\w*$/;\n\n/** `Object#toString` result shortcuts */\nvar argsClass = '[object Arguments]',\n    arrayClass = '[object Array]',\n    boolClass = '[object Boolean]',\n    dateClass = '[object Date]',\n    funcClass = '[object Function]',\n    numberClass = '[object Number]',\n    objectClass = '[object Object]',\n    regexpClass = '[object RegExp]',\n    stringClass = '[object String]';\n\n/** Used to identify object classifications that `_.clone` supports */\nvar cloneableClasses = {};\ncloneableClasses[funcClass] = false;\ncloneableClasses[argsClass] = cloneableClasses[arrayClass] =\ncloneableClasses[boolClass] = cloneableClasses[dateClass] =\ncloneableClasses[numberClass] = cloneableClasses[objectClass] =\ncloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to lookup a built-in constructor by [[Class]] */\nvar ctorByClass = {};\nctorByClass[arrayClass] = Array;\nctorByClass[boolClass] = Boolean;\nctorByClass[dateClass] = Date;\nctorByClass[funcClass] = Function;\nctorByClass[objectClass] = Object;\nctorByClass[numberClass] = Number;\nctorByClass[regexpClass] = RegExp;\nctorByClass[stringClass] = String;\n\n/**\n * The base implementation of `_.clone` without argument juggling or support\n * for `thisArg` binding.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep=false] Specify a deep clone.\n * @param {Function} [callback] The function to customize cloning values.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates clones with source counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, callback, stackA, stackB) {\n  if (callback) {\n    var result = callback(value);\n    if (typeof result != 'undefined') {\n      return result;\n    }\n  }\n  // inspect [[Class]]\n  var isObj = isObject(value);\n  if (isObj) {\n    var className = toString.call(value);\n    if (!cloneableClasses[className]) {\n      return value;\n    }\n    var ctor = ctorByClass[className];\n    switch (className) {\n      case boolClass:\n      case dateClass:\n        return new ctor(+value);\n\n      case numberClass:\n      case stringClass:\n        return new ctor(value);\n\n      case regexpClass:\n        result = ctor(value.source, reFlags.exec(value));\n        result.lastIndex = value.lastIndex;\n        return result;\n    }\n  } else {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isDeep) {\n    // check for circular references and return corresponding clone\n    var initedStack = !stackA;\n    stackA || (stackA = getArray());\n    stackB || (stackB = getArray());\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == value) {\n        return stackB[length];\n      }\n    }\n    result = isArr ? ctor(value.length) : {};\n  }\n  else {\n    result = isArr ? slice(value) : assign({}, value);\n  }\n  // add array properties assigned by `RegExp#exec`\n  if (isArr) {\n    if (hasOwnProperty.call(value, 'index')) {\n      result.index = value.index;\n    }\n    if (hasOwnProperty.call(value, 'input')) {\n      result.input = value.input;\n    }\n  }\n  // exit for shallow clone\n  if (!isDeep) {\n    return result;\n  }\n  // add the source value to the stack of traversed objects\n  // and associate it with its clone\n  stackA.push(value);\n  stackB.push(result);\n\n  // recursively populate clone (susceptible to call stack limits)\n  (isArr ? forEach : forOwn)(value, function(objValue, key) {\n    result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);\n  });\n\n  if (initedStack) {\n    releaseArray(stackA);\n    releaseArray(stackB);\n  }\n  return result;\n}\n\nmodule.exports = baseClone;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/cloneDeep.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseClone = require('../internals/baseClone'),\n    baseCreateCallback = require('../internals/baseCreateCallback');\n\n/**\n * Creates a deep clone of `value`. If a callback is provided it will be\n * executed to produce the cloned values. If the callback returns `undefined`\n * cloning will be handled by the method instead. The callback is bound to\n * `thisArg` and invoked with one argument; (value).\n *\n * Note: This method is loosely based on the structured clone algorithm. Functions\n * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to deep clone.\n * @param {Function} [callback] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the deep cloned value.\n * @example\n *\n * var characters = [\n *   { 'name': 'barney', 'age': 36 },\n *   { 'name': 'fred',   'age': 40 }\n * ];\n *\n * var deep = _.cloneDeep(characters);\n * deep[0] === characters[0];\n * // => false\n *\n * var view = {\n *   'label': 'docs',\n *   'node': element\n * };\n *\n * var clone = _.cloneDeep(view, function(value) {\n *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n * });\n *\n * clone.node == view.node;\n * // => false\n */\nfunction cloneDeep(value, callback, thisArg) {\n  return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));\n}\n\nmodule.exports = cloneDeep;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/create.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar assign = require('./assign'),\n    baseCreate = require('../internals/baseCreate');\n\n/**\n * Creates an object that inherits from the given `prototype` object. If a\n * `properties` object is provided its own enumerable properties are assigned\n * to the created object.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} prototype The object to inherit from.\n * @param {Object} [properties] The properties to assign to the object.\n * @returns {Object} Returns the new object.\n * @example\n *\n * function Shape() {\n *   this.x = 0;\n *   this.y = 0;\n * }\n *\n * function Circle() {\n *   Shape.call(this);\n * }\n *\n * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });\n *\n * var circle = new Circle;\n * circle instanceof Circle;\n * // => true\n *\n * circle instanceof Shape;\n * // => true\n */\nfunction create(prototype, properties) {\n  var result = baseCreate(prototype);\n  return properties ? assign(result, properties) : result;\n}\n\nmodule.exports = create;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/defaults.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keys = require('./keys'),\n    objectTypes = require('../internals/objectTypes');\n\n/**\n * Assigns own enumerable properties of source object(s) to the destination\n * object for all destination properties that resolve to `undefined`. Once a\n * property is set, additional defaults of the same property will be ignored.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Objects\n * @param {Object} object The destination object.\n * @param {...Object} [source] The source objects.\n * @param- {Object} [guard] Allows working with `_.reduce` without using its\n *  `key` and `object` arguments as sources.\n * @returns {Object} Returns the destination object.\n * @example\n *\n * var object = { 'name': 'barney' };\n * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });\n * // => { 'name': 'barney', 'employer': 'slate' }\n */\nvar defaults = function(object, source, guard) {\n  var index, iterable = object, result = iterable;\n  if (!iterable) return result;\n  var args = arguments,\n      argsIndex = 0,\n      argsLength = typeof guard == 'number' ? 2 : args.length;\n  while (++argsIndex < argsLength) {\n    iterable = args[argsIndex];\n    if (iterable && objectTypes[typeof iterable]) {\n    var ownIndex = -1,\n        ownProps = objectTypes[typeof iterable] && keys(iterable),\n        length = ownProps ? ownProps.length : 0;\n\n    while (++ownIndex < length) {\n      index = ownProps[ownIndex];\n      if (typeof result[index] == 'undefined') result[index] = iterable[index];\n    }\n    }\n  }\n  return result\n};\n\nmodule.exports = defaults;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/findKey.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('./forOwn');\n\n/**\n * This method is like `_.findIndex` except that it returns the key of the\n * first element that passes the callback check, instead of the element itself.\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to search.\n * @param {Function|Object|string} [callback=identity] The function called per\n *  iteration. If a property name or object is provided it will be used to\n *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n * @example\n *\n * var characters = {\n *   'barney': {  'age': 36, 'blocked': false },\n *   'fred': {    'age': 40, 'blocked': true },\n *   'pebbles': { 'age': 1,  'blocked': false }\n * };\n *\n * _.findKey(characters, function(chr) {\n *   return chr.age < 40;\n * });\n * // => 'barney' (property order is not guaranteed across environments)\n *\n * // using \"_.where\" callback shorthand\n * _.findKey(characters, { 'age': 1 });\n * // => 'pebbles'\n *\n * // using \"_.pluck\" callback shorthand\n * _.findKey(characters, 'blocked');\n * // => 'fred'\n */\nfunction findKey(object, callback, thisArg) {\n  var result;\n  callback = createCallback(callback, thisArg, 3);\n  forOwn(object, function(value, key, object) {\n    if (callback(value, key, object)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = findKey;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/findLastKey.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwnRight = require('./forOwnRight');\n\n/**\n * This method is like `_.findKey` except that it iterates over elements\n * of a `collection` in the opposite order.\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to search.\n * @param {Function|Object|string} [callback=identity] The function called per\n *  iteration. If a property name or object is provided it will be used to\n *  create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {string|undefined} Returns the key of the found element, else `undefined`.\n * @example\n *\n * var characters = {\n *   'barney': {  'age': 36, 'blocked': true },\n *   'fred': {    'age': 40, 'blocked': false },\n *   'pebbles': { 'age': 1,  'blocked': true }\n * };\n *\n * _.findLastKey(characters, function(chr) {\n *   return chr.age < 40;\n * });\n * // => returns `pebbles`, assuming `_.findKey` returns `barney`\n *\n * // using \"_.where\" callback shorthand\n * _.findLastKey(characters, { 'age': 40 });\n * // => 'fred'\n *\n * // using \"_.pluck\" callback shorthand\n * _.findLastKey(characters, 'blocked');\n * // => 'pebbles'\n */\nfunction findLastKey(object, callback, thisArg) {\n  var result;\n  callback = createCallback(callback, thisArg, 3);\n  forOwnRight(object, function(value, key, object) {\n    if (callback(value, key, object)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = findLastKey;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/forOwnRight.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    keys = require('./keys');\n\n/**\n * This method is like `_.forOwn` except that it iterates over elements\n * of a `collection` in the opposite order.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n *   console.log(key);\n * });\n * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'\n */\nfunction forOwnRight(object, callback, thisArg) {\n  var props = keys(object),\n      length = props.length;\n\n  callback = baseCreateCallback(callback, thisArg, 3);\n  while (length--) {\n    var key = props[length];\n    if (callback(object[key], key, object) === false) {\n      break;\n    }\n  }\n  return object;\n}\n\nmodule.exports = forOwnRight;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/forInRight.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    forIn = require('./forIn');\n\n/**\n * This method is like `_.forIn` except that it iterates over elements\n * of a `collection` in the opposite order.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function Shape() {\n *   this.x = 0;\n *   this.y = 0;\n * }\n *\n * Shape.prototype.move = function(x, y) {\n *   this.x += x;\n *   this.y += y;\n * };\n *\n * _.forInRight(new Shape, function(value, key) {\n *   console.log(key);\n * });\n * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'\n */\nfunction forInRight(object, callback, thisArg) {\n  var pairs = [];\n\n  forIn(object, function(value, key) {\n    pairs.push(key, value);\n  });\n\n  var length = pairs.length;\n  callback = baseCreateCallback(callback, thisArg, 3);\n  while (length--) {\n    if (callback(pairs[length--], pairs[length], object) === false) {\n      break;\n    }\n  }\n  return object;\n}\n\nmodule.exports = forInRight;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/has.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if the specified property name exists as a direct property of `object`,\n * instead of an inherited property.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to inspect.\n * @param {string} key The name of the property to check.\n * @returns {boolean} Returns `true` if key is a direct property, else `false`.\n * @example\n *\n * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n * // => true\n */\nfunction has(object, key) {\n  return object ? hasOwnProperty.call(object, key) : false;\n}\n\nmodule.exports = has;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/invert.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keys = require('./keys');\n\n/**\n * Creates an object composed of the inverted keys and values of the given object.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the created inverted object.\n * @example\n *\n * _.invert({ 'first': 'fred', 'second': 'barney' });\n * // => { 'fred': 'first', 'barney': 'second' }\n */\nfunction invert(object) {\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = {};\n\n  while (++index < length) {\n    var key = props[index];\n    result[object[key]] = key;\n  }\n  return result;\n}\n\nmodule.exports = invert;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isBoolean.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** `Object#toString` result shortcuts */\nvar boolClass = '[object Boolean]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is a boolean value.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.\n * @example\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    value && typeof value == 'object' && toString.call(value) == boolClass || false;\n}\n\nmodule.exports = isBoolean;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isDate.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** `Object#toString` result shortcuts */\nvar dateClass = '[object Date]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is a date.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a date, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n */\nfunction isDate(value) {\n  return value && typeof value == 'object' && toString.call(value) == dateClass || false;\n}\n\nmodule.exports = isDate;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isElement.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Checks if `value` is a DOM element.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n */\nfunction isElement(value) {\n  return value && value.nodeType === 1 || false;\n}\n\nmodule.exports = isElement;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isEmpty.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forOwn = require('./forOwn'),\n    isFunction = require('./isFunction');\n\n/** `Object#toString` result shortcuts */\nvar argsClass = '[object Arguments]',\n    arrayClass = '[object Array]',\n    objectClass = '[object Object]',\n    stringClass = '[object String]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n * length of `0` and objects with no own enumerable properties are considered\n * \"empty\".\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Array|Object|string} value The value to inspect.\n * @returns {boolean} Returns `true` if the `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({});\n * // => true\n *\n * _.isEmpty('');\n * // => true\n */\nfunction isEmpty(value) {\n  var result = true;\n  if (!value) {\n    return result;\n  }\n  var className = toString.call(value),\n      length = value.length;\n\n  if ((className == arrayClass || className == stringClass || className == argsClass ) ||\n      (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n    return !length;\n  }\n  forOwn(value, function() {\n    return (result = false);\n  });\n  return result;\n}\n\nmodule.exports = isEmpty;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isEqual.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    baseIsEqual = require('../internals/baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent to each other. If a callback is provided it will be executed\n * to compare values. If the callback returns `undefined` comparisons will\n * be handled by the method instead. The callback is bound to `thisArg` and\n * invoked with two arguments; (a, b).\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} a The value to compare.\n * @param {*} b The other value to compare.\n * @param {Function} [callback] The function to customize comparing values.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'name': 'fred' };\n * var copy = { 'name': 'fred' };\n *\n * object == copy;\n * // => false\n *\n * _.isEqual(object, copy);\n * // => true\n *\n * var words = ['hello', 'goodbye'];\n * var otherWords = ['hi', 'goodbye'];\n *\n * _.isEqual(words, otherWords, function(a, b) {\n *   var reGreet = /^(?:hello|hi)$/i,\n *       aGreet = _.isString(a) && reGreet.test(a),\n *       bGreet = _.isString(b) && reGreet.test(b);\n *\n *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n * });\n * // => true\n */\nfunction isEqual(a, b, callback, thisArg) {\n  return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));\n}\n\nmodule.exports = isEqual;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isFinite.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeIsFinite = global.isFinite,\n    nativeIsNaN = global.isNaN;\n\n/**\n * Checks if `value` is, or can be coerced to, a finite number.\n *\n * Note: This is not the same as native `isFinite` which will return true for\n * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is finite, else `false`.\n * @example\n *\n * _.isFinite(-101);\n * // => true\n *\n * _.isFinite('10');\n * // => true\n *\n * _.isFinite(true);\n * // => false\n *\n * _.isFinite('');\n * // => false\n *\n * _.isFinite(Infinity);\n * // => false\n */\nfunction isFinite(value) {\n  return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n}\n\nmodule.exports = isFinite;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isNaN.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNumber = require('./isNumber');\n\n/**\n * Checks if `value` is `NaN`.\n *\n * Note: This is not the same as native `isNaN` which will return `true` for\n * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.\n * @example\n *\n * _.isNaN(NaN);\n * // => true\n *\n * _.isNaN(new Number(NaN));\n * // => true\n *\n * isNaN(undefined);\n * // => true\n *\n * _.isNaN(undefined);\n * // => false\n */\nfunction isNaN(value) {\n  // `NaN` as a primitive is the only value that is not equal to itself\n  // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n  return isNumber(value) && value != +value;\n}\n\nmodule.exports = isNaN;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isNumber.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** `Object#toString` result shortcuts */\nvar numberClass = '[object Number]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is a number.\n *\n * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(8.4 * 5);\n * // => true\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    value && typeof value == 'object' && toString.call(value) == numberClass || false;\n}\n\nmodule.exports = isNumber;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isNull.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(undefined);\n * // => false\n */\nfunction isNull(value) {\n  return value === null;\n}\n\nmodule.exports = isNull;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isPlainObject.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isNative = require('../internals/isNative'),\n    shimIsPlainObject = require('../internals/shimIsPlainObject');\n\n/** `Object#toString` result shortcuts */\nvar objectClass = '[object Object]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/** Native method shortcuts */\nvar getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf;\n\n/**\n * Checks if `value` is an object created by the `Object` constructor.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Shape() {\n *   this.x = 0;\n *   this.y = 0;\n * }\n *\n * _.isPlainObject(new Shape);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n */\nvar isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n  if (!(value && toString.call(value) == objectClass)) {\n    return false;\n  }\n  var valueOf = value.valueOf,\n      objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n  return objProto\n    ? (value == objProto || getPrototypeOf(value) == objProto)\n    : shimIsPlainObject(value);\n};\n\nmodule.exports = isPlainObject;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/shimIsPlainObject.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forIn = require('../objects/forIn'),\n    isFunction = require('../objects/isFunction');\n\n/** `Object#toString` result shortcuts */\nvar objectClass = '[object Object]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/** Native method shortcuts */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `isPlainObject` which checks if a given value\n * is an object created by the `Object` constructor, assuming objects created\n * by the `Object` constructor have no inherited enumerable properties and that\n * there are no `Object.prototype` extensions.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n */\nfunction shimIsPlainObject(value) {\n  var ctor,\n      result;\n\n  // avoid non Object objects, `arguments` objects, and DOM elements\n  if (!(value && toString.call(value) == objectClass) ||\n      (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {\n    return false;\n  }\n  // In most environments an object's own properties are iterated before\n  // its inherited properties. If the last iterated property is an object's\n  // own property then there are no inherited enumerable properties.\n  forIn(value, function(value, key) {\n    result = key;\n  });\n  return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n}\n\nmodule.exports = shimIsPlainObject;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isRegExp.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** `Object#toString` result shortcuts */\nvar regexpClass = '[object RegExp]';\n\n/** Used for native method references */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the internal [[Class]] of values */\nvar toString = objectProto.toString;\n\n/**\n * Checks if `value` is a regular expression.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.\n * @example\n *\n * _.isRegExp(/fred/);\n * // => true\n */\nfunction isRegExp(value) {\n  return value && typeof value == 'object' && toString.call(value) == regexpClass || false;\n}\n\nmodule.exports = isRegExp;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/isUndefined.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n */\nfunction isUndefined(value) {\n  return typeof value == 'undefined';\n}\n\nmodule.exports = isUndefined;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/mapValues.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar createCallback = require('../functions/createCallback'),\n    forOwn = require('./forOwn');\n\n/**\n * Creates an object with the same keys as `object` and values generated by\n * running each own enumerable property of `object` through the callback.\n * The callback is bound to `thisArg` and invoked with three arguments;\n * (value, key, object).\n *\n * If a property name is provided for `callback` the created \"_.pluck\" style\n * callback will return the property value of the given element.\n *\n * If an object is provided for `callback` the created \"_.where\" style callback\n * will return `true` for elements that have the properties of the given object,\n * else `false`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to iterate over.\n * @param {Function|Object|string} [callback=identity] The function called\n *  per iteration. If a property name or object is provided it will be used\n *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns a new object with values of the results of each `callback` execution.\n * @example\n *\n * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });\n * // => { 'a': 3, 'b': 6, 'c': 9 }\n *\n * var characters = {\n *   'fred': { 'name': 'fred', 'age': 40 },\n *   'pebbles': { 'name': 'pebbles', 'age': 1 }\n * };\n *\n * // using \"_.pluck\" callback shorthand\n * _.mapValues(characters, 'age');\n * // => { 'fred': 40, 'pebbles': 1 }\n */\nfunction mapValues(object, callback, thisArg) {\n  var result = {};\n  callback = createCallback(callback, thisArg, 3);\n\n  forOwn(object, function(value, key, object) {\n    result[key] = callback(value, key, object);\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/merge.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback'),\n    baseMerge = require('../internals/baseMerge'),\n    getArray = require('../internals/getArray'),\n    isObject = require('./isObject'),\n    releaseArray = require('../internals/releaseArray'),\n    slice = require('../internals/slice');\n\n/**\n * Recursively merges own enumerable properties of the source object(s), that\n * don't resolve to `undefined` into the destination object. Subsequent sources\n * will overwrite property assignments of previous sources. If a callback is\n * provided it will be executed to produce the merged values of the destination\n * and source properties. If the callback returns `undefined` merging will\n * be handled by the method instead. The callback is bound to `thisArg` and\n * invoked with two arguments; (objectValue, sourceValue).\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The destination object.\n * @param {...Object} [source] The source objects.\n * @param {Function} [callback] The function to customize merging properties.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns the destination object.\n * @example\n *\n * var names = {\n *   'characters': [\n *     { 'name': 'barney' },\n *     { 'name': 'fred' }\n *   ]\n * };\n *\n * var ages = {\n *   'characters': [\n *     { 'age': 36 },\n *     { 'age': 40 }\n *   ]\n * };\n *\n * _.merge(names, ages);\n * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }\n *\n * var food = {\n *   'fruits': ['apple'],\n *   'vegetables': ['beet']\n * };\n *\n * var otherFood = {\n *   'fruits': ['banana'],\n *   'vegetables': ['carrot']\n * };\n *\n * _.merge(food, otherFood, function(a, b) {\n *   return _.isArray(a) ? a.concat(b) : undefined;\n * });\n * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n */\nfunction merge(object) {\n  var args = arguments,\n      length = 2;\n\n  if (!isObject(object)) {\n    return object;\n  }\n  // allows working with `_.reduce` and `_.reduceRight` without using\n  // their `index` and `collection` arguments\n  if (typeof args[2] != 'number') {\n    length = args.length;\n  }\n  if (length > 3 && typeof args[length - 2] == 'function') {\n    var callback = baseCreateCallback(args[--length - 1], args[length--], 2);\n  } else if (length > 2 && typeof args[length - 1] == 'function') {\n    callback = args[--length];\n  }\n  var sources = slice(arguments, 1, length),\n      index = -1,\n      stackA = getArray(),\n      stackB = getArray();\n\n  while (++index < length) {\n    baseMerge(object, sources[index], callback, stackA, stackB);\n  }\n  releaseArray(stackA);\n  releaseArray(stackB);\n  return object;\n}\n\nmodule.exports = merge;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/baseMerge.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forEach = require('../collections/forEach'),\n    forOwn = require('../objects/forOwn'),\n    isArray = require('../objects/isArray'),\n    isPlainObject = require('../objects/isPlainObject');\n\n/**\n * The base implementation of `_.merge` without argument juggling or support\n * for `thisArg` binding.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} [callback] The function to customize merging properties.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n */\nfunction baseMerge(object, source, callback, stackA, stackB) {\n  (isArray(source) ? forEach : forOwn)(source, function(source, key) {\n    var found,\n        isArr,\n        result = source,\n        value = object[key];\n\n    if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n      // avoid merging previously merged cyclic sources\n      var stackLength = stackA.length;\n      while (stackLength--) {\n        if ((found = stackA[stackLength] == source)) {\n          value = stackB[stackLength];\n          break;\n        }\n      }\n      if (!found) {\n        var isShallow;\n        if (callback) {\n          result = callback(value, source);\n          if ((isShallow = typeof result != 'undefined')) {\n            value = result;\n          }\n        }\n        if (!isShallow) {\n          value = isArr\n            ? (isArray(value) ? value : [])\n            : (isPlainObject(value) ? value : {});\n        }\n        // add `source` and associated `value` to the stack of traversed objects\n        stackA.push(source);\n        stackB.push(value);\n\n        // recursively merge objects and arrays (susceptible to call stack limits)\n        if (!isShallow) {\n          baseMerge(value, source, callback, stackA, stackB);\n        }\n      }\n    }\n    else {\n      if (callback) {\n        result = callback(value, source);\n        if (typeof result == 'undefined') {\n          result = source;\n        }\n      }\n      if (typeof result != 'undefined') {\n        value = result;\n      }\n    }\n    object[key] = value;\n  });\n}\n\nmodule.exports = baseMerge;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/omit.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseDifference = require('../internals/baseDifference'),\n    baseFlatten = require('../internals/baseFlatten'),\n    createCallback = require('../functions/createCallback'),\n    forIn = require('./forIn');\n\n/**\n * Creates a shallow clone of `object` excluding the specified properties.\n * Property names may be specified as individual arguments or as arrays of\n * property names. If a callback is provided it will be executed for each\n * property of `object` omitting the properties the callback returns truey\n * for. The callback is bound to `thisArg` and invoked with three arguments;\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The source object.\n * @param {Function|...string|string[]} [callback] The properties to omit or the\n *  function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns an object without the omitted properties.\n * @example\n *\n * _.omit({ 'name': 'fred', 'age': 40 }, 'age');\n * // => { 'name': 'fred' }\n *\n * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {\n *   return typeof value == 'number';\n * });\n * // => { 'name': 'fred' }\n */\nfunction omit(object, callback, thisArg) {\n  var result = {};\n  if (typeof callback != 'function') {\n    var props = [];\n    forIn(object, function(value, key) {\n      props.push(key);\n    });\n    props = baseDifference(props, baseFlatten(arguments, true, false, 1));\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n      result[key] = object[key];\n    }\n  } else {\n    callback = createCallback(callback, thisArg, 3);\n    forIn(object, function(value, key, object) {\n      if (!callback(value, key, object)) {\n        result[key] = value;\n      }\n    });\n  }\n  return result;\n}\n\nmodule.exports = omit;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/pairs.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keys = require('./keys');\n\n/**\n * Creates a two dimensional array of an object's key-value pairs,\n * i.e. `[[key1, value1], [key2, value2]]`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns new array of key-value pairs.\n * @example\n *\n * _.pairs({ 'barney': 36, 'fred': 40 });\n * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)\n */\nfunction pairs(object) {\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    var key = props[index];\n    result[index] = [key, object[key]];\n  }\n  return result;\n}\n\nmodule.exports = pairs;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/pick.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseFlatten = require('../internals/baseFlatten'),\n    createCallback = require('../functions/createCallback'),\n    forIn = require('./forIn'),\n    isObject = require('./isObject');\n\n/**\n * Creates a shallow clone of `object` composed of the specified properties.\n * Property names may be specified as individual arguments or as arrays of\n * property names. If a callback is provided it will be executed for each\n * property of `object` picking the properties the callback returns truey\n * for. The callback is bound to `thisArg` and invoked with three arguments;\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Object} object The source object.\n * @param {Function|...string|string[]} [callback] The function called per\n *  iteration or property names to pick, specified as individual property\n *  names or arrays of property names.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Object} Returns an object composed of the picked properties.\n * @example\n *\n * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');\n * // => { 'name': 'fred' }\n *\n * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {\n *   return key.charAt(0) != '_';\n * });\n * // => { 'name': 'fred' }\n */\nfunction pick(object, callback, thisArg) {\n  var result = {};\n  if (typeof callback != 'function') {\n    var index = -1,\n        props = baseFlatten(arguments, true, false, 1),\n        length = isObject(object) ? props.length : 0;\n\n    while (++index < length) {\n      var key = props[index];\n      if (key in object) {\n        result[key] = object[key];\n      }\n    }\n  } else {\n    callback = createCallback(callback, thisArg, 3);\n    forIn(object, function(value, key, object) {\n      if (callback(value, key, object)) {\n        result[key] = value;\n      }\n    });\n  }\n  return result;\n}\n\nmodule.exports = pick;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/objects/transform.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreate = require('../internals/baseCreate'),\n    createCallback = require('../functions/createCallback'),\n    forEach = require('../collections/forEach'),\n    forOwn = require('./forOwn'),\n    isArray = require('./isArray');\n\n/**\n * An alternative to `_.reduce` this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable properties through a callback, with each callback execution\n * potentially mutating the `accumulator` object. The callback is bound to\n * `thisArg` and invoked with four arguments; (accumulator, value, key, object).\n * Callbacks may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @category Objects\n * @param {Array|Object} object The object to iterate over.\n * @param {Function} [callback=identity] The function called per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {\n *   num *= num;\n *   if (num % 2) {\n *     return result.push(num) < 3;\n *   }\n * });\n * // => [1, 9, 25]\n *\n * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n *   result[key] = num * 3;\n * });\n * // => { 'a': 3, 'b': 6, 'c': 9 }\n */\nfunction transform(object, callback, accumulator, thisArg) {\n  var isArr = isArray(object);\n  if (accumulator == null) {\n    if (isArr) {\n      accumulator = [];\n    } else {\n      var ctor = object && object.constructor,\n          proto = ctor && ctor.prototype;\n\n      accumulator = baseCreate(proto);\n    }\n  }\n  if (callback) {\n    callback = createCallback(callback, thisArg, 4);\n    (isArr ? forEach : forOwn)(object, function(value, index, object) {\n      return callback(accumulator, value, index, object);\n    });\n  }\n  return accumulator;\n}\n\nmodule.exports = transform;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\nmodule.exports = {\n  'constant': require('./utilities/constant'),\n  'createCallback': require('./functions/createCallback'),\n  'escape': require('./utilities/escape'),\n  'identity': require('./utilities/identity'),\n  'mixin': require('./utilities/mixin'),\n  'noConflict': require('./utilities/noConflict'),\n  'noop': require('./utilities/noop'),\n  'now': require('./utilities/now'),\n  'parseInt': require('./utilities/parseInt'),\n  'property': require('./utilities/property'),\n  'random': require('./utilities/random'),\n  'result': require('./utilities/result'),\n  'template': require('./utilities/template'),\n  'templateSettings': require('./utilities/templateSettings'),\n  'times': require('./utilities/times'),\n  'unescape': require('./utilities/unescape'),\n  'uniqueId': require('./utilities/uniqueId')\n};\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/constant.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var object = { 'name': 'fred' };\n * var getter = _.constant(object);\n * getter() === object;\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/escape.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar escapeHtmlChar = require('../internals/escapeHtmlChar'),\n    keys = require('../objects/keys'),\n    reUnescapedHtml = require('../internals/reUnescapedHtml');\n\n/**\n * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n * corresponding HTML entities.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {string} string The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escape('Fred, Wilma, & Pebbles');\n * // => 'Fred, Wilma, &amp; Pebbles'\n */\nfunction escape(string) {\n  return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);\n}\n\nmodule.exports = escape;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/escapeHtmlChar.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar htmlEscapes = require('./htmlEscapes');\n\n/**\n * Used by `escape` to convert characters to HTML entities.\n *\n * @private\n * @param {string} match The matched character to escape.\n * @returns {string} Returns the escaped character.\n */\nfunction escapeHtmlChar(match) {\n  return htmlEscapes[match];\n}\n\nmodule.exports = escapeHtmlChar;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/htmlEscapes.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/**\n * Used to convert characters to HTML entities:\n *\n * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n * don't require escaping in HTML and have no special meaning unless they're part\n * of a tag or an unquoted attribute value.\n * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n */\nvar htmlEscapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nmodule.exports = htmlEscapes;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/reUnescapedHtml.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar htmlEscapes = require('./htmlEscapes'),\n    keys = require('../objects/keys');\n\n/** Used to match HTML entities and HTML characters */\nvar reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');\n\nmodule.exports = reUnescapedHtml;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/mixin.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar forEach = require('../collections/forEach'),\n    functions = require('../objects/functions'),\n    isFunction = require('../objects/isFunction'),\n    isObject = require('../objects/isObject');\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Native method shortcuts */\nvar push = arrayRef.push;\n\n/**\n * Adds function properties of a source object to the destination object.\n * If `object` is a function methods will be added to its prototype as well.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {Function|Object} [object=lodash] object The destination object.\n * @param {Object} source The object of functions to add.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.\n * @example\n *\n * function capitalize(string) {\n *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n * }\n *\n * _.mixin({ 'capitalize': capitalize });\n * _.capitalize('fred');\n * // => 'Fred'\n *\n * _('fred').capitalize().value();\n * // => 'Fred'\n *\n * _.mixin({ 'capitalize': capitalize }, { 'chain': false });\n * _('fred').capitalize();\n * // => 'Fred'\n */\nfunction mixin(object, source, options) {\n  var chain = true,\n      methodNames = source && functions(source);\n\n  if (options === false) {\n    chain = false;\n  } else if (isObject(options) && 'chain' in options) {\n    chain = options.chain;\n  }\n  var ctor = object,\n      isFunc = isFunction(ctor);\n\n  forEach(methodNames, function(methodName) {\n    var func = object[methodName] = source[methodName];\n    if (isFunc) {\n      ctor.prototype[methodName] = function() {\n        var chainAll = this.__chain__,\n            value = this.__wrapped__,\n            args = [value];\n\n        push.apply(args, arguments);\n        var result = func.apply(object, args);\n        if (chain || chainAll) {\n          if (value === result && isObject(result)) {\n            return this;\n          }\n          result = new ctor(result);\n          result.__chain__ = chainAll;\n        }\n        return result;\n      };\n    }\n  });\n}\n\nmodule.exports = mixin;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/noConflict.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to restore the original `_` reference in `noConflict` */\nvar oldDash = global._;\n\n/**\n * Reverts the '_' variable to its previous value and returns a reference to\n * the `lodash` function.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @returns {Function} Returns the `lodash` function.\n * @example\n *\n * var lodash = _.noConflict();\n */\nfunction noConflict() {\n  global._ = oldDash;\n  return this;\n}\n\nmodule.exports = noConflict;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/parseInt.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isString = require('../objects/isString');\n\n/** Used to detect and test whitespace */\nvar whitespace = (\n  // whitespace\n  ' \\t\\x0B\\f\\xA0\\ufeff' +\n\n  // line terminators\n  '\\n\\r\\u2028\\u2029' +\n\n  // unicode category \"Zs\" space separators\n  '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n);\n\n/** Used to match leading whitespace and zeros to be removed */\nvar reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeParseInt = global.parseInt;\n\n/**\n * Converts the given value into an integer of the specified radix.\n * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the\n * `value` is a hexadecimal, in which case a `radix` of `16` is used.\n *\n * Note: This method avoids differences in native ES3 and ES5 `parseInt`\n * implementations. See http://es5.github.io/#E.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {string} value The value to parse.\n * @param {number} [radix] The radix used to interpret the value to parse.\n * @returns {number} Returns the new integer value.\n * @example\n *\n * _.parseInt('08');\n * // => 8\n */\nvar parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {\n  // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`\n  return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);\n};\n\nmodule.exports = parseInt;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/random.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseRandom = require('../internals/baseRandom');\n\n/* Native method shortcuts for methods with the same name as other `lodash` methods */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between `min` and `max` (inclusive). If only one\n * argument is provided a number between `0` and the given number will be\n * returned. If `floating` is truey or either `min` or `max` are floats a\n * floating-point number will be returned instead of an integer.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {number} [min=0] The minimum possible value.\n * @param {number} [max=1] The maximum possible value.\n * @param {boolean} [floating=false] Specify returning a floating-point number.\n * @returns {number} Returns a random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(min, max, floating) {\n  var noMin = min == null,\n      noMax = max == null;\n\n  if (floating == null) {\n    if (typeof min == 'boolean' && noMax) {\n      floating = min;\n      min = 1;\n    }\n    else if (!noMax && typeof max == 'boolean') {\n      floating = max;\n      noMax = true;\n    }\n  }\n  if (noMin && noMax) {\n    max = 1;\n  }\n  min = +min || 0;\n  if (noMax) {\n    max = min;\n    min = 0;\n  } else {\n    max = +max || 0;\n  }\n  if (floating || min % 1 || max % 1) {\n    var rand = nativeRandom();\n    return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);\n  }\n  return baseRandom(min, max);\n}\n\nmodule.exports = random;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/result.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar isFunction = require('../objects/isFunction');\n\n/**\n * Resolves the value of property `key` on `object`. If `key` is a function\n * it will be invoked with the `this` binding of `object` and its result returned,\n * else the property value is returned. If `object` is falsey then `undefined`\n * is returned.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {Object} object The object to inspect.\n * @param {string} key The name of the property to resolve.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = {\n *   'cheese': 'crumpets',\n *   'stuff': function() {\n *     return 'nonsense';\n *   }\n * };\n *\n * _.result(object, 'cheese');\n * // => 'crumpets'\n *\n * _.result(object, 'stuff');\n * // => 'nonsense'\n */\nfunction result(object, key) {\n  if (object) {\n    var value = object[key];\n    return isFunction(value) ? object[key]() : value;\n  }\n}\n\nmodule.exports = result;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/template.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar defaults = require('../objects/defaults'),\n    escape = require('./escape'),\n    escapeStringChar = require('../internals/escapeStringChar'),\n    keys = require('../objects/keys'),\n    reInterpolate = require('../internals/reInterpolate'),\n    templateSettings = require('./templateSettings'),\n    values = require('../objects/values');\n\n/** Used to match empty string literals in compiled template source */\nvar reEmptyStringLeading = /\\b__p \\+= '';/g,\n    reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n    reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n/**\n * Used to match ES6 template delimiters\n * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals\n */\nvar reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n/** Used to ensure capturing order of template delimiters */\nvar reNoMatch = /($^)/;\n\n/** Used to match unescaped characters in compiled string literals */\nvar reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n/**\n * A micro-templating method that handles arbitrary delimiters, preserves\n * whitespace, and correctly escapes quotes within interpolated code.\n *\n * Note: In the development build, `_.template` utilizes sourceURLs for easier\n * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n *\n * For more information on precompiling templates see:\n * http://lodash.com/custom-builds\n *\n * For more information on Chrome extension sandboxes see:\n * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {string} text The template text.\n * @param {Object} data The data object used to populate the text.\n * @param {Object} [options] The options object.\n * @param {RegExp} [options.escape] The \"escape\" delimiter.\n * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n * @param {Object} [options.imports] An object to import into the template as local variables.\n * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n * @param {string} [sourceURL] The sourceURL of the template's compiled source.\n * @param {string} [variable] The data object variable name.\n * @returns {Function|string} Returns a compiled function when no `data` object\n *  is given, else it returns the interpolated text.\n * @example\n *\n * // using the \"interpolate\" delimiter to create a compiled template\n * var compiled = _.template('hello <%= name %>');\n * compiled({ 'name': 'fred' });\n * // => 'hello fred'\n *\n * // using the \"escape\" delimiter to escape HTML in data property values\n * _.template('<b><%- value %></b>', { 'value': '<script>' });\n * // => '<b>&lt;script&gt;</b>'\n *\n * // using the \"evaluate\" delimiter to generate HTML\n * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';\n * _.template(list, { 'people': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n * _.template('hello ${ name }', { 'name': 'pebbles' });\n * // => 'hello pebbles'\n *\n * // using the internal `print` function in \"evaluate\" delimiters\n * _.template('<% print(\"hello \" + name); %>!', { 'name': 'barney' });\n * // => 'hello barney!'\n *\n * // using a custom template delimiters\n * _.templateSettings = {\n *   'interpolate': /{{([\\s\\S]+?)}}/g\n * };\n *\n * _.template('hello {{ name }}!', { 'name': 'mustache' });\n * // => 'hello mustache!'\n *\n * // using the `imports` option to import jQuery\n * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';\n * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // using the `sourceURL` option to specify a custom sourceURL for the template\n * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n * compiled(data);\n * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n *\n * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n * compiled.source;\n * // => function(data) {\n *   var __t, __p = '', __e = _.escape;\n *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n *   return __p;\n * }\n *\n * // using the `source` property to inline compiled templates for meaningful\n * // line numbers in error messages and a stack trace\n * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n *   var JST = {\\\n *     \"main\": ' + _.template(mainText).source + '\\\n *   };\\\n * ');\n */\nfunction template(text, data, options) {\n  // based on John Resig's `tmpl` implementation\n  // http://ejohn.org/blog/javascript-micro-templating/\n  // and Laura Doktorova's doT.js\n  // https://github.com/olado/doT\n  var settings = templateSettings.imports._.templateSettings || templateSettings;\n  text = String(text || '');\n\n  // avoid missing dependencies when `iteratorTemplate` is not defined\n  options = defaults({}, options, settings);\n\n  var imports = defaults({}, options.imports, settings.imports),\n      importsKeys = keys(imports),\n      importsValues = values(imports);\n\n  var isEvaluating,\n      index = 0,\n      interpolate = options.interpolate || reNoMatch,\n      source = \"__p += '\";\n\n  // compile the regexp to match each delimiter\n  var reDelimiters = RegExp(\n    (options.escape || reNoMatch).source + '|' +\n    interpolate.source + '|' +\n    (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n    (options.evaluate || reNoMatch).source + '|$'\n  , 'g');\n\n  text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n    interpolateValue || (interpolateValue = esTemplateValue);\n\n    // escape characters that cannot be included in string literals\n    source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n    // replace delimiters with snippets\n    if (escapeValue) {\n      source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n    }\n    if (evaluateValue) {\n      isEvaluating = true;\n      source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n    }\n    if (interpolateValue) {\n      source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n    }\n    index = offset + match.length;\n\n    // the JS engine embedded in Adobe products requires returning the `match`\n    // string in order to produce the correct `offset` value\n    return match;\n  });\n\n  source += \"';\\n\";\n\n  // if `variable` is not specified, wrap a with-statement around the generated\n  // code to add the data object to the top of the scope chain\n  var variable = options.variable,\n      hasVariable = variable;\n\n  if (!hasVariable) {\n    variable = 'obj';\n    source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n  }\n  // cleanup code by stripping empty strings\n  source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n    .replace(reEmptyStringMiddle, '$1')\n    .replace(reEmptyStringTrailing, '$1;');\n\n  // frame code as the function body\n  source = 'function(' + variable + ') {\\n' +\n    (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +\n    \"var __t, __p = '', __e = _.escape\" +\n    (isEvaluating\n      ? ', __j = Array.prototype.join;\\n' +\n        \"function print() { __p += __j.call(arguments, '') }\\n\"\n      : ';\\n'\n    ) +\n    source +\n    'return __p\\n}';\n\n  try {\n    var result = Function(importsKeys, 'return ' + source ).apply(undefined, importsValues);\n  } catch(e) {\n    e.source = source;\n    throw e;\n  }\n  if (data) {\n    return result(data);\n  }\n  // provide the compiled function's source by its `toString` method, in\n  // supported environments, or the `source` property as a convenience for\n  // inlining compiled templates during the build process\n  result.source = source;\n  return result;\n}\n\nmodule.exports = template;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/escapeStringChar.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to escape characters for inclusion in compiled string literals */\nvar stringEscapes = {\n  '\\\\': '\\\\',\n  \"'\": \"'\",\n  '\\n': 'n',\n  '\\r': 'r',\n  '\\t': 't',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\n/**\n * Used by `template` to escape characters for inclusion in compiled\n * string literals.\n *\n * @private\n * @param {string} match The matched character to escape.\n * @returns {string} Returns the escaped character.\n */\nfunction escapeStringChar(match) {\n  return '\\\\' + stringEscapes[match];\n}\n\nmodule.exports = escapeStringChar;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/reInterpolate.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to match \"interpolate\" template delimiters */\nvar reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\nmodule.exports = reInterpolate;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/templateSettings.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar escape = require('./escape'),\n    reInterpolate = require('../internals/reInterpolate');\n\n/**\n * By default, the template delimiters used by Lo-Dash are similar to those in\n * embedded Ruby (ERB). Change the following template settings to use alternative\n * delimiters.\n *\n * @static\n * @memberOf _\n * @type Object\n */\nvar templateSettings = {\n\n  /**\n   * Used to detect `data` property values to be HTML-escaped.\n   *\n   * @memberOf _.templateSettings\n   * @type RegExp\n   */\n  'escape': /<%-([\\s\\S]+?)%>/g,\n\n  /**\n   * Used to detect code to be evaluated.\n   *\n   * @memberOf _.templateSettings\n   * @type RegExp\n   */\n  'evaluate': /<%([\\s\\S]+?)%>/g,\n\n  /**\n   * Used to detect `data` property values to inject.\n   *\n   * @memberOf _.templateSettings\n   * @type RegExp\n   */\n  'interpolate': reInterpolate,\n\n  /**\n   * Used to reference the data object in the template text.\n   *\n   * @memberOf _.templateSettings\n   * @type string\n   */\n  'variable': '',\n\n  /**\n   * Used to import variables into the compiled template.\n   *\n   * @memberOf _.templateSettings\n   * @type Object\n   */\n  'imports': {\n\n    /**\n     * A reference to the `lodash` function.\n     *\n     * @memberOf _.templateSettings.imports\n     * @type Function\n     */\n    '_': { 'escape': escape }\n  }\n};\n\nmodule.exports = templateSettings;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/times.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreateCallback = require('../internals/baseCreateCallback');\n\n/**\n * Executes the callback `n` times, returning an array of the results\n * of each callback execution. The callback is bound to `thisArg` and invoked\n * with one argument; (index).\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {number} n The number of times to execute the callback.\n * @param {Function} callback The function called per iteration.\n * @param {*} [thisArg] The `this` binding of `callback`.\n * @returns {Array} Returns an array of the results of each `callback` execution.\n * @example\n *\n * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n * // => [3, 6, 4]\n *\n * _.times(3, function(n) { mage.castSpell(n); });\n * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n *\n * _.times(3, function(n) { this.cast(n); }, mage);\n * // => also calls `mage.castSpell(n)` three times\n */\nfunction times(n, callback, thisArg) {\n  n = (n = +n) > -1 ? n : 0;\n  var index = -1,\n      result = Array(n);\n\n  callback = baseCreateCallback(callback, thisArg, 1);\n  while (++index < n) {\n    result[index] = callback(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/unescape.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar keys = require('../objects/keys'),\n    reEscapedHtml = require('../internals/reEscapedHtml'),\n    unescapeHtmlChar = require('../internals/unescapeHtmlChar');\n\n/**\n * The inverse of `_.escape` this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n * corresponding characters.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {string} string The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('Fred, Barney &amp; Pebbles');\n * // => 'Fred, Barney & Pebbles'\n */\nfunction unescape(string) {\n  return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);\n}\n\nmodule.exports = unescape;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/reEscapedHtml.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar htmlUnescapes = require('./htmlUnescapes'),\n    keys = require('../objects/keys');\n\n/** Used to match HTML entities and HTML characters */\nvar reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g');\n\nmodule.exports = reEscapedHtml;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/htmlUnescapes.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar htmlEscapes = require('./htmlEscapes'),\n    invert = require('../objects/invert');\n\n/** Used to convert HTML entities to characters */\nvar htmlUnescapes = invert(htmlEscapes);\n\nmodule.exports = htmlUnescapes;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/internals/unescapeHtmlChar.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar htmlUnescapes = require('./htmlUnescapes');\n\n/**\n * Used by `unescape` to convert HTML entities to characters.\n *\n * @private\n * @param {string} match The matched character to unescape.\n * @returns {string} Returns the unescaped character.\n */\nfunction unescapeHtmlChar(match) {\n  return htmlUnescapes[match];\n}\n\nmodule.exports = unescapeHtmlChar;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/node_modules/lodash-node/modern/utilities/uniqueId.js":"/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"node\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\n\n/** Used to generate unique IDs */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is provided the ID will be appended to it.\n *\n * @static\n * @memberOf _\n * @category Utilities\n * @param {string} [prefix] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return String(prefix == null ? '' : prefix) + id;\n}\n\nmodule.exports = uniqueId;\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/lib/XMLBuilder.js":"// Generated by CoffeeScript 1.6.3\n(function() {\n  var XMLBuilder, XMLDeclaration, XMLDocType, XMLElement, XMLStringifier, _;\n\n  _ = require('lodash-node');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLElement = require('./XMLElement');\n\n  module.exports = XMLBuilder = (function() {\n    function XMLBuilder(name, options) {\n      var root, temp;\n      if (name == null) {\n        throw new Error(\"Root element needs a name\");\n      }\n      if (options == null) {\n        options = {};\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n      temp = new XMLElement(this, 'doc');\n      root = temp.element(name);\n      root.isRoot = true;\n      root.documentObject = this;\n      this.rootObject = root;\n      if (!options.headless) {\n        root.declaration(options);\n        if ((options.pubID != null) || (options.sysID != null)) {\n          root.doctype(options);\n        }\n      }\n    }\n\n    XMLBuilder.prototype.root = function() {\n      return this.rootObject;\n    };\n\n    XMLBuilder.prototype.end = function(options) {\n      return toString(options);\n    };\n\n    XMLBuilder.prototype.toString = function(options) {\n      var indent, newline, pretty, r;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (options != null ? options.indent : void 0) || '  ';\n      newline = (options != null ? options.newline : void 0) || '\\n';\n      r = '';\n      if (this.xmldec != null) {\n        r += this.xmldec.toString(options);\n      }\n      if (this.doctype != null) {\n        r += this.doctype.toString(options);\n      }\n      r += this.rootObject.toString(options);\n      if (pretty && r.slice(-newline.length) === newline) {\n        r = r.slice(0, -newline.length);\n      }\n      return r;\n    };\n\n    return XMLBuilder;\n\n  })();\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/lib/XMLStringifier.js":"// Generated by CoffeeScript 1.6.3\n(function() {\n  var XMLStringifier,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalChar = __bind(this.assertLegalChar, this);\n      var key, value, _ref;\n      this.allowSurrogateChars = options != null ? options.allowSurrogateChars : void 0;\n      _ref = (options != null ? options.stringify : void 0) || {};\n      for (key in _ref) {\n        if (!__hasProp.call(_ref, key)) continue;\n        value = _ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.eleName = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.eleText = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.escape(val));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      val = '' + val || '';\n      if (val.match(/]]>/)) {\n        throw new Error(\"Invalid CDATA text: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(this.escape(val));\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attName = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      val = '' + val || '';\n      return this.escape(val);\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      val = '' + val || '';\n      if (!val.match(/[A-Za-z](?:[A-Za-z0-9._-]|-)*/)) {\n        throw new Error(\"Invalid encoding: \" + options.val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.convertListKey = '#list';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var chars, chr;\n      if (this.allowSurrogateChars) {\n        chars = /[\\u0000-\\u0008\\u000B-\\u000C\\u000E-\\u001F\\uFFFE-\\uFFFF]/;\n      } else {\n        chars = /[\\u0000-\\u0008\\u000B-\\u000C\\u000E-\\u001F\\uD800-\\uDFFF\\uFFFE-\\uFFFF]/;\n      }\n      chr = str.match(chars);\n      if (chr) {\n        throw new Error(\"Invalid character (\" + chr + \") in string: \" + str + \" at index \" + chr.index);\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.escape = function(str) {\n      return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/lib/XMLDeclaration.js":"// Generated by CoffeeScript 1.6.3\n(function() {\n  var XMLDeclaration, XMLNode, _,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  _ = require('lodash-node');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDeclaration = (function(_super) {\n    __extends(XMLDeclaration, _super);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var _ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (_.isObject(version)) {\n        _ref = version, version = _ref.version, encoding = _ref.encoding, standalone = _ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      if (version != null) {\n        this.version = this.stringify.xmlVersion(version);\n      }\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.clone = function() {\n      return _.create(XMLDeclaration.prototype, this);\n    };\n\n    XMLDeclaration.prototype.toString = function(options, level) {\n      var indent, newline, pretty, r, space;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (options != null ? options.indent : void 0) || '  ';\n      newline = (options != null ? options.newline : void 0) || '\\n';\n      level || (level = 0);\n      space = new Array(level + 1).join(indent);\n      r = '';\n      if (pretty) {\n        r += space;\n      }\n      r += '<?xml';\n      if (this.version != null) {\n        r += ' version=\"' + this.version + '\"';\n      }\n      if (this.encoding != null) {\n        r += ' encoding=\"' + this.encoding + '\"';\n      }\n      if (this.standalone != null) {\n        r += ' standalone=\"' + this.standalone + '\"';\n      }\n      r += '?>';\n      if (pretty) {\n        r += newline;\n      }\n      return r;\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/lib/XMLNode.js":"// Generated by CoffeeScript 1.6.3\n(function() {\n  var XMLNode, _,\n    __hasProp = {}.hasOwnProperty;\n\n  _ = require('lodash-node');\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent) {\n      this.parent = parent;\n      this.options = this.parent.options;\n      this.stringify = this.parent.stringify;\n    }\n\n    XMLNode.prototype.clone = function() {\n      throw new Error(\"Cannot clone generic XMLNode\");\n    };\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var item, key, lastChild, val, _i, _len, _ref;\n      lastChild = null;\n      if (attributes == null) {\n        attributes = {};\n      }\n      if (!_.isObject(attributes)) {\n        _ref = [attributes, text], text = _ref[0], attributes = _ref[1];\n      }\n      if (_.isArray(name)) {\n        for (_i = 0, _len = name.length; _i < _len; _i++) {\n          item = name[_i];\n          lastChild = this.element(item);\n        }\n      } else if (_.isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (_.isObject(name)) {\n        for (key in name) {\n          if (!__hasProp.call(name, key)) continue;\n          val = name[key];\n          if (!(val != null)) {\n            continue;\n          }\n          if (_.isFunction(val)) {\n            val = val.apply();\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && key.indexOf(this.stringify.convertPIKey) === 0) {\n            lastChild = this.instruction(key.substr(this.stringify.convertPIKey.length), val);\n          } else if (_.isObject(val)) {\n            if (!this.options.ignoreDecorators && this.stringify.convertListKey && key.indexOf(this.stringify.convertListKey) === 0 && _.isArray(val)) {\n              lastChild = this.element(val);\n            } else {\n              lastChild = this.element(key);\n              lastChild.element(val);\n            }\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name);\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, _ref;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element\");\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(_ref = [])), _ref;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var XMLElement, child, _ref;\n      if (attributes == null) {\n        attributes = {};\n      }\n      if (!_.isObject(attributes)) {\n        _ref = [attributes, text], text = _ref[0], attributes = _ref[1];\n      }\n      XMLElement = require('./XMLElement');\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var XMLText, child;\n      XMLText = require('./XMLText');\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var XMLCData, child;\n      XMLCData = require('./XMLCData');\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var XMLComment, child;\n      XMLComment = require('./XMLComment');\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var XMLRaw, child;\n      XMLRaw = require('./XMLRaw');\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var XMLDeclaration, doc, xmldec;\n      doc = this.document();\n      XMLDeclaration = require('./XMLDeclaration');\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      doc.xmldec = xmldec;\n      return doc.root();\n    };\n\n    XMLNode.prototype.doctype = function(pubID, sysID) {\n      var XMLDocType, doc, doctype;\n      doc = this.document();\n      XMLDocType = require('./XMLDocType');\n      doctype = new XMLDocType(doc, pubID, sysID);\n      doc.doctype = doctype;\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var child;\n      if (this.isRoot) {\n        return this;\n      }\n      child = this.parent;\n      while (!child.isRoot) {\n        child = child.parent;\n      }\n      return child;\n    };\n\n    XMLNode.prototype.document = function() {\n      return this.root().documentObject;\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().toString(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      if (this.isRoot) {\n        throw new Error(\"Root node has no siblings\");\n      }\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node\");\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      if (this.isRoot) {\n        throw new Error(\"Root node has no siblings\");\n      }\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node\");\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(xmlbuilder) {\n      var clonedRoot;\n      clonedRoot = xmlbuilder.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      return this.doctype(pubID, sysID);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/lib/XMLDocType.js":"// Generated by CoffeeScript 1.6.3\n(function() {\n  var XMLDocType, _;\n\n  _ = require('lodash-node');\n\n  module.exports = XMLDocType = (function() {\n    function XMLDocType(parent, pubID, sysID) {\n      var _ref, _ref1;\n      this.documentObject = parent;\n      this.stringify = this.documentObject.stringify;\n      this.children = [];\n      if (_.isObject(pubID)) {\n        _ref = pubID, pubID = _ref.pubID, sysID = _ref.sysID;\n      }\n      if (sysID == null) {\n        _ref1 = [pubID, sysID], sysID = _ref1[0], pubID = _ref1[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    XMLDocType.prototype.clone = function() {\n      return _.create(XMLDocType.prototype, this);\n    };\n\n    XMLDocType.prototype.element = function(name, value) {\n      var XMLDTDElement, child;\n      XMLDTDElement = require('./XMLDTDElement');\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var XMLDTDAttList, child;\n      XMLDTDAttList = require('./XMLDTDAttList');\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var XMLDTDEntity, child;\n      XMLDTDEntity = require('./XMLDTDEntity');\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var XMLDTDEntity, child;\n      XMLDTDEntity = require('./XMLDTDEntity');\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var XMLDTDNotation, child;\n      XMLDTDNotation = require('./XMLDTDNotation');\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.cdata = function(value) {\n      var XMLCData, child;\n      XMLCData = require('./XMLCData');\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.comment = function(value) {\n      var XMLComment, child;\n      XMLComment = require('./XMLComment');\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.instruction = function(target, value) {\n      var XMLProcessingInstruction, child;\n      XMLProcessingInstruction = require('./XMLProcessingInstruction');\n      child = new XMLProcessingInstruction(this, target, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.root = function() {\n      return this.documentObject.root();\n    };\n\n    XMLDocType.prototype.document = function() {\n      return this.documentObject;\n    };\n\n    XMLDocType.prototype.toString = function(options, level) {\n      var child, indent, newline, pretty, r, space, _i, _len, _ref;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (options != null ? options.indent : void 0) || '  ';\n      newline = (options != null ? options.newline : void 0) || '\\n';\n      level || (level = 0);\n      space = new Array(level + 1).join(indent);\n      r = '';\n      if (pretty) {\n        r += space;\n      }\n      r += '<!DOCTYPE ' + this.root().name;\n      if (this.pubID && this.sysID) {\n        r += ' PUBLIC \"' + this.pubID + '\" \"' + this.sysID + '\"';\n      } else if (this.sysID) {\n        r += ' SYSTEM \"' + this.sysID + '\"';\n      }\n      if (this.children.length > 0) {\n        r += ' [';\n        if (pretty) {\n          r += newline;\n        }\n        _ref = this.children;\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          r += child.toString(options, level + 1);\n        }\n        r += ']';\n      }\n      r += '>';\n      if (pretty) {\n        r += newline;\n      }\n      return r;\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocType.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocType.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root();\n    };\n\n    XMLDocType.prototype.doc = function() {\n      return this.document();\n    };\n\n    return XMLDocType;\n\n  })();\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/lib/XMLElement.js":"// Generated by CoffeeScript 1.6.3\n(function() {\n  var XMLAttribute, XMLElement, XMLNode, XMLProcessingInstruction, _,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  _ = require('lodash-node');\n\n  XMLNode = require('./XMLNode');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  module.exports = XMLElement = (function(_super) {\n    __extends(XMLElement, _super);\n\n    function XMLElement(parent, name, attributes) {\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name\");\n      }\n      this.name = this.stringify.eleName(name);\n      this.children = [];\n      this.instructions = [];\n      this.attributes = {};\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n    }\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, pi, _i, _len, _ref, _ref1;\n      clonedSelf = _.create(XMLElement.prototype, this);\n      clonedSelf.attributes = {};\n      _ref = this.attributes;\n      for (attName in _ref) {\n        if (!__hasProp.call(_ref, attName)) continue;\n        att = _ref[attName];\n        clonedSelf.attributes[attName] = att.clone();\n      }\n      clonedSelf.instructions = [];\n      _ref1 = this.instructions;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        pi = _ref1[_i];\n        clonedSelf.instructions.push(pi.clone());\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (_.isObject(name)) {\n        for (attName in name) {\n          if (!__hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (_.isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, _i, _len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name\");\n      }\n      if (_.isArray(name)) {\n        for (_i = 0, _len = name.length; _i < _len; _i++) {\n          attName = name[_i];\n          delete this.attributes[attName];\n        }\n      } else {\n        delete this.attributes[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, _i, _len;\n      if (_.isArray(target)) {\n        for (_i = 0, _len = target.length; _i < _len; _i++) {\n          insTarget = target[_i];\n          this.instruction(insTarget);\n        }\n      } else if (_.isObject(target)) {\n        for (insTarget in target) {\n          if (!__hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (_.isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.instructions.push(instruction);\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options, level) {\n      var att, child, indent, instruction, name, newline, pretty, r, space, _i, _j, _len, _len1, _ref, _ref1, _ref2;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (options != null ? options.indent : void 0) || '  ';\n      newline = (options != null ? options.newline : void 0) || '\\n';\n      level || (level = 0);\n      space = new Array(level + 1).join(indent);\n      r = '';\n      _ref = this.instructions;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        instruction = _ref[_i];\n        r += instruction.toString(options, level + 1);\n      }\n      if (pretty) {\n        r += space;\n      }\n      r += '<' + this.name;\n      _ref1 = this.attributes;\n      for (name in _ref1) {\n        if (!__hasProp.call(_ref1, name)) continue;\n        att = _ref1[name];\n        r += att.toString(options);\n      }\n      if (this.children.length === 0) {\n        r += '/>';\n        if (pretty) {\n          r += newline;\n        }\n      } else if (pretty && this.children.length === 1 && (this.children[0].value != null)) {\n        r += '>';\n        r += this.children[0].value;\n        r += '</' + this.name + '>';\n        r += newline;\n      } else {\n        r += '>';\n        if (pretty) {\n          r += newline;\n        }\n        _ref2 = this.children;\n        for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {\n          child = _ref2[_j];\n          r += child.toString(options, level + 1);\n        }\n        if (pretty) {\n          r += space;\n        }\n        r += '</' + this.name + '>';\n        if (pretty) {\n          r += newline;\n        }\n      }\n      return r;\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/lib/XMLAttribute.js":"// Generated by CoffeeScript 1.6.3\n(function() {\n  var XMLAttribute, _;\n\n  _ = require('lodash-node');\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.stringify = parent.stringify;\n      if (name == null) {\n        throw new Error(\"Missing attribute name\");\n      }\n      if (value == null) {\n        throw new Error(\"Missing attribute value\");\n      }\n      this.name = this.stringify.attName(name);\n      this.value = this.stringify.attValue(value);\n    }\n\n    XMLAttribute.prototype.clone = function() {\n      return _.create(XMLAttribute.prototype, this);\n    };\n\n    XMLAttribute.prototype.toString = function(options, level) {\n      return ' ' + this.name + '=\"' + this.value + '\"';\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/node_modules/xmlbuilder/lib/XMLProcessingInstruction.js":"// Generated by CoffeeScript 1.6.3\n(function() {\n  var XMLProcessingInstruction, _;\n\n  _ = require('lodash-node');\n\n  module.exports = XMLProcessingInstruction = (function() {\n    function XMLProcessingInstruction(parent, target, value) {\n      this.stringify = parent.stringify;\n      if (target == null) {\n        throw new Error(\"Missing instruction target\");\n      }\n      this.target = this.stringify.insTarget(target);\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return _.create(XMLProcessingInstruction.prototype, this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options, level) {\n      var indent, newline, pretty, r, space;\n      pretty = (options != null ? options.pretty : void 0) || false;\n      indent = (options != null ? options.indent : void 0) || '  ';\n      newline = (options != null ? options.newline : void 0) || '\\n';\n      level || (level = 0);\n      space = new Array(level + 1).join(indent);\n      r = '';\n      if (pretty) {\n        r += space;\n      }\n      r += '<?';\n      r += this.target;\n      if (this.value) {\n        r += ' ' + this.value;\n      }\n      r += '?>';\n      if (pretty) {\n        r += newline;\n      }\n      return r;\n    };\n\n    return XMLProcessingInstruction;\n\n  })();\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/node_modules/plist/lib/node.js":"/**\n * Module dependencies.\n */\n\nvar fs = require('fs');\nvar parse = require('./parse');\nvar deprecate = require('util-deprecate');\n\n/**\n * Module exports.\n */\n\nexports.parseFile = deprecate(parseFile, '`parseFile()` is deprecated. ' +\n  'Use `parseString()` instead.');\nexports.parseFileSync = deprecate(parseFileSync, '`parseFileSync()` is deprecated. ' +\n  'Use `parseStringSync()` instead.');\n\n/**\n * Parses file `filename` as a .plist file.\n * Invokes `fn` callback function when done.\n *\n * @param {String} filename - name of the file to read\n * @param {Function} fn - callback function\n * @api public\n * @deprecated use parseString() instead\n */\n\nfunction parseFile (filename, fn) {\n  fs.readFile(filename, { encoding: 'utf8' }, onread);\n  function onread (err, inxml) {\n    if (err) return fn(err);\n    parse.parseString(inxml, fn);\n  }\n}\n\n/**\n * Parses file `filename` as a .plist file.\n * Returns a  when done.\n *\n * @param {String} filename - name of the file to read\n * @param {Function} fn - callback function\n * @api public\n * @deprecated use parseStringSync() instead\n */\n\nfunction parseFileSync (filename) {\n  var inxml = fs.readFileSync(filename, 'utf8');\n  return parse.parseStringSync(inxml);\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/cordova/cordova-android/node_modules/cordova-common/src/util/plist-helpers.js":"/*\n *\n * Copyright 2013 Brett Rudd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n\n// contains PLIST utility functions\nvar __     = require('underscore');\nvar plist = require('plist');\n\n// adds node to doc at selector\nmodule.exports.graftPLIST = graftPLIST;\nfunction graftPLIST(doc, xml, selector) {\n    var obj = plist.parse('<plist>'+xml+'</plist>');\n\n    var node = doc[selector];\n    if (node && Array.isArray(node) && Array.isArray(obj)){\n        node = node.concat(obj);\n        for (var i =0;i<node.length; i++){\n            for (var j=i+1; j<node.length; ++j) {\n              if (nodeEqual(node[i], node[j]))\n                    node.splice(j--,1);\n            }\n        }\n        doc[selector] = node;\n    } else {\n        //plist uses objects for <dict>. If we have two dicts we merge them instead of\n        // overriding the old one. See CB-6472\n        if (node && __.isObject(node) && __.isObject(obj) && !__.isDate(node) && !__.isDate(obj)){//arrays checked above\n            __.extend(obj,node);\n        }\n        doc[selector] = obj;\n    }\n\n    return true;\n}\n\n// removes node from doc at selector\nmodule.exports.prunePLIST = prunePLIST;\nfunction prunePLIST(doc, xml, selector) {\n    var obj = plist.parse('<plist>'+xml+'</plist>');\n\n    pruneOBJECT(doc, selector, obj);\n\n    return true;\n}\n\nfunction pruneOBJECT(doc, selector, fragment) {\n    if (Array.isArray(fragment) && Array.isArray(doc[selector])) {\n        var empty = true;\n        for (var i in fragment) {\n            for (var j in doc[selector]) {\n                empty = pruneOBJECT(doc[selector], j, fragment[i]) && empty;\n            }\n        }\n        if (empty)\n        {\n            delete doc[selector];\n            return true;\n        }\n    }\n    else if (nodeEqual(doc[selector], fragment)) {\n        delete doc[selector];\n        return true;\n    }\n\n    return false;\n}\n\nfunction nodeEqual(node1, node2) {\n    if (typeof node1 != typeof node2)\n        return false;\n    else if (typeof node1 == 'string') {\n        node2 = escapeRE(node2).replace(new RegExp('\\\\$[a-zA-Z0-9-_]+','gm'),'(.*?)');\n        return new RegExp('^' + node2 + '$').test(node1);\n    }\n    else {\n        for (var key in node2) {\n            if (!nodeEqual(node1[key], node2[key])) return false;\n        }\n        return true;\n    }\n}\n\n// escape string for use in regex\nfunction escapeRE(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '$&');\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/upgrade-project.js":"var fs = require('fs');\nvar Q = require('q');\nvar path = require('path');\nvar shelljs = require('shelljs');\nvar __ = require('underscore');\nvar utils = require('./utils');\nvar cordova = require('cordova');\nvar hooks = require('./hooks');\n\n// Exports\nexports.upgradeProject = upgradeProject;\nexports.upgradeProjectIfStale = upgradeProjectIfStale;\n\n// The list of platforms we currently have installed\nfunction getInstalledPlatfroms() {\n  return ['ios', 'android'].filter(function(p){\n    return fs.existsSync(path.join('platforms', p));\n  });\n}\n\n// Get the list of supported platforms. Returns a promise.\nfunction getSupportedPlatforms() {\n  var plats = [];\n  return require('./tools-check')()\n  .then(function(toolsCheckResults) {\n    if (toolsCheckResults.hasAndroidPlatform) {\n      plats.push('android');\n    }\n    if (toolsCheckResults.hasXcode ) {\n      plats.push('ios');\n    }\n    return plats;\n  });\n}\n\n// Get the list of all plugins managed by CCA\nfunction getCcaPlugins() {\n  var pluginMaps = require('cca-manifest-logic').pluginMaps;\n  // The list of plugins is constructed from all plugin IDs in:\n  // pluginMaps.DEFAULT_PLUGINS (Array)\n  // pluginMaps.*_MAP (objects)\n  var ccaPlugins = __.map(pluginMaps, function(val, key) {\n    return /_MAP/.test(key) ? __.values(val) : [];\n  });\n  ccaPlugins.push(pluginMaps.DEFAULT_PLUGINS);\n  ccaPlugins = __.uniq(__.flatten(ccaPlugins));\n\n  return ccaPlugins;\n}\n\n\n// This function is run on almost any cca invocation\n// It will run \"upgrade\" if either:\n//  1. The project has not platforms installed\n//  2. The file ./platforms/created-with-cca-version contains older version string\n//  3. The file ./platforms/created-with-cca-version does not exist\nfunction upgradeProjectIfStale(skipPrompt) {\n  var packageVersion = require('../package').version;\n  var installedPlatfroms = getInstalledPlatfroms();\n\n  if (!installedPlatfroms.length) {\n    // No platforms installed yet, (ab)use upgradeProject(skipPrompt=true) to install both.\n    // Ideally we would do this in pre-prepare, but cordova doesn't run pre-prepare scripts if there\n    // are no target platforms, and its unclear how to make it do so with a difference concept\n    // for pre-prepare scripts.\n    return exports.upgradeProject(true);\n  } else {\n\n    var versionFile = path.join('platforms', 'created-with-cca-version');\n    var createdWith;\n    if (fs.existsSync(versionFile)) {\n      createdWith = fs.readFileSync(versionFile, 'utf-8').trim();\n    }\n    if (createdWith == packageVersion) {\n      return Q();\n    } else {\n      // The platforms/created-with-cca-version file does not exist or contains older version string. Upgrading.\n      console.log('This project was not upgraded to cca v' + packageVersion + ' yet.  Attempting to upgrade now...');\n      return exports.upgradeProject(skipPrompt);\n    }\n  }\n}\n\n\nfunction upgradeProject(skipPrompt) {\n  var argv = require('optimist')\n      .options('link', { type: 'boolean' })\n      .options('verbose', { type: 'boolean', alias: 'd' })\n      .argv;\n  var hadPlatforms = [];\n\n  return Q()\n  .then(function(){\n    if (skipPrompt) return 'y';\n    return utils.waitForKey('Warning: Upgrade will replace all files in platforms and plugins. Continue? [y/N] ');\n  })\n  .then(function(key) {\n    if (key != 'y' && key != 'Y') {\n      return Q.reject('Okay, nevermind.');\n    }\n  })\n  .then(function() {\n    // Upgrading!\n\n    // We don't want the pre/post prepare hooks to fire during upgrade.\n    hooks.unregisterHooks();\n\n    // Remove the old file based pre/post prepare hooks\n    // TODO: Remove this later. Last version to use file based hooks was 4.0.0 released in Oct 2014.\n    shelljs.rm('-f', path.join('hooks', 'before_prepare', 'cca-pre-prepare.js'));\n    shelljs.rm('-f', path.join('hooks', 'after_prepare', 'cca-post-prepare.js'));\n\n    // Remember what platforms we had before deleting them. If we only had one, don't install the other after upgrade.\n    hadPlatforms = getInstalledPlatfroms();\n    shelljs.rm('-rf', 'platforms');\n\n    shelljs.rm('-f', path.join('plugins', 'android.json'));\n    shelljs.rm('-f', path.join('plugins', 'ios.json'));\n\n    var installedPlugins = cordova.cordova_lib.PluginInfo.loadPluginsDir('plugins');\n    installedPlugins = __.pluck(installedPlugins, 'id');\n\n    // Only remove the CCA managed plugins\n    var allCcaPlugins = getCcaPlugins();\n    var pluginsToRemove = __.intersection(allCcaPlugins, installedPlugins);\n    if (pluginsToRemove && pluginsToRemove.length) {\n      return require('./cordova-commands').runCmd(['plugin', 'rm', pluginsToRemove]);\n    }\n  })\n  .then(function() {\n    console.log('## First-time build. Detecting available SDKs:');\n    return getSupportedPlatforms();\n  })\n  .then(function(plats) {\n    if (plats.length) {\n      // If this is a real upgrade, only install the platforms we had before.\n      if (hadPlatforms.length) {\n        plats = __.intersection(plats, hadPlatforms);\n      }\n      var opts = {\n        link: argv.link,\n        verbose: argv.verbose\n      };\n      return require('./cordova-commands').runCmd(['platform', 'add', plats, opts]);\n    }\n  })\n  .then(function() {\n    // Turn the hooks back on and fire prepare. The pre-prepare hook is what\n    // installs all the cca plugins back.\n    hooks.registerHooks();\n    return cordova.raw.prepare();\n  })\n  .then(require('./write-out-cca-version'));\n}\n","/home/travis/build/npmtest/node-npmtest-cca/node_modules/cca/src/write-out-cca-version.js":"var fs = require('fs');\nvar path = require('path');\nvar Q = require('q');\n\nmodule.exports = exports = function writeOutCcaVersion() {\n  var packageVersion = require('../package').version;\n  if (!fs.existsSync(path.join('platforms'))) {\n    return Q.reject('Must have a platforms/ directory to write out the cca version used to add them.');\n  }\n  return Q.ninvoke(fs, 'writeFile', path.join('platforms', 'created-with-cca-version'), packageVersion, { encoding: 'utf-8' });\n};\n"}